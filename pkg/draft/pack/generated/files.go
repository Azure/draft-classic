// Code generated by go-bindata.
// sources:
// ../../../../packs/README.md
// ../../../../packs/dotnetcore/.dockerignore
// ../../../../packs/dotnetcore/Dockerfile
// ../../../../packs/dotnetcore/NOTICE
// ../../../../packs/dotnetcore/chart/.helmignore
// ../../../../packs/dotnetcore/chart/Chart.yaml
// ../../../../packs/dotnetcore/chart/templates/NOTES.txt
// ../../../../packs/dotnetcore/chart/templates/_helpers.tpl
// ../../../../packs/dotnetcore/chart/templates/deployment.yaml
// ../../../../packs/dotnetcore/chart/templates/ingress.yaml
// ../../../../packs/dotnetcore/chart/templates/service.yaml
// ../../../../packs/dotnetcore/chart/values.yaml
// ../../../../packs/dotnetcore/detect
// ../../../../packs/golang/.dockerignore
// ../../../../packs/golang/Dockerfile
// ../../../../packs/golang/NOTICE
// ../../../../packs/golang/chart/.helmignore
// ../../../../packs/golang/chart/Chart.yaml
// ../../../../packs/golang/chart/templates/NOTES.txt
// ../../../../packs/golang/chart/templates/_helpers.tpl
// ../../../../packs/golang/chart/templates/deployment.yaml
// ../../../../packs/golang/chart/templates/ingress.yaml
// ../../../../packs/golang/chart/templates/service.yaml
// ../../../../packs/golang/chart/values.yaml
// ../../../../packs/golang/detect
// ../../../../packs/gradle/.dockerignore
// ../../../../packs/gradle/Dockerfile
// ../../../../packs/gradle/NOTICE
// ../../../../packs/gradle/chart/.helmignore
// ../../../../packs/gradle/chart/Chart.yaml
// ../../../../packs/gradle/chart/templates/NOTES.txt
// ../../../../packs/gradle/chart/templates/_helpers.tpl
// ../../../../packs/gradle/chart/templates/deployment.yaml
// ../../../../packs/gradle/chart/templates/ingress.yaml
// ../../../../packs/gradle/chart/templates/service.yaml
// ../../../../packs/gradle/chart/values.yaml
// ../../../../packs/gradle/detect
// ../../../../packs/maven/.dockerignore
// ../../../../packs/maven/Dockerfile
// ../../../../packs/maven/NOTICE
// ../../../../packs/maven/chart/.helmignore
// ../../../../packs/maven/chart/Chart.yaml
// ../../../../packs/maven/chart/templates/NOTES.txt
// ../../../../packs/maven/chart/templates/_helpers.tpl
// ../../../../packs/maven/chart/templates/deployment.yaml
// ../../../../packs/maven/chart/templates/ingress.yaml
// ../../../../packs/maven/chart/templates/service.yaml
// ../../../../packs/maven/chart/values.yaml
// ../../../../packs/maven/detect
// ../../../../packs/node/.dockerignore
// ../../../../packs/node/Dockerfile
// ../../../../packs/node/NOTICE
// ../../../../packs/node/chart/.helmignore
// ../../../../packs/node/chart/Chart.yaml
// ../../../../packs/node/chart/templates/NOTES.txt
// ../../../../packs/node/chart/templates/_helpers.tpl
// ../../../../packs/node/chart/templates/deployment.yaml
// ../../../../packs/node/chart/templates/ingress.yaml
// ../../../../packs/node/chart/templates/service.yaml
// ../../../../packs/node/chart/values.yaml
// ../../../../packs/node/detect
// ../../../../packs/php/.dockerignore
// ../../../../packs/php/Dockerfile
// ../../../../packs/php/NOTICE
// ../../../../packs/php/chart/.helmignore
// ../../../../packs/php/chart/Chart.yaml
// ../../../../packs/php/chart/templates/NOTES.txt
// ../../../../packs/php/chart/templates/_helpers.tpl
// ../../../../packs/php/chart/templates/deployment.yaml
// ../../../../packs/php/chart/templates/ingress.yaml
// ../../../../packs/php/chart/templates/service.yaml
// ../../../../packs/php/chart/values.yaml
// ../../../../packs/php/detect
// ../../../../packs/python/.dockerignore
// ../../../../packs/python/Dockerfile
// ../../../../packs/python/NOTICE
// ../../../../packs/python/chart/.helmignore
// ../../../../packs/python/chart/Chart.yaml
// ../../../../packs/python/chart/templates/NOTES.txt
// ../../../../packs/python/chart/templates/_helpers.tpl
// ../../../../packs/python/chart/templates/deployment.yaml
// ../../../../packs/python/chart/templates/ingress.yaml
// ../../../../packs/python/chart/templates/service.yaml
// ../../../../packs/python/chart/values.yaml
// ../../../../packs/python/detect
// ../../../../packs/ruby/.dockerignore
// ../../../../packs/ruby/Dockerfile
// ../../../../packs/ruby/NOTICE
// ../../../../packs/ruby/chart/.helmignore
// ../../../../packs/ruby/chart/Chart.yaml
// ../../../../packs/ruby/chart/templates/NOTES.txt
// ../../../../packs/ruby/chart/templates/_helpers.tpl
// ../../../../packs/ruby/chart/templates/deployment.yaml
// ../../../../packs/ruby/chart/templates/ingress.yaml
// ../../../../packs/ruby/chart/templates/service.yaml
// ../../../../packs/ruby/chart/values.yaml
// ../../../../packs/ruby/detect
// DO NOT EDIT!

package generated

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _readmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x51\xc1\x8a\xdb\x30\x14\xbc\xeb\x2b\x06\xda\x43\x0b\x1b\x1b\x7a\xec\x6d\xbb\xdb\x43\x29\x2d\x39\xec\x7d\xf5\x22\x3f\x47\x8f\xc8\x92\x91\x9e\x09\x86\x7c\x7c\x91\x92\xe0\xb4\x15\x18\xec\x79\x33\x7a\xe3\x99\x0f\xf8\xb6\x48\xd0\x9d\x44\xec\xc9\x9d\x8a\x31\x6f\x5e\x0a\x06\xc9\xec\x34\xe5\x15\x2e\x45\x25\x89\x05\x87\x3b\xef\x35\xd3\xa8\x98\x2b\xbb\x33\xe6\xfd\xc7\x88\x35\x2d\xa0\xcc\x90\xa8\x9c\xb9\x28\x0f\x90\x08\x97\x99\x54\xe2\xb1\x8e\x33\xd2\x39\x5e\x35\xef\x4f\x8d\xef\x28\xa2\xc8\x34\x87\xf5\x4a\x64\xa8\x4f\x85\x4d\xe3\x54\x79\x53\x85\xe4\x28\xc0\x7e\xfc\x34\xb4\xa5\x3e\x4d\xfc\xb9\x6f\x14\xbb\x79\xec\x8c\xd9\xdf\x55\xfa\xb7\xfb\xea\x8a\x16\x4d\x13\xa9\x38\x0a\x61\x6d\x1e\xe8\xd8\x1c\x6a\x82\x7a\x06\xcd\x73\x10\x47\x2a\x29\x76\x78\xf3\x6c\xc6\x94\x27\x52\xa4\xf1\xdf\xdb\xa4\x7c\x35\xc6\x5a\x7b\x35\xd9\x1b\xe0\x52\x9f\x1d\xf6\xcf\x2f\x3f\x7f\x3f\xff\xfa\x5e\xbf\x50\xcf\x65\x7b\xdb\xc1\x79\xca\xda\x6f\xc8\x0d\x7e\xa9\x70\xb7\xd2\x14\xfe\x1b\x75\x5d\xf7\x78\xc1\x6b\x72\x27\xce\xa3\x04\x7e\x44\x07\x56\x76\xfa\x88\xdc\x64\x9b\xa7\x2f\x06\xb7\x73\xd9\xd5\x61\xf5\x7e\xcb\xaa\x26\x73\x58\xe2\x10\x78\xc0\x52\x6a\x4d\x76\xa2\x13\xe3\xc8\x91\x33\x29\xdb\x27\x9c\xbd\x38\x8f\xb3\x84\x70\xaf\x88\x70\x90\x48\x79\x45\xe6\x39\x73\xe1\xa8\x2d\x36\xd3\xa2\xe2\xeb\x8f\x82\xe2\x80\xa2\x29\xd7\x46\x49\x6b\x29\x76\x3e\x1d\xfb\xd6\x60\xeb\xae\xbf\xef\x18\x6c\x67\xfe\x04\x00\x00\xff\xff\x90\xe3\xbf\x5b\x81\x02\x00\x00")

func readmeMdBytes() ([]byte, error) {
	return bindataRead(
		_readmeMd,
		"README.md",
	)
}

func readmeMd() (*asset, error) {
	bytes, err := readmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "README.md", size: 641, mode: os.FileMode(420), modTime: time.Unix(1497983755, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dotnetcoreDockerignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xc9\x4f\xce\x4e\x2d\x4a\xcb\xcc\x49\xe5\x4a\x29\x4a\x4c\x2b\xd1\x2b\xc9\xcf\xcd\xe1\x4a\xce\x48\x2c\x2a\xd1\xe7\xf2\xf3\x0f\xf1\x74\x76\xe5\x4a\xca\xcc\xd3\xe7\xca\x4f\xca\xd2\xe7\x02\x04\x00\x00\xff\xff\x56\x7a\x40\x27\x2e\x00\x00\x00")

func dotnetcoreDockerignoreBytes() ([]byte, error) {
	return bindataRead(
		_dotnetcoreDockerignore,
		"dotnetcore/.dockerignore",
	)
}

func dotnetcoreDockerignore() (*asset, error) {
	bytes, err := dotnetcoreDockerignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "dotnetcore/.dockerignore", size: 46, mode: os.FileMode(420), modTime: time.Unix(1498077074, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dotnetcoreDockerfile = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x90\x51\x4b\xc3\x30\x14\x46\xdf\xfb\x2b\xae\x30\xd9\x56\x48\xe2\xde\xa4\x9b\x03\xd1\x09\x43\x6c\x47\x9d\xe8\x70\x32\xb2\xf4\xd6\x45\xd2\x24\x34\x37\xa0\x88\xff\x5d\x9c\x4e\x9d\xbe\x9e\x2f\x9c\x5c\xce\x45\x59\x5c\x41\xa3\x55\xeb\x82\xab\x49\xc8\xe0\x2d\x92\x72\x2d\xb2\x75\xd4\xa6\xca\x06\x7c\x90\xdc\x16\xe5\xe5\xf9\xb4\x04\x21\xbd\x4f\x26\x77\xb3\xe2\x7a\x02\xc7\x47\xc9\x59\x31\x5b\x00\x07\x9e\x94\x37\x39\x54\x8e\x2c\x12\xb4\x18\xc8\xb5\xf8\x1b\xf9\xb8\x36\x3a\x6c\x80\x31\x17\xc9\x47\x02\xe1\x22\x09\x60\x4c\x39\x5b\xeb\xc7\xd8\x4a\xd2\xce\x42\x89\x06\x65\x40\x10\x8d\x7c\x56\x3e\x2a\x17\x2d\x6d\x35\x01\x2b\x60\x16\xba\x21\xe3\xe9\xe8\x34\x04\x6c\xd6\xe6\x25\x97\x0d\x8e\x97\x3d\x9e\x2e\xfb\x23\xb1\x07\x79\x9a\x2d\x07\x99\xef\x42\xca\x55\xf0\xad\x7b\x82\x31\xac\x56\xf2\xeb\x89\x95\xcd\xe7\x71\xba\x86\x7b\x38\x00\x16\xfe\x8c\xf0\x30\x04\xda\xa0\x85\x5a\x1b\xfc\x00\x27\x9d\x9e\x09\xdf\xb2\xfe\x10\x50\x6d\x1c\x74\x5e\x77\xfb\x21\x4f\xdf\xfe\x7d\x31\x84\x5a\xff\x64\x73\x91\x92\x49\x3e\x2f\x17\xb3\x62\x9a\xcf\x77\x5d\xb6\x19\x3a\x3d\x25\x69\x1b\x56\xec\x1b\xfa\xbc\x32\x26\x79\x0f\x00\x00\xff\xff\xca\x74\x96\x2b\x9e\x01\x00\x00")

func dotnetcoreDockerfileBytes() ([]byte, error) {
	return bindataRead(
		_dotnetcoreDockerfile,
		"dotnetcore/Dockerfile",
	)
}

func dotnetcoreDockerfile() (*asset, error) {
	bytes, err := dotnetcoreDockerfileBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "dotnetcore/Dockerfile", size: 414, mode: os.FileMode(420), modTime: time.Unix(1498077074, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dotnetcoreNotice = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x51\x4d\x8f\xe3\x26\x18\xbe\xfb\x57\x3c\x9a\xd3\xae\x84\xa6\x1f\x97\x4a\x7b\x63\x6c\x12\xa3\x3a\x10\x01\xd9\x34\x47\x62\x93\x31\x95\x63\x22\x83\x3b\x9a\x7f\x5f\x41\xb2\x9d\x9d\x9e\x2c\xf3\xbe\xcf\xe7\xbb\xe3\x06\x9d\xef\xdd\x1c\xdd\xb7\xaa\xaa\xc3\xed\x7d\xf1\xaf\x63\xc2\x97\xfa\x2b\x7e\xff\xf5\xb7\x3f\x50\x4f\x61\x1d\xce\x36\x3a\xe8\x30\xad\xc9\x87\x39\x12\xe8\x65\xaa\xaa\xbd\x5b\xae\x3e\x46\x1f\x66\xf8\x88\xd1\x2d\xee\xfc\x8e\xd7\xc5\xce\xc9\x0d\x04\x97\xc5\x39\x84\x0b\xfa\xd1\x2e\xaf\x8e\x20\x05\xd8\xf9\x1d\x37\xb7\xc4\x30\x23\x9c\x93\xf5\xb3\x9f\x5f\x61\xd1\x87\xdb\x7b\xde\x4c\xa3\x8f\x88\xe1\x92\xde\xec\xe2\x60\xe7\x01\x36\xc6\xd0\x7b\x9b\xdc\x80\x21\xf4\xeb\xd5\xcd\xc9\x66\x07\xb8\xf8\xc9\x45\x7c\x49\xa3\xc3\x93\x7e\x20\x9e\xbe\x16\x91\xc1\xd9\x09\x7e\x46\x9e\xfd\x18\xe1\xcd\xa7\x31\xac\x09\x8b\x8b\x69\xf1\x7d\xe6\x20\xf0\x73\x3f\xad\x43\xf6\xf0\x63\x3c\xf9\xab\x7f\x28\x64\x78\x69\x22\x66\xd2\x35\x3a\x52\x7c\x12\x5c\xc3\xe0\x2f\xf9\xeb\x4a\xac\xdb\x7a\x9e\x7c\x1c\x09\x06\x9f\xa9\xcf\x6b\x72\x04\x31\x3f\x96\x4e\x49\xce\xf1\x4b\x58\x10\xdd\x34\x65\x06\xef\xe2\x3d\xeb\x87\xbb\xb2\x93\x55\x6e\xb9\xd0\xf4\xa8\xa8\xe8\xbe\x8d\xe1\xfa\x39\x89\x8f\xb8\xac\xcb\xec\xe3\xe8\x0a\x66\x08\x88\xa1\x28\xfe\xed\xfa\x94\x5f\xf2\xfa\x25\x4c\x53\x78\xcb\xd1\xfa\x30\x0f\xbe\x5c\xed\x5b\x55\x99\xd1\xc1\x9e\xc3\x3f\xae\x64\xb9\x1f\x7a\x0e\xc9\xf7\xf7\xba\xcb\x01\x6e\x1f\x57\x7d\x8c\xe2\x68\xa7\x09\x67\xf7\x28\xcc\x0d\xb9\x5e\xfb\x53\x9c\x25\xcb\xc7\x64\xe7\xe4\xed\x84\x5b\x58\x8a\xde\xff\x63\x3e\x57\x95\x69\x19\xb4\xdc\x98\x23\x55\x0c\x5c\x63\xaf\xe4\x77\xde\xb0\x06\x4f\x54\x83\xeb\x27\x82\x23\x37\xad\x3c\x18\x1c\xa9\x52\x54\x98\x13\xe4\x06\x54\x9c\xf0\x27\x17\x0d\x01\xfb\x6b\xaf\x98\xd6\x90\x0a\x7c\xb7\xef\x38\x6b\x08\xb8\xa8\xbb\x43\xc3\xc5\x16\x2f\x07\x03\x21\x0d\x3a\xbe\xe3\x86\x35\x30\x12\x59\xf0\x41\xc5\x99\xce\x64\x3b\xa6\xea\x96\x0a\x43\x5f\x78\xc7\xcd\x89\x60\xc3\x8d\xc8\x9c\x1b\xa9\x40\xb1\xa7\xca\xf0\xfa\xd0\x51\x85\xfd\x41\xed\xa5\x66\xa0\xa2\x81\x90\x82\x8b\x8d\xe2\x62\xcb\x76\x4c\x98\x67\x70\x01\x21\xc1\xbe\x33\x61\xa0\x5b\xda\x75\x45\x8a\x1e\x4c\x2b\x55\xf1\x57\xcb\xfd\x49\xf1\x6d\x6b\xd0\xca\xae\x61\x4a\xe3\x85\xa1\xe3\xf4\xa5\x63\x77\x29\x71\x42\xdd\x51\xbe\x23\x68\xe8\x8e\x6e\x59\x41\x49\xd3\x32\x55\xd6\x1e\xee\x8e\x2d\x2b\x4f\x5c\x80\x0a\xd0\xda\x70\x29\x72\x8c\x5a\x0a\xa3\x68\x6d\x08\x8c\x54\xe6\x3f\xe8\x91\x6b\x46\x40\x15\xd7\xb9\x90\x8d\x92\x3b\x82\x5c\xa7\xdc\x94\xce\x44\xc6\x09\x76\x67\xc9\x55\xe3\xd3\x45\xa4\x2a\xff\x07\xcd\x3e\xbc\x34\x8c\x76\x5c\x6c\x75\x06\xff\xbc\xfc\x5c\xfd\x1b\x00\x00\xff\xff\x5a\xfb\xde\x69\x3a\x04\x00\x00")

func dotnetcoreNoticeBytes() ([]byte, error) {
	return bindataRead(
		_dotnetcoreNotice,
		"dotnetcore/NOTICE",
	)
}

func dotnetcoreNotice() (*asset, error) {
	bytes, err := dotnetcoreNoticeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "dotnetcore/NOTICE", size: 1082, mode: os.FileMode(420), modTime: time.Unix(1498077074, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dotnetcoreChartHelmignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x8e\xc1\x6a\x23\x31\x0c\x86\xef\x7a\x8a\x7f\x99\xcb\xee\xb0\x78\x1e\x22\xd9\xc3\x9e\x5a\x48\xc9\xb5\x78\x66\x14\x5b\x89\x47\x36\xb6\x26\x69\x7b\xe8\xb3\x97\x24\x84\xf6\xf2\x81\x3e\x24\xf1\x75\x78\xf6\x66\x5c\xb5\xc1\x32\x24\x68\xae\x8c\x4b\x64\xc5\xb8\x4a\x9a\x45\x03\x8a\x9f\x4e\x3e\x70\x73\xd4\xe1\x25\x4a\x43\x5b\x4b\xc9\xd5\x1a\x5a\xe4\x94\x10\x52\x1e\xb1\x78\x9b\xa2\x68\xf8\x8b\xca\xc9\x9b\x9c\x19\xc5\x5b\xfc\xe1\xbd\xce\xd4\x41\x39\x78\x93\xac\xf8\x5d\x2a\x1f\xe4\x8d\x67\x5c\xc4\x22\x7e\xfd\x71\x78\xd2\xf4\x8e\xac\xb7\xcb\x6b\x12\x0a\x57\x24\x51\x76\xe4\xb6\xbb\xd7\x9d\xe5\xca\xd4\x61\x93\x97\x25\x2b\xf6\x9b\x1d\x66\xa9\x8d\x5c\x10\x1b\x6e\xbc\xe7\x93\x1b\x3f\xea\x70\xe3\x43\xc4\x30\x5c\xf1\x18\xdb\x59\x87\xef\x47\xa3\x9f\x4e\x6b\xc1\x41\x12\x37\xea\x5d\xbb\x14\xea\xdd\xe8\x4f\xd4\x3b\x5b\x0a\xf5\x9f\xd4\x61\xef\xab\xe4\xb5\xe1\xff\xf6\x5f\x23\x57\x6a\x3e\xf2\x64\xe4\x64\x66\x3f\xdc\xf7\x6a\x3e\xd2\x57\x00\x00\x00\xff\xff\xbc\x5b\x94\x77\x4d\x01\x00\x00")

func dotnetcoreChartHelmignoreBytes() ([]byte, error) {
	return bindataRead(
		_dotnetcoreChartHelmignore,
		"dotnetcore/chart/.helmignore",
	)
}

func dotnetcoreChartHelmignore() (*asset, error) {
	bytes, err := dotnetcoreChartHelmignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "dotnetcore/chart/.helmignore", size: 333, mode: os.FileMode(420), modTime: time.Unix(1498077074, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dotnetcoreChartChartYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xca\x4b\xcc\x4d\xb5\x52\x48\xc9\x2f\xc9\x4b\x2d\x49\xce\x2f\x4a\xe5\x02\x04\x00\x00\xff\xff\xe1\x52\x51\x0c\x11\x00\x00\x00")

func dotnetcoreChartChartYamlBytes() ([]byte, error) {
	return bindataRead(
		_dotnetcoreChartChartYaml,
		"dotnetcore/chart/Chart.yaml",
	)
}

func dotnetcoreChartChartYaml() (*asset, error) {
	bytes, err := dotnetcoreChartChartYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "dotnetcore/chart/Chart.yaml", size: 17, mode: os.FileMode(420), modTime: time.Unix(1498077074, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dotnetcoreChartTemplatesNotesTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x92\x51\x8b\xda\x4e\x14\x47\xdf\xf7\x53\xfc\x08\x82\xff\xff\x83\x63\x9f\x85\x7d\x69\x2b\x45\x58\x54\xec\x76\xa1\x94\x52\xae\x93\xab\x4e\x77\x32\x13\x72\x6f\x74\x25\xe4\xbb\x97\x89\xd6\xcd\xda\xb2\x94\xd2\xbc\x65\x42\xce\x1c\xee\xb9\x37\x4d\x33\x82\xdb\xc0\xc6\xa0\xe4\x82\x20\x9b\xc7\x9c\x97\xb1\xd2\x0c\xe6\x81\x7c\xcd\x62\x84\xab\xbd\xb3\x6c\xf4\x58\x32\xda\xf6\x06\xf8\xc0\x0a\xdd\x31\xa8\x2c\xbd\xb3\xa4\x2e\x06\x7c\x5a\xdd\x61\x7d\x44\x55\x87\xe0\xc2\x36\x7d\x16\x86\x8d\x45\x41\x21\x97\xc9\x0d\xc0\x4f\x65\xac\x14\xf3\xc5\xfb\xe9\xb7\xe5\x62\x75\x7f\x3b\xf8\xef\xb1\x5e\xb3\x55\x8f\x2d\x2b\x46\xa3\x40\x05\x4b\x49\x96\xd1\x34\x30\x2b\xf6\x4c\xc2\x66\x7e\x39\x6d\x5b\x8c\x22\xbe\x4b\x0c\x25\xe9\xee\x36\x6b\x8c\x94\x6c\x4d\xa2\xca\x97\x37\x5f\x4d\x38\x9b\xb7\x19\xce\xca\x92\x48\xca\x45\xe9\x49\x19\xd9\xa6\xf6\x3e\x5d\x92\xc1\xa0\x6d\xff\xbf\x72\x9a\x2d\xaf\x8c\x12\x4f\xfe\xca\xcb\x29\x17\x9d\x92\x28\x69\x2d\x86\xf2\xbc\x62\x11\xee\xce\xce\x2f\x6d\xd6\x09\xd8\x5d\xc4\x4e\xb5\x9c\x8c\xc7\x83\xb3\xc6\x64\x70\x99\xd1\xd8\xc7\xad\x0b\x5d\x24\xf6\xc2\x2f\x4b\xdd\x45\xca\xdf\x92\xa7\x60\xb9\xfa\xe7\xb5\x00\xcc\x17\xf7\xd3\x09\x66\x8a\x82\x8e\x50\x7a\x64\x10\x36\x7c\x40\xe1\x42\xad\x2c\xd8\xc4\xaa\xe3\xf6\x3d\x30\x5b\x42\x23\xd6\x0c\xda\x93\xf3\xb4\xf6\x6c\x4e\xb4\xd3\xf3\x39\xd6\xb0\x14\x70\x20\xb5\xbb\xee\xef\xd3\x88\x10\x37\x7d\x9f\x61\xbf\x83\xec\x2d\x46\x87\xd7\x52\x0e\x9f\x53\x7e\x9c\xae\x1e\x66\xef\x7e\x53\xb3\xa3\xfc\x49\xcb\x57\xee\x79\xd1\x79\xd8\xfc\xcc\xeb\x7b\x03\x30\x2e\x6c\x53\xde\x54\xda\x95\xed\xf0\x97\xc8\xcf\x82\x93\xa4\x70\x55\x8d\x9f\x94\xab\x40\x3e\xed\x71\xaa\x77\x29\xdf\x95\x3c\x33\xae\xd5\xd1\xb6\xa6\xc7\x5a\x93\x70\x1e\x0b\x72\x21\x29\x6b\x04\x59\xcb\x22\x38\xc6\xba\xea\x2f\xc1\x09\x1e\xf2\xc4\xfe\x11\x00\x00\xff\xff\x95\xfb\xb4\x1f\x08\x04\x00\x00")

func dotnetcoreChartTemplatesNotesTxtBytes() ([]byte, error) {
	return bindataRead(
		_dotnetcoreChartTemplatesNotesTxt,
		"dotnetcore/chart/templates/NOTES.txt",
	)
}

func dotnetcoreChartTemplatesNotesTxt() (*asset, error) {
	bytes, err := dotnetcoreChartTemplatesNotesTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "dotnetcore/chart/templates/NOTES.txt", size: 1032, mode: os.FileMode(420), modTime: time.Unix(1498077074, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dotnetcoreChartTemplates_helpersTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x90\x41\x6b\xe3\x30\x10\x85\xef\xfe\x15\x0f\xb3\x81\xdd\x80\x9d\xc3\xc2\x1e\x02\x39\x65\x7b\x2a\xa4\xd0\x40\x7b\x56\xac\xa7\x5a\x20\x2b\xae\x34\x0a\x09\x69\xfe\x7b\x91\xdc\x36\x14\x7a\x68\x6f\x83\xf8\xe6\xcd\xd3\x77\x3e\x2f\xe6\x38\xd8\x61\x89\x48\x81\xb1\x8e\x72\x1a\xb9\x1a\x52\x14\xd5\xf5\x5c\x62\xbe\xb8\x5c\xaa\x4c\x55\x37\xc7\x51\x79\x0d\xe9\x09\xaf\x06\x62\x6f\xca\xdc\xf5\x2a\x48\x5b\xbd\x71\x0d\x34\x8d\xf5\x44\x9d\x99\x1a\xcd\xf5\x55\x25\x27\x68\xd7\x05\xdf\xe4\x80\xf6\x41\xb9\xc4\xd8\x66\xf2\xee\xc0\x10\xac\x26\x5e\x20\x21\xf9\x0e\xff\xfe\x96\xd1\x0e\xdb\x64\x8c\x3d\xa2\x6e\xae\x61\xf4\xba\xcc\x53\xaf\x75\xa0\x12\x42\x7d\xdc\x30\xc9\xb9\x13\x9e\x93\x72\xd6\x58\x6a\xa8\x71\x2c\x8d\xdb\xea\x91\x53\x7a\xe1\x25\xdf\xc8\xed\x23\x76\xec\x54\x8a\x44\xdc\x0f\xc4\x6d\xda\x31\x78\x0a\xe3\xf4\x4f\x63\xe9\x74\x84\x0a\x84\xb3\x83\x15\x6a\xc8\x1e\xd2\xdb\x88\xdf\xbb\x53\x71\xf0\x7f\xb3\xcd\xac\xf5\x4f\x88\x23\xbb\x3f\x5f\xe8\xc8\xa5\x3e\x2b\xf9\x55\xd2\x97\xab\xef\xbb\x79\xdf\x1c\x83\xf5\x62\x50\xcf\x62\x33\x8b\x35\xda\x7b\x3a\xaa\xc8\x69\x73\x8a\xfd\x89\xc6\xd7\x00\x00\x00\xff\xff\x34\x01\xd0\x17\x04\x02\x00\x00")

func dotnetcoreChartTemplates_helpersTplBytes() ([]byte, error) {
	return bindataRead(
		_dotnetcoreChartTemplates_helpersTpl,
		"dotnetcore/chart/templates/_helpers.tpl",
	)
}

func dotnetcoreChartTemplates_helpersTpl() (*asset, error) {
	bytes, err := dotnetcoreChartTemplates_helpersTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "dotnetcore/chart/templates/_helpers.tpl", size: 516, mode: os.FileMode(420), modTime: time.Unix(1498077074, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dotnetcoreChartTemplatesDeploymentYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x52\xc1\x8a\xdb\x30\x14\xbc\xfb\x2b\x06\x5f\x4b\x9c\xa6\x87\x1e\x74\xdd\x85\xde\x4a\xa0\xb0\xd0\x53\x79\xb1\xa7\x89\xa8\x2c\x09\xe9\x39\x34\x64\xfd\xef\x45\x89\x37\xb1\x49\xa1\xf4\xb2\x3e\x89\x99\xa7\x99\x79\x63\x49\xb4\x2f\x4c\xd9\x06\x6f\xc0\xdf\x4a\x5f\x8e\x79\x7d\xdc\xec\xa8\xb2\xa9\x7e\x59\xdf\x19\x3c\x33\xba\x70\xea\xe9\xb5\xea\xa9\xd2\x89\x8a\xa9\x00\x2f\x3d\x0d\xce\x67\x28\xfb\xe8\x44\x89\xfa\xe7\xe0\x5c\x81\x6b\x34\x18\xc7\x0a\x70\xb2\xa3\xcb\x65\x1a\x68\x0f\x92\xd4\xa0\x3e\x9f\xd1\x3c\x95\x73\xf3\x55\x7a\x62\x1c\x57\x77\x64\x0a\x83\x57\x24\x46\x27\x2d\x51\x7f\xa8\x51\xff\xa8\x31\x8e\x75\x95\x23\xdb\xa2\x55\x38\xdb\x4a\xbe\xb8\x37\x2f\xe2\x06\xe6\x66\x02\x9f\xc2\xe0\xf5\x6a\xfe\x96\xeb\x6a\x3f\x8f\x5e\xbe\x79\xb4\xf2\x49\x8c\xff\xda\x06\x78\x4b\x70\xd9\x27\x78\x15\xeb\x99\x6e\x22\xab\x7b\x27\xcb\x0d\x6f\x26\xb6\x97\x3d\xa7\x0e\xa6\xdc\x17\xa8\x49\xdc\xdb\xac\xe9\x84\x71\x5c\x3f\x90\x21\xed\xff\x8a\xfb\xab\xba\x79\x20\x54\xf6\x97\xc2\x16\xb6\xdb\xc1\xb9\x6d\x70\xb6\x3d\x2d\x7a\xbb\xde\x88\x37\x72\x1e\x37\x86\xa4\xb3\x8a\x56\xf7\x9d\xb7\xa1\xfc\xcb\x99\x4c\x66\x3a\xda\x96\x8d\xf5\xca\xe4\xc5\x95\x81\xb9\x94\xb3\x47\x7a\xe6\xbc\x4d\x61\xc7\xbb\x24\x70\x50\x8d\x5f\xa8\x73\x08\x88\xa2\x07\x83\xf5\x12\xfb\x5f\x4b\xc0\x7a\xab\x56\xdc\x33\x9d\x9c\xbe\xb1\x0d\xbe\xcb\x06\x9f\x3f\xde\x26\x12\xa5\xb3\xef\x9c\x2a\x31\x87\x21\xb5\xcc\xa6\x2a\xaf\x2d\x7c\x97\xde\xcd\x1e\xf1\x44\xe2\x15\xd6\x77\xf4\x8a\xcd\xa7\x72\xfb\x4f\x00\x00\x00\xff\xff\x9c\xcf\xce\x9b\xa9\x03\x00\x00")

func dotnetcoreChartTemplatesDeploymentYamlBytes() ([]byte, error) {
	return bindataRead(
		_dotnetcoreChartTemplatesDeploymentYaml,
		"dotnetcore/chart/templates/deployment.yaml",
	)
}

func dotnetcoreChartTemplatesDeploymentYaml() (*asset, error) {
	bytes, err := dotnetcoreChartTemplatesDeploymentYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "dotnetcore/chart/templates/deployment.yaml", size: 937, mode: os.FileMode(420), modTime: time.Unix(1498077074, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dotnetcoreChartTemplatesIngressYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x90\xb1\x6a\xf4\x30\x10\x84\x7b\x3f\xc5\xa0\xf6\xe7\x74\x5c\xab\xf6\xaf\xd2\x1c\x21\xc5\xb5\x61\x6d\x4f\x62\x73\xb2\x2c\xb4\xf2\x11\x70\xf4\xee\x41\x3e\x5f\x02\xa9\xd2\xed\x7c\xec\x0e\x1f\x2b\x71\xbc\x30\xe9\x38\x07\x07\x7e\x64\x86\x3a\xea\xf1\x76\x6a\x99\xe5\xd4\x5c\xc7\xd0\x3b\x3c\x85\xf7\x44\xd5\x66\x62\x96\x5e\xb2\xb8\x06\x08\x32\xd1\x61\x5d\x91\x39\x45\x2f\x99\x30\x6f\x8b\xf7\x15\x1b\x58\x94\xd2\x00\x5e\x5a\x7a\xad\xdb\x40\x37\x48\xca\x0e\x66\x5d\x61\xff\xd7\xd9\x9e\x65\x22\x4a\x39\xfc\x90\xdd\x04\x9f\x48\x8c\x5e\x3a\xc2\xfc\x33\x30\xaf\x06\xa5\x98\x46\x23\xbb\xda\x95\x16\xcf\xad\xf4\x80\x61\xd6\xbc\x49\xd8\x17\x7a\x8a\xf2\x51\x6a\x2b\xbb\x88\x5f\xa8\xb6\x15\x65\x3f\x4f\x32\x86\xbb\x15\x30\xe4\x1c\xef\x56\x40\x94\x3c\xe8\x23\x1c\xb6\xe8\x70\xdc\x33\xd0\x4a\x77\x65\xe8\xdd\x37\x00\x94\xe9\x36\x76\x3c\xff\xe1\x01\xbf\x4e\x9e\xe7\xb4\xeb\xee\x6a\x3b\xb7\xf5\xf3\x29\x88\xaf\x0b\xf5\xf2\x2b\x00\x00\xff\xff\x54\x0e\x39\x31\x96\x01\x00\x00")

func dotnetcoreChartTemplatesIngressYamlBytes() ([]byte, error) {
	return bindataRead(
		_dotnetcoreChartTemplatesIngressYaml,
		"dotnetcore/chart/templates/ingress.yaml",
	)
}

func dotnetcoreChartTemplatesIngressYaml() (*asset, error) {
	bytes, err := dotnetcoreChartTemplatesIngressYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "dotnetcore/chart/templates/ingress.yaml", size: 406, mode: os.FileMode(420), modTime: time.Unix(1498077074, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dotnetcoreChartTemplatesServiceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\xcd\x4a\x04\x31\x10\x84\xef\x79\x8a\x22\x57\xd9\x80\xd7\x5c\xf7\x2e\x03\xca\x5e\xa5\xcd\xb6\x3a\x98\x49\x42\xa7\x77\x51\xc6\xbc\xbb\x64\x22\x0a\xfe\xec\xad\xa9\xf4\x97\x2f\x29\x2a\xf3\x81\xa5\xce\x39\x79\x9c\xaf\xcd\xcb\x9c\x8e\x1e\xb7\x2c\xe7\x39\xb0\x59\x58\xe9\x48\x4a\xde\x00\x89\x16\xf6\x58\x57\x28\x2f\x25\x92\x32\xec\xe3\x29\xc6\x1e\x5b\x38\xb4\x66\x80\x48\x0f\x1c\x6b\xdf\x06\xc2\x33\x89\x7a\xd8\x75\x85\xdb\xf7\xd9\xdd\xd0\xc2\x68\x6d\xf7\x9d\x7c\x9a\xf1\x0e\xe1\x12\x29\x30\xec\x95\x85\xbd\xb7\x68\xcd\x9a\x5a\x38\xf4\xbb\xf4\xad\x0c\xb3\x3b\x50\x3c\x71\x75\x75\x3c\xcf\xf5\x83\x21\x2e\x59\x74\xf3\xee\xb6\xf1\xcf\x6d\x7e\x55\x96\x44\x71\xca\xa2\x83\x02\x94\xe4\x89\x75\xfa\x0f\x99\xd3\x6f\xa4\x48\xd6\x1c\x72\xf4\xb8\xdb\x4f\x5b\xf2\xd5\xcc\x4f\x3c\x8d\x0f\x1b\xa0\x72\xe4\xa0\x59\x46\x35\x54\xca\xe5\x26\x3f\x02\x00\x00\xff\xff\xce\x5a\xb0\xc7\x95\x01\x00\x00")

func dotnetcoreChartTemplatesServiceYamlBytes() ([]byte, error) {
	return bindataRead(
		_dotnetcoreChartTemplatesServiceYaml,
		"dotnetcore/chart/templates/service.yaml",
	)
}

func dotnetcoreChartTemplatesServiceYaml() (*asset, error) {
	bytes, err := dotnetcoreChartTemplatesServiceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "dotnetcore/chart/templates/service.yaml", size: 405, mode: os.FileMode(420), modTime: time.Unix(1498077074, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dotnetcoreChartValuesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8f\x31\x6b\xdc\x40\x10\x46\xfb\xfd\x15\x1f\xb8\xb6\xb8\x3b\x70\x30\xdb\x05\xbb\x31\xc4\x41\x45\x9a\x94\x7b\xab\x91\x3c\x64\x57\xb3\x99\x99\x3d\xa2\x7f\x1f\xa4\xa4\x39\x70\xf7\x31\x3c\xde\xf0\x1e\xf0\x4a\x73\xea\xc5\x71\x4b\xa5\x93\x61\x16\x45\xdb\xfc\x43\xd6\x21\x3c\xe0\xc7\x07\x1b\xd8\x90\xf0\xf3\xeb\xfb\xb7\xc7\x59\xb4\x26\x77\x9a\x30\x73\xa1\x1d\x78\xa5\x5c\x92\x12\x6e\x49\x39\x5d\x0b\x19\x5c\x70\x25\xb4\x64\x46\x13\x78\x75\xc1\x26\x5d\xe1\x54\x5b\x49\x4e\x36\x04\xa5\x56\x38\xa7\x17\xe9\xab\x47\x5c\x02\xd7\xb4\x50\x0c\x80\xd2\xc2\xe6\xba\x45\x4c\x92\x7f\x91\x0e\x2c\x01\x10\x5d\x22\x2a\x67\x15\x93\xd9\x03\xb0\xa6\x4a\x11\xc9\xda\x4a\x9e\x45\xe9\xf1\xda\xb9\x4c\x01\xf0\xb4\x44\x9c\x87\x73\x00\x5a\x2f\x65\x94\xc2\x79\x8b\x78\x9b\xbf\x8b\x8f\x4a\x46\xab\x07\x23\xbd\x71\x3e\xde\xfd\xf3\x4c\xe2\xff\x3d\xbb\x61\x6b\x14\xf1\x52\xba\x39\xe9\xdb\x18\x00\xfa\xe3\xa4\x6b\x2a\xa3\xa8\x47\x3c\x9f\x9e\x4f\x01\x7b\xd6\xdd\x31\x28\x99\x74\xcd\x64\xbb\xb7\x70\x65\x3f\x16\x90\x5b\x8f\x38\x1f\xb3\x52\x95\xbd\xed\xf2\xf4\xe5\x9d\x8f\xda\xdf\x9d\xec\x0e\xbc\x3c\x9d\xea\x27\xec\xdf\x00\x00\x00\xff\xff\xec\xe4\x45\x12\xa5\x01\x00\x00")

func dotnetcoreChartValuesYamlBytes() ([]byte, error) {
	return bindataRead(
		_dotnetcoreChartValuesYaml,
		"dotnetcore/chart/values.yaml",
	)
}

func dotnetcoreChartValuesYaml() (*asset, error) {
	bytes, err := dotnetcoreChartValuesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "dotnetcore/chart/values.yaml", size: 421, mode: os.FileMode(420), modTime: time.Unix(1498077074, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dotnetcoreDetect = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcb\x41\x8b\x82\x40\x18\x06\xe0\xfb\xf7\x2b\x5e\x5d\xc1\xdd\x05\x47\x3c\x97\x05\x65\x07\xa1\x22\xb2\xe8\x22\x44\x8e\x9f\x39\x0a\x8e\xcd\x8c\xd1\xcf\x8f\x2e\x5d\x1f\x78\x7e\xbc\x78\xb2\x26\xae\xd4\x10\xf3\xf0\x44\x75\xb3\x2d\xd1\xea\x9c\x6f\xb3\x6b\x96\x1f\xd3\x20\x21\x92\x35\x82\xaf\x10\xa9\x06\x1e\xee\x86\x47\x44\xd1\x63\x52\xec\x10\xce\x0f\x46\x77\x2c\x1d\x8a\xba\x4f\xfd\x9d\x92\x46\x5b\xdd\x38\xb1\xdf\x9c\x44\x51\xf7\xe5\xaf\xb8\x70\x55\xfe\x95\x4b\x7f\x11\xe2\x5f\x48\x3b\x1a\xdd\xcd\xe0\x5a\x1e\x08\x00\xf8\xa5\x1c\x12\x6a\x14\x11\xcb\x56\xe3\x13\xb1\xd6\x86\xe9\x1d\x00\x00\xff\xff\xaf\xac\xb7\xb6\x9f\x00\x00\x00")

func dotnetcoreDetectBytes() ([]byte, error) {
	return bindataRead(
		_dotnetcoreDetect,
		"dotnetcore/detect",
	)
}

func dotnetcoreDetect() (*asset, error) {
	bytes, err := dotnetcoreDetectBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "dotnetcore/detect", size: 159, mode: os.FileMode(420), modTime: time.Unix(1498077074, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangDockerignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xc9\x4f\xce\x4e\x2d\x4a\xcb\xcc\x49\xe5\x4a\x29\x4a\x4c\x2b\xd1\x2b\xc9\xcf\xcd\xe1\x4a\xce\x48\x2c\x2a\xd1\xe7\xf2\xf3\x0f\xf1\x74\x76\xe5\x02\x04\x00\x00\xff\xff\x18\xba\x47\x9a\x24\x00\x00\x00")

func golangDockerignoreBytes() ([]byte, error) {
	return bindataRead(
		_golangDockerignore,
		"golang/.dockerignore",
	)
}

func golangDockerignore() (*asset, error) {
	bytes, err := golangDockerignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang/.dockerignore", size: 36, mode: os.FileMode(420), modTime: time.Unix(1497095036, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangDockerfile = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x72\x0b\xf2\xf7\x55\x48\xcf\xcf\x49\xcc\x4b\xb7\xca\xcf\x4b\x2a\xcd\xcc\x49\xe1\x72\x8d\x08\xf0\x0f\x76\x55\xb0\x30\xb0\x30\xe0\x02\x04\x00\x00\xff\xff\x28\x05\x9c\x37\x20\x00\x00\x00")

func golangDockerfileBytes() ([]byte, error) {
	return bindataRead(
		_golangDockerfile,
		"golang/Dockerfile",
	)
}

func golangDockerfile() (*asset, error) {
	bytes, err := golangDockerfileBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang/Dockerfile", size: 32, mode: os.FileMode(420), modTime: time.Unix(1497095036, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangNotice = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x52\x5f\x6f\xe2\x38\x10\x7f\xe7\x53\x8c\x78\x6a\xa5\x5c\xef\x7a\xd2\xbd\xdc\x9b\x49\x4c\x63\x5d\x48\x22\xc7\x94\xe3\x31\x24\x86\x78\x37\xc4\xc8\x76\x16\xf5\xdb\xef\x8c\xa1\xdb\x76\x25\x44\xe4\xf1\xcc\xef\xdf\x78\x23\x14\x14\xa6\xd3\x93\xd7\xff\x2e\x16\xa9\xbd\xbc\x39\x73\x1a\x02\x3c\xa4\x8f\xf0\xf7\x5f\xcf\xcf\x7f\xe0\xdf\x3f\x90\x6b\x67\xbf\xcf\x09\x88\xa9\x7b\x5a\x2c\x6a\xed\xce\xc6\x7b\x63\x27\x30\x1e\x06\xed\xf4\xe1\x0d\x4e\xae\x9d\x82\xee\x13\x38\x3a\xad\xc1\x1e\xa1\x1b\x5a\x77\xd2\x09\x04\x0b\xed\xf4\x06\x17\xed\x3c\x0e\xd8\x43\x68\xcd\x64\xa6\x13\xb4\xd0\x21\x1b\x75\x86\x01\x61\xbc\x3d\x86\x6b\xeb\x34\x36\xf7\xd0\x7a\x6f\x3b\xd3\x22\x1e\xf4\xb6\x9b\xcf\x7a\x0a\x6d\x20\xbe\xa3\x19\xb5\x87\x87\x30\x68\x58\x36\xf7\x89\xe5\x63\x24\xe9\x75\x3b\x82\x99\x80\xee\xde\xaf\xe0\x6a\xc2\x60\xe7\x00\x4e\xfb\xe0\x4c\x47\x18\x09\x36\x75\xe3\xdc\x93\x86\xf7\xeb\xd1\x9c\xcd\x9d\x81\xc6\x63\x04\x9e\x40\x67\x8f\x0e\x48\x67\x02\x67\xdb\x9b\x23\x7d\x75\xb4\x75\x99\x0f\xa3\xf1\x43\x02\xbd\x21\xe8\xc3\x1c\xb0\xe8\xa9\x18\xc3\x4c\xc8\xc7\x9f\xd6\x81\xd7\xe3\x48\x08\x06\x75\x47\xaf\x1f\xea\x62\x0f\xb1\x5c\x28\xd0\x70\x8f\x28\xf2\x5e\x07\x7b\xfe\xea\x04\x23\x3a\xce\x6e\x42\x4a\x1d\x67\x7a\x8b\x91\x45\xc6\x6f\xba\x0b\x54\xa1\xf6\xa3\x1d\x47\x7b\x25\x6b\x9d\x9d\x7a\x43\x8e\x3c\xee\x55\xe1\x55\x7b\xb0\x3f\x74\xf4\x72\xdb\xf0\x64\x03\x4a\xbd\x49\xa0\x05\x5c\x3e\xb6\x7a\xbf\xf2\x43\x8b\xda\x0f\xfa\x1e\x18\xf2\x62\xbc\xed\x27\x3b\x8e\xe8\x7d\xc0\xc5\x1b\xcc\xfe\x62\x5d\xe4\xfb\xdd\x26\xbe\x18\x95\x73\x68\xaa\xb5\xda\x31\xc9\x41\x34\x50\xcb\xea\x55\x64\x3c\x83\x25\x6b\xf0\xbc\x4c\x60\x27\x54\x5e\x6d\x15\x60\x87\x64\xa5\xda\x43\xb5\x06\x56\xee\xe1\x3f\x51\x66\x09\xf0\xff\x6b\xc9\x9b\x06\x2a\x09\x62\x53\x17\x82\x63\x4d\x94\x69\xb1\xcd\x44\xf9\x02\x2b\x9c\x2b\x2b\x7c\xc7\x02\x5f\x33\x82\xaa\x0a\x88\xf0\x0e\x25\x78\x43\x60\x1b\x2e\xd3\x1c\x8f\x6c\x25\x0a\xa1\xf6\x09\xac\x85\x2a\x09\x73\x8d\xa0\x0c\x6a\x26\x95\x48\xb7\x05\x93\x50\x6f\x65\x5d\x35\x1c\xe9\x33\x84\x2d\x45\xb9\x96\xc8\xc2\x37\xbc\x54\x4f\xc8\x8a\x35\xe0\xaf\x78\x80\x26\x67\x45\x11\xa9\xd8\x16\xd5\xcb\xa8\x2f\xad\xea\xbd\x14\x2f\xb9\x82\xbc\x2a\x32\x8e\xc5\x15\x47\x65\x6c\x55\xf0\x1b\x15\x9a\x4a\x0b\x26\x36\x09\x64\x6c\xc3\x5e\x78\x9c\xaa\x10\x45\xc6\xb6\xbb\xba\x5d\xce\x63\x09\xf9\x18\xfe\x52\x25\xaa\x92\x6c\xa4\x55\xa9\x24\x1e\x13\x74\x29\xd5\xaf\xd1\x9d\x68\x78\x02\x4c\x8a\x86\x02\x59\xcb\x0a\xe1\x29\x4e\x9c\xa8\x22\x08\xce\x95\xfc\x86\x42\x51\xc3\x97\x8d\x60\x0b\x9d\xb7\x0d\xff\xd0\x92\x71\x56\x20\x56\x43\xc3\x9f\x9b\x9f\x16\x3f\x03\x00\x00\xff\xff\x3e\x88\xe6\xeb\x33\x04\x00\x00")

func golangNoticeBytes() ([]byte, error) {
	return bindataRead(
		_golangNotice,
		"golang/NOTICE",
	)
}

func golangNotice() (*asset, error) {
	bytes, err := golangNoticeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang/NOTICE", size: 1075, mode: os.FileMode(420), modTime: time.Unix(1497095036, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangChartHelmignore = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x4c\x8f\x41\x4f\xc3\x30\x0c\x85\xef\xf9\x15\x46\xbb\x00\x42\xe9\x8f\xd8\x38\x70\x02\xa9\x68\x57\x94\x36\x5e\x62\x96\x3a\x51\xe2\xae\xc0\x81\xdf\x8e\xd7\x69\x62\x97\x4f\xce\xcb\xf3\xcb\xcb\x06\xde\x9c\x08\x56\x6e\x20\x19\x28\x70\xae\x08\x4b\x44\x86\x61\xa6\xe4\x89\x03\x14\x37\x1e\x5d\xc0\x66\xcd\x06\xde\x23\x35\x68\x73\x29\xb9\x8a\x0e\x11\x53\x82\x90\xf2\x00\x93\x93\x31\xaa\xfb\x09\x2a\x26\x27\x74\x42\xdd\x93\x78\xa3\x3b\xf6\x1a\xc0\x18\xf4\x36\x33\xdc\x97\x8a\x07\xfa\x42\x0f\x0b\xa9\xef\xee\xc1\xc2\x2b\xa7\x6f\xc8\xbc\x6e\x9e\x2b\x41\xc1\x0a\x89\x18\xad\xb1\xbb\xfe\xa3\x17\xed\xa6\x11\xdb\x3c\x4d\x1a\xb0\xdf\xf6\xe0\xa9\x36\x63\x03\x49\xb7\xf2\x52\xdf\xd8\xe1\xa7\x76\x2b\xaf\x42\x0c\xdd\x19\xd7\x63\x3b\x71\xf7\x1f\x34\xe8\xff\xe6\x02\x07\x4a\xd8\xcc\xa3\x6d\x4b\x51\x0e\xee\xa8\x94\x49\xe7\x5f\xb5\xee\x5d\xa5\x3c\x37\x78\xd9\x3d\xeb\x83\xa5\xe6\x4f\x1c\xc5\x58\xf2\xe8\xba\x8b\x4f\x25\xf3\x17\x00\x00\xff\xff\xbc\x5b\x94\x77\x4d\x01\x00\x00")

func golangChartHelmignoreBytes() ([]byte, error) {
	return bindataRead(
		_golangChartHelmignore,
		"golang/chart/.helmignore",
	)
}

func golangChartHelmignore() (*asset, error) {
	bytes, err := golangChartHelmignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang/chart/.helmignore", size: 333, mode: os.FileMode(420), modTime: time.Unix(1497095036, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangChartChartYaml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xca\x4b\xcc\x4d\xb5\x52\x48\xcf\xcf\x49\xcc\x4b\xe7\x02\x04\x00\x00\xff\xff\x80\xbb\xba\x46\x0d\x00\x00\x00")

func golangChartChartYamlBytes() ([]byte, error) {
	return bindataRead(
		_golangChartChartYaml,
		"golang/chart/Chart.yaml",
	)
}

func golangChartChartYaml() (*asset, error) {
	bytes, err := golangChartChartYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang/chart/Chart.yaml", size: 13, mode: os.FileMode(420), modTime: time.Unix(1497095036, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangChartTemplatesNotesTxt = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x93\x51\x6b\xdb\x3c\x14\x40\xdf\xfb\x2b\x2e\x26\x90\xef\x7b\xb0\xb2\x67\x43\x5f\xb6\x85\x11\x28\x49\xc8\xba\xc2\x18\x63\x5c\xcb\xd7\xb1\x56\x59\x12\xd6\x75\xd2\x60\xfc\xdf\x27\x39\x5e\xea\x66\xa3\x8c\x31\xbf\x45\x8e\x8e\x4e\xee\x51\x6e\xba\x2e\x05\x55\x82\xb4\x86\x51\x19\x0f\xc9\xda\x16\xb4\xb5\x0d\x27\x20\x1e\x50\xb7\xe4\x85\xa7\xe6\xa0\x24\x09\x3e\x39\x82\xbe\xbf\x01\xf8\x40\x0c\x5c\x11\xa0\x73\x5a\x49\x64\x65\x0d\x7c\xda\xdd\x41\x7e\x82\xa6\x35\x46\x99\x7d\x7c\xed\x29\x60\xeb\x1a\x4d\xe1\xb3\xb0\x89\x9e\x5c\xc0\xc2\x7a\xf3\x7e\xf9\x6d\xbb\xd9\xdd\xdf\xce\xfe\x7b\x6c\x73\x92\xac\x61\x1f\x78\x69\x6a\xb0\x26\xef\x50\x12\x74\x1d\x88\x1d\x69\x42\x4f\x62\x7d\x59\xed\x7b\x48\x2d\x7c\xf7\xd6\x38\xe4\xea\x36\xe9\x84\x77\x24\x45\xa4\xfa\x2f\x6f\xbe\x0a\x33\x9a\xf7\x09\x8c\xca\x3e\x92\x98\x6a\xa7\x91\x09\x92\xb2\xd5\x3a\x1e\x12\x7e\x5a\x80\xfd\x7f\xe5\xb4\xda\x5e\x19\x45\x9e\xff\x2b\x2f\x15\xce\x1c\x94\x3c\x23\xb7\x5e\x60\x51\x34\xe4\x3d\x0d\x6b\xe3\x87\x3e\x19\x04\x64\x65\xa1\x62\x76\xd9\x62\x31\x1b\x35\xb2\xd9\x65\x46\x0b\x6d\xf7\xca\x0c\x91\x48\x87\x79\xbe\x28\x75\x67\xb1\x78\x8b\x1a\x8d\xa4\xe6\x9f\xd7\x0a\xcf\x7a\x73\xbf\xcc\x60\xc5\x50\xe3\x09\x18\x1f\x03\x01\x4a\x3a\x42\xad\x4c\xcb\x61\x32\xa5\x6d\x06\xee\xd4\x03\x56\x5b\x60\x0b\x79\xf8\xee\x01\x95\xc6\x5c\x93\x38\xd3\xce\xcf\x67\xdb\x82\x44\x03\x47\x64\x59\x0d\xbb\xcf\x23\x02\x5b\x4e\x7d\xe6\xd3\x0e\xfe\x20\x21\x3d\xbe\x96\x72\xfe\x9c\xf2\xe3\x72\xf7\xb0\x7a\xf7\x9b\x9a\x03\xe5\x4f\x5a\xbe\x72\xce\x8b\xce\xf3\xee\x67\x5e\x3d\x19\x80\x08\xfa\x31\x6f\x2c\xad\x5c\x3f\xff\x25\xf2\xb3\x60\x16\x15\xae\xaa\xd1\x13\x53\x63\x50\xc7\x7b\x1c\xeb\x5d\xca\x0f\x25\x47\xc6\xb5\x7a\x78\x29\x26\xac\x3c\xac\x17\xb6\x0e\x97\x24\x2a\x87\x1a\x28\xc3\x5f\xc1\xc3\xc9\xb6\xcd\xf4\x12\x9c\xe1\xa6\x88\xec\x1f\x01\x00\x00\xff\xff\x95\xfb\xb4\x1f\x08\x04\x00\x00")

func golangChartTemplatesNotesTxtBytes() ([]byte, error) {
	return bindataRead(
		_golangChartTemplatesNotesTxt,
		"golang/chart/templates/NOTES.txt",
	)
}

func golangChartTemplatesNotesTxt() (*asset, error) {
	bytes, err := golangChartTemplatesNotesTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang/chart/templates/NOTES.txt", size: 1032, mode: os.FileMode(420), modTime: time.Unix(1497095036, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangChartTemplates_helpersTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x90\xc1\x4a\x33\x31\x14\x85\xf7\xf3\x14\x87\xe1\x2f\xfc\x16\x66\xba\x10\x5c\x14\xba\xaa\xae\x84\x0a\x16\x74\x9d\xce\x9c\xd8\x40\x26\x1d\x93\x9b\xd2\x52\xfb\xee\x4e\x32\x6a\x11\x5c\xe8\xee\x12\xbe\x7c\xf7\xdc\x73\x3a\xcd\xa6\xd8\x9b\x6e\x8e\x40\x81\x36\x96\x72\xec\xb9\xe8\x62\x10\xd5\x6c\x39\xc7\x74\x76\x3e\x17\x89\x2a\xee\x0e\xbd\x72\x2d\x64\x4b\x38\xd5\x11\x3b\x9d\xe7\x66\xab\xbc\xd4\xc5\x07\x57\xa1\xa5\x36\x8e\x28\x13\x53\xa2\xba\xbc\xaa\x68\x05\xf5\x32\xe3\xab\x24\xa8\x9f\x94\x8d\x0c\x75\x22\x1f\xf6\xf4\xde\xb4\xc4\x1b\xc4\x47\xd7\xe0\xe6\x3a\x8f\xa6\x5b\x47\xad\xcd\x01\x65\x75\x91\x71\x88\x91\xe6\x31\xd7\xd2\x53\x09\xa1\xbe\x76\xe8\x68\xed\x11\xaf\x51\x59\xa3\x0d\x5b\xa8\xbe\xcf\x89\xeb\xe2\x99\xa3\x3d\xf3\x92\x76\xa4\xf4\x01\x1b\x36\x2a\x06\x22\xec\x86\x58\xf7\x71\x43\xef\x28\x0c\xe3\x9d\x83\xc3\xb6\x01\xca\x13\xd6\x74\x46\x06\xa3\xec\x86\xd3\x4d\xc0\xff\xcd\x31\x77\x70\xbb\x5a\x27\xd6\xb8\x17\x84\x9e\xcd\xd5\x0f\x75\xa4\x50\xdf\x2b\xf9\x97\xed\xf3\xc5\xef\xbb\xf9\xfc\xd9\x7b\xe3\x44\xa3\x9c\x84\x6a\x12\x4a\xd4\x8f\xb4\x54\x81\xe3\xcf\x51\xfb\x97\x1a\xdf\x03\x00\x00\xff\xff\x34\x01\xd0\x17\x04\x02\x00\x00")

func golangChartTemplates_helpersTplBytes() ([]byte, error) {
	return bindataRead(
		_golangChartTemplates_helpersTpl,
		"golang/chart/templates/_helpers.tpl",
	)
}

func golangChartTemplates_helpersTpl() (*asset, error) {
	bytes, err := golangChartTemplates_helpersTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang/chart/templates/_helpers.tpl", size: 516, mode: os.FileMode(420), modTime: time.Unix(1497095036, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangChartTemplatesDeploymentYaml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x53\xc1\x6a\xeb\x30\x10\xbc\xfb\x2b\x16\x5f\x1f\x71\xc8\x3b\xea\x9a\x07\xef\x56\x7c\x0a\xf4\x54\x36\xce\xd6\x11\x95\x25\x21\xad\x43\x43\x9a\x7f\xef\xca\x76\x62\x99\x14\x4a\x2f\xf5\x49\xcc\x8e\x76\x66\xc7\x2b\xf4\x7a\x47\x21\x6a\x67\x15\xd0\x3b\x93\x4d\xc7\xb8\x3e\x6d\xf6\xc4\xb8\x29\xde\xb4\x3d\x28\xf8\x47\xde\xb8\x73\x47\x96\x8b\x4e\xe0\x03\x32\xaa\x02\xc0\x62\x47\x0a\x2e\x17\x60\xea\xbc\x41\x26\x28\x5f\x7b\x63\x12\x5c\x42\x05\xd7\xab\x70\x0c\xee\xc9\xc4\xc4\x06\x68\x8e\x18\x58\x41\x29\x37\xaa\x6d\x3a\x57\x4f\x42\x15\xde\x6a\x46\x26\x33\xf0\x01\x41\x44\xb1\x91\x9e\x7f\x4a\x28\x5f\x4a\xa1\x95\x45\xf4\xd4\xa4\x5e\xa9\xa6\x1b\x8c\x83\x7a\xb5\x43\xd3\x53\xac\x26\x70\xeb\x7a\xcb\xa3\xf8\xcd\xd7\x28\x9f\x5b\x4f\x5f\x6e\x2d\x7d\xe8\xfd\x77\xd3\x00\xdc\x1c\x0c\xf3\x38\xcb\xa8\xad\x38\xbe\x21\xab\x39\x93\xe5\x84\x77\x11\xdd\x61\x4b\x53\x06\x93\xef\x01\x12\xf7\xad\x8e\x1c\xce\x42\x5e\x3f\x14\x5d\x68\xbf\xc4\xed\xd8\x5d\x3d\x14\x18\xdb\x21\xb0\x85\x6c\x2d\xe3\xd4\x4e\x32\x3a\x2f\x72\x1b\x6f\xf8\x7b\x31\xb7\xeb\x5d\xe0\x2c\xa2\xd5\x3c\x73\xed\xd2\xbf\xcc\xda\x44\x0a\x27\xdd\x50\xa5\x2d\x53\xb0\x68\x12\x21\x6f\x65\xf4\x89\x2c\xc5\x58\x07\xb7\xa7\xb9\x25\xc0\x91\xd9\xff\x27\xce\x21\x11\x46\x3e\x2a\x58\x2f\xb1\x9f\x4a\x06\xc2\x83\xfe\x75\xcd\xe8\xfa\xd0\x90\xa4\x96\x76\xc9\x3d\x63\x67\xb2\x15\x9d\x8a\xb2\xdf\xf2\xb2\xe4\x41\xc1\xe6\x6f\xba\xfd\x19\x00\x00\xff\xff\x52\x7b\x20\xc6\x87\x03\x00\x00")

func golangChartTemplatesDeploymentYamlBytes() ([]byte, error) {
	return bindataRead(
		_golangChartTemplatesDeploymentYaml,
		"golang/chart/templates/deployment.yaml",
	)
}

func golangChartTemplatesDeploymentYaml() (*asset, error) {
	bytes, err := golangChartTemplatesDeploymentYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang/chart/templates/deployment.yaml", size: 903, mode: os.FileMode(420), modTime: time.Unix(1497095036, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangChartTemplatesIngressYaml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x90\x31\x6b\xc3\x40\x0c\x85\x77\xff\x8a\xc7\xad\xc5\x17\xb2\xde\xda\xa9\x4b\x28\x1d\xb2\x16\xd9\x56\x6b\x93\xf3\xd9\x9c\xe4\x50\x48\xf3\xdf\xab\x73\x9c\x16\x3a\x65\x93\x3e\x9e\x1e\x1f\xa2\x79\x38\x72\x96\x61\x4a\x01\xfc\xa5\x9c\xca\x28\xbb\xf3\xbe\x61\xa5\x7d\x75\x1a\x52\x17\xf0\x92\x3e\x33\x8b\x54\xa3\xb1\x8e\x94\x42\x05\x24\x1a\x39\xe0\x72\x81\xf2\x38\x47\x52\x86\xfb\x58\x62\x2c\xd8\xc1\xe3\x7a\xb5\x4c\xa4\x86\xa3\x94\x34\xd0\xf6\x94\x35\xc0\xd9\x85\x7f\x2e\xb3\x3f\x58\xd4\x72\xf5\x1f\xd9\x4c\xf0\x8d\xcc\xd6\xd9\x5a\xe7\x93\x83\x7b\x77\x16\x73\x95\xcc\xdc\x96\xae\xbc\x44\x5e\x4b\x6b\xf4\x93\xe8\x2a\xe1\xdf\x38\x32\x09\xdf\x4b\x7d\x61\x47\x8a\x0b\x8b\x6f\x8c\x77\xd3\x48\x43\xba\x59\x01\xbd\xea\x7c\xb3\x02\x66\xd2\x5e\xee\x4b\xbd\xae\x01\xbb\x6d\x07\x1a\x6a\x4f\x6c\x3f\xf8\x05\x80\x70\x3e\x0f\x2d\x1f\x1e\x78\xc0\xbf\x93\xd7\x29\x6f\xba\x9b\xda\xc6\x7d\xf9\x7c\x4e\x14\x4b\xa0\x5c\xfe\x04\x00\x00\xff\xff\x54\x0e\x39\x31\x96\x01\x00\x00")

func golangChartTemplatesIngressYamlBytes() ([]byte, error) {
	return bindataRead(
		_golangChartTemplatesIngressYaml,
		"golang/chart/templates/ingress.yaml",
	)
}

func golangChartTemplatesIngressYaml() (*asset, error) {
	bytes, err := golangChartTemplatesIngressYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang/chart/templates/ingress.yaml", size: 406, mode: os.FileMode(420), modTime: time.Unix(1497095036, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangChartTemplatesServiceYaml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x90\x4f\x4b\x03\x31\x10\xc5\xef\xfb\x29\x86\x5c\xa5\x01\xaf\xb9\xf6\x2e\x0b\x4a\xaf\x32\xa6\xa3\x06\x67\x93\x30\x99\x16\xa5\xf6\xbb\x3b\xd9\x88\x82\x7f\x7a\x1b\xde\xfe\xde\x7b\x9b\x87\x35\xed\x48\x5a\x2a\x39\xc0\xf1\x7a\x7a\x49\x79\x1f\xe0\x96\xe4\x98\x22\x4d\x0b\x29\xee\x51\x31\x4c\x00\x19\x17\x0a\x70\x3a\x81\xd2\x52\x19\x95\xc0\x3d\x1e\x98\xbb\xec\xc0\xc3\xf9\x6c\x0c\xe3\x03\x71\xeb\x34\x40\x7c\x46\xd1\x00\xce\x1c\x7e\xdb\x6f\x7f\x63\xa8\x71\x9b\x6f\xe5\xb3\x19\xde\x41\xc8\x32\xa3\x65\x5e\x39\x70\xf7\xce\x30\x37\xb5\x4a\xb1\x67\xe9\x5b\x1d\xcd\x7e\x87\x7c\xa0\xe6\xdb\xf8\x3d\xdf\x3f\x8c\xe2\x5a\x44\xd7\xde\xcd\x7a\xfe\x49\xd3\xab\x92\x64\xe4\xd9\x80\xe1\xb2\x68\x94\x27\xd2\xf9\x3f\x4b\xca\xbf\x2d\x55\x8a\x96\x58\x38\xc0\xdd\x76\x5e\x95\xaf\x65\x7e\xda\xf3\x78\xb0\x41\x8d\x98\xa2\x16\x19\xd3\x60\xad\x97\x97\xfc\x08\x00\x00\xff\xff\xce\x5a\xb0\xc7\x95\x01\x00\x00")

func golangChartTemplatesServiceYamlBytes() ([]byte, error) {
	return bindataRead(
		_golangChartTemplatesServiceYaml,
		"golang/chart/templates/service.yaml",
	)
}

func golangChartTemplatesServiceYaml() (*asset, error) {
	bytes, err := golangChartTemplatesServiceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang/chart/templates/service.yaml", size: 405, mode: os.FileMode(420), modTime: time.Unix(1497095036, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangChartValuesYaml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x90\xb1\x6e\xf3\x30\x0c\x84\x77\x3f\x05\x81\xcc\x7f\x90\x64\x0a\xbc\xfd\x48\x96\x00\x4d\x91\xa1\x4b\x47\xda\xa1\x5d\xa2\x94\xe8\x52\x54\x50\xbf\x7d\x69\xa3\x4b\x3b\x15\xd0\xc0\x3b\x52\x9f\x78\xda\xc0\x99\x06\xac\xe2\xf0\x40\xa9\x54\x60\x50\x83\x51\x05\xf3\xb8\x6d\x36\xf0\xf2\xc6\x05\xe2\x20\xbc\xfe\xbf\x3e\xfd\x8b\x66\x42\x77\xba\xc3\xc0\x42\xcb\xc0\x99\x7a\x41\xa3\xb8\x6d\x8c\x9d\x04\xc0\x15\x3a\x82\x09\x4b\x89\x31\xce\x21\x67\xad\x06\x4e\x69\x12\x74\x2a\xdb\xc6\x68\x12\xee\xf1\xa4\x35\x7b\x0b\x87\x86\x13\x8e\xd4\x36\x00\x46\x23\x17\xb7\xb9\x85\xbb\xf6\xef\x64\x5b\xd6\x70\xd5\xc6\x16\x84\x3b\x43\x9b\x43\x66\x4c\xd4\x7e\xaf\x18\xd2\x31\xba\x9a\xbb\xca\x72\x0f\x39\x55\x91\x9b\x06\x3e\x20\x97\xe1\x59\xfd\x66\x54\x28\x7b\x53\xc8\x1e\xdc\xaf\xcf\xfc\x26\xcc\x53\xc8\x93\xd4\xe2\x64\x97\x5b\x38\xf4\x19\x55\xc6\x00\x59\x2c\x78\xdc\x85\x15\x41\x7e\x58\x61\x06\x38\x82\xf5\x54\x16\xa6\x70\x62\x5f\x2b\x80\x7e\xaa\x2d\xec\x77\xbb\xb4\xaa\x44\x49\x97\x48\xfb\xc3\xf1\xca\x6b\xc8\x8f\xf8\xe7\xbf\xcc\x7e\x05\x00\x00\xff\xff\x24\x04\x82\x1f\x9c\x01\x00\x00")

func golangChartValuesYamlBytes() ([]byte, error) {
	return bindataRead(
		_golangChartValuesYaml,
		"golang/chart/values.yaml",
	)
}

func golangChartValuesYaml() (*asset, error) {
	bytes, err := golangChartValuesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang/chart/values.yaml", size: 412, mode: os.FileMode(420), modTime: time.Unix(1497118555, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangDetect = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x8d\xcb\x6e\xb3\x30\x10\x85\xf7\xf3\x14\xe7\x87\x28\x97\x5f\x02\xc4\xbe\xed\x36\xcf\x01\xcc\x18\xa6\x22\x36\xc5\x26\x17\x95\xbe\x7b\x0d\x4d\x15\x55\xca\x6a\xec\x33\xdf\x37\x87\xd2\x7f\xc5\xe4\xc7\xa2\x56\x5b\x88\x3d\xa3\xae\x7c\x47\x29\x96\x2f\x4b\x90\x26\xe0\xa5\x9e\xb4\xe7\x8c\x75\x7c\x23\x2f\x01\x99\x10\xad\xd1\xeb\x66\xdf\x30\x92\x4d\x59\x24\xd8\x6e\x31\x5c\xf8\x40\xa4\x06\x41\x7c\xa4\x4c\xdc\x7c\xae\xdc\x57\x71\x74\x2c\x83\xbf\x8f\xfc\xdd\x3b\x9b\x60\x9e\x91\xa2\x5d\x13\x02\x9e\x48\x67\xb1\xec\xc6\xfb\xf8\x2b\xfd\x64\xcf\xb5\xb6\x57\x96\xfc\x56\x9d\xfa\x5f\x7c\x09\x1e\xac\x8d\xec\xde\xa8\xe5\x87\x93\x20\x0b\xb7\x41\x60\xe2\xb6\x3a\x09\x76\xff\xf3\xd6\xed\x30\xc3\x0b\xa3\xfc\x38\x24\xf1\x8a\x71\x53\x54\x2a\x18\xed\x05\x17\x0d\x5d\x7c\x47\x0a\x72\x0d\x62\xbd\x3a\x4b\xa1\x13\x1b\x6b\xa4\xe9\x1c\x8e\x8e\xa4\xf7\x4b\xab\x5c\x35\xa0\x24\xa3\xf4\x1d\x00\x00\xff\xff\xb8\xb6\xfd\x76\x6a\x01\x00\x00")

func golangDetectBytes() ([]byte, error) {
	return bindataRead(
		_golangDetect,
		"golang/detect",
	)
}

func golangDetect() (*asset, error) {
	bytes, err := golangDetectBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang/detect", size: 362, mode: os.FileMode(493), modTime: time.Unix(1497118555, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gradleDockerignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xc9\x4f\xce\x4e\x2d\x4a\xcb\xcc\x49\xe5\x4a\x29\x4a\x4c\x2b\xd1\x2b\xc9\xcf\xcd\xe1\x4a\xce\x48\x2c\x2a\xd1\xe7\xf2\xf3\x0f\xf1\x74\x76\xe5\x02\x04\x00\x00\xff\xff\x18\xba\x47\x9a\x24\x00\x00\x00")

func gradleDockerignoreBytes() ([]byte, error) {
	return bindataRead(
		_gradleDockerignore,
		"gradle/.dockerignore",
	)
}

func gradleDockerignore() (*asset, error) {
	bytes, err := gradleDockerignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gradle/.dockerignore", size: 36, mode: os.FileMode(420), modTime: time.Unix(1498144407, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gradleDockerfile = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\xcd\xcd\x4a\xc4\x30\x10\x07\xf0\xfb\x3c\xc5\x90\xb3\x49\x0e\xba\xba\x2c\x78\x71\xbb\xc2\xa2\x6b\x4a\xa4\xa8\x88\x87\x69\x13\x4b\xd3\xd8\x84\x58\x7d\x7e\x69\x0c\xdd\xd3\x30\xff\xf9\xf8\xdd\x6b\x75\xc2\x3e\x91\xf1\x76\x77\x29\x36\xdc\x99\x71\xcb\xc9\xc7\x61\xb2\x48\xdf\x78\xd7\x1c\x1f\x2b\x80\xbd\xaa\xdf\x50\xa0\x8c\x29\x38\xdb\xcd\xa0\x9b\xa7\x72\x84\xbc\x5d\x63\xd9\xfe\x0c\xde\x88\x32\xe8\xbc\xa5\x09\x73\x04\x90\x99\x10\xed\xe4\xcc\xb8\xdb\x2e\x4a\x41\xe0\xf0\x5a\xab\xe7\x03\x5e\x6d\xae\x6f\xfe\x19\xce\x3f\x53\xf8\xba\xcd\xf2\xf9\xf5\x4c\xa9\xb7\xb3\xa4\x18\x85\xa3\x84\x32\xc4\xb5\x81\x17\xa5\x1f\xaa\xa3\xce\x21\xec\x4f\x15\xbe\x33\x47\xbf\xc4\x2e\x90\x71\x47\x69\xa9\x65\x95\x7d\xc0\x5f\x00\x00\x00\xff\xff\x4f\x0a\x51\xb4\xf1\x00\x00\x00")

func gradleDockerfileBytes() ([]byte, error) {
	return bindataRead(
		_gradleDockerfile,
		"gradle/Dockerfile",
	)
}

func gradleDockerfile() (*asset, error) {
	bytes, err := gradleDockerfileBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gradle/Dockerfile", size: 241, mode: os.FileMode(420), modTime: time.Unix(1498144407, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gradleNotice = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x51\x4f\x8f\xe3\x26\x14\xbf\xfb\x53\xfc\x34\xa7\x5d\x89\x4e\x77\x56\xea\x65\x6f\x8c\x4d\x62\x54\x07\x22\x4c\x36\xcd\x91\xd8\x64\x4c\xeb\x40\x64\x48\x47\xf3\xed\x2b\x48\xb6\xb3\xb3\x27\xcb\xbc\xf7\xfb\xfb\x36\x5c\xa3\x73\x83\xf5\xd1\x7e\xab\xaa\x3a\x5c\xde\x16\xf7\x32\x25\x7c\xaa\x3f\xe3\xeb\x97\xa7\xa7\xdf\xbe\x7e\x79\xfa\x03\xad\x5d\xc2\x3f\x57\x02\xee\x87\xc7\xaa\xda\xda\xe5\xec\x62\x74\xc1\xc3\x45\x4c\x76\xb1\xc7\x37\xbc\x2c\xc6\x27\x3b\x12\x9c\x16\x6b\x11\x4e\x18\x26\xb3\xbc\x58\x82\x14\x60\xfc\x1b\x2e\x76\x89\xc1\x23\x1c\x93\x71\xde\xf9\x17\x18\x0c\xe1\xf2\x96\x37\xd3\xe4\x22\x62\x38\xa5\x57\xb3\x58\x18\x3f\xc2\xc4\x18\x06\x67\x92\x1d\x31\x86\xe1\x7a\xb6\x3e\x99\x94\xf5\x4e\x6e\xb6\x11\x9f\xd2\x64\xf1\xd0\xdf\x11\x0f\x9f\x8b\xc8\x68\xcd\x0c\xe7\x91\x67\x3f\x46\x78\x75\x69\x0a\xd7\x84\xc5\xc6\xb4\xb8\x21\x73\x10\x38\x3f\xcc\xd7\x31\x7b\xf8\x31\x9e\xdd\xd9\xdd\x15\x32\xbc\x54\x10\x33\xe9\x35\x5a\x52\x7c\x12\x9c\xc3\xe8\x4e\xf9\x6b\x4b\xac\xcb\xf5\x38\xbb\x38\x11\x8c\x2e\x53\x1f\xaf\xc9\x12\xc4\xfc\x58\xca\x24\x39\xc7\xef\x61\x41\xb4\xf3\x9c\x19\x9c\x8d\xb7\xac\xef\xee\xca\x4e\x56\xb9\xe4\x42\xd3\xbd\xa2\xa2\xfb\x3a\x85\xf3\xc7\x24\x2e\xe2\x74\x5d\xbc\x8b\x93\x2d\x98\x31\x20\x86\xa2\xf8\xb7\x1d\x52\x7e\xc9\xeb\xa7\x30\xcf\xe1\x35\x47\x1b\x82\x1f\x5d\x4e\x14\xbf\x55\x95\x9e\x2c\xcc\x31\xfc\x6b\x4b\x96\xdb\x85\x7d\x48\x6e\xb8\xd5\x5d\x0e\x70\x79\xbf\xea\x7d\x14\x27\x33\xcf\x38\xda\x7b\x61\x76\xcc\xf5\x9a\x9f\xe2\x2c\x59\x3e\x26\xe3\x93\x33\x33\x2e\x61\x29\x7a\xbf\xc6\x7c\xac\x2a\xdd\x32\xf4\x72\xa5\xf7\x54\x31\xf0\x1e\x5b\x25\xbf\xf3\x86\x35\x78\xa0\x3d\x78\xff\x40\xb0\xe7\xba\x95\x3b\x8d\x3d\x55\x8a\x0a\x7d\x80\x5c\x81\x8a\x03\xfe\xe4\xa2\x21\x60\x7f\x6d\x15\xeb\x7b\x48\x05\xbe\xd9\x76\x9c\x35\x04\x5c\xd4\xdd\xae\xe1\x62\x8d\xe7\x9d\x86\x90\x1a\x1d\xdf\x70\xcd\x1a\x68\x89\x2c\x78\xa7\xe2\xac\xcf\x64\x1b\xa6\xea\x96\x0a\x4d\x9f\x79\xc7\xf5\x81\x60\xc5\xb5\xc8\x9c\x2b\xa9\x40\xb1\xa5\x4a\xf3\x7a\xd7\x51\x85\xed\x4e\x6d\x65\xcf\x40\x45\x03\x21\x05\x17\x2b\xc5\xc5\x9a\x6d\x98\xd0\x8f\xe0\x02\x42\x82\x7d\x67\x42\xa3\x6f\x69\xd7\x15\x29\xba\xd3\xad\x54\xc5\x5f\x2d\xb7\x07\xc5\xd7\xad\x46\x2b\xbb\x86\xa9\x1e\xcf\x0c\x1d\xa7\xcf\x1d\xbb\x49\x89\x03\xea\x8e\xf2\x0d\x41\x43\x37\x74\xcd\x0a\x4a\xea\x96\xa9\xb2\x76\x77\xb7\x6f\x59\x79\xe2\x02\x54\x80\xd6\x9a\x4b\x91\x63\xd4\x52\x68\x45\x6b\x4d\xa0\xa5\xd2\xff\x43\xf7\xbc\x67\x04\x54\xf1\x3e\x17\xb2\x52\x72\x43\x90\xeb\x94\xab\xd2\x99\xc8\x38\xc1\x6e\x2c\xb9\x6a\x7c\xb8\x88\x54\xe5\x7f\xd7\xb3\x77\x2f\x0d\xa3\x1d\x17\xeb\x3e\x83\x7f\x5e\x7e\xac\xfe\x0b\x00\x00\xff\xff\x3e\x88\xe6\xeb\x33\x04\x00\x00")

func gradleNoticeBytes() ([]byte, error) {
	return bindataRead(
		_gradleNotice,
		"gradle/NOTICE",
	)
}

func gradleNotice() (*asset, error) {
	bytes, err := gradleNoticeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gradle/NOTICE", size: 1075, mode: os.FileMode(420), modTime: time.Unix(1498144407, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gradleChartHelmignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x8e\xc1\x6a\x23\x31\x0c\x86\xef\x7a\x8a\x7f\x99\xcb\xee\xb0\x78\x1e\x22\xd9\xc3\x9e\x5a\x48\xc9\xb5\x78\x66\x14\x5b\x89\x47\x36\xb6\x26\x69\x7b\xe8\xb3\x97\x24\x84\xf6\xf2\x81\x3e\x24\xf1\x75\x78\xf6\x66\x5c\xb5\xc1\x32\x24\x68\xae\x8c\x4b\x64\xc5\xb8\x4a\x9a\x45\x03\x8a\x9f\x4e\x3e\x70\x73\xd4\xe1\x25\x4a\x43\x5b\x4b\xc9\xd5\x1a\x5a\xe4\x94\x10\x52\x1e\xb1\x78\x9b\xa2\x68\xf8\x8b\xca\xc9\x9b\x9c\x19\xc5\x5b\xfc\xe1\xbd\xce\xd4\x41\x39\x78\x93\xac\xf8\x5d\x2a\x1f\xe4\x8d\x67\x5c\xc4\x22\x7e\xfd\x71\x78\xd2\xf4\x8e\xac\xb7\xcb\x6b\x12\x0a\x57\x24\x51\x76\xe4\xb6\xbb\xd7\x9d\xe5\xca\xd4\x61\x93\x97\x25\x2b\xf6\x9b\x1d\x66\xa9\x8d\x5c\x10\x1b\x6e\xbc\xe7\x93\x1b\x3f\xea\x70\xe3\x43\xc4\x30\x5c\xf1\x18\xdb\x59\x87\xef\x47\xa3\x9f\x4e\x6b\xc1\x41\x12\x37\xea\x5d\xbb\x14\xea\xdd\xe8\x4f\xd4\x3b\x5b\x0a\xf5\x9f\xd4\x61\xef\xab\xe4\xb5\xe1\xff\xf6\x5f\x23\x57\x6a\x3e\xf2\x64\xe4\x64\x66\x3f\xdc\xf7\x6a\x3e\xd2\x57\x00\x00\x00\xff\xff\xbc\x5b\x94\x77\x4d\x01\x00\x00")

func gradleChartHelmignoreBytes() ([]byte, error) {
	return bindataRead(
		_gradleChartHelmignore,
		"gradle/chart/.helmignore",
	)
}

func gradleChartHelmignore() (*asset, error) {
	bytes, err := gradleChartHelmignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gradle/chart/.helmignore", size: 333, mode: os.FileMode(420), modTime: time.Unix(1498144407, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gradleChartChartYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xca\x4b\xcc\x4d\xb5\x52\x48\x2f\x4a\x4c\xc9\x49\xe5\x02\x04\x00\x00\xff\xff\xaa\x28\x0e\x07\x0d\x00\x00\x00")

func gradleChartChartYamlBytes() ([]byte, error) {
	return bindataRead(
		_gradleChartChartYaml,
		"gradle/chart/Chart.yaml",
	)
}

func gradleChartChartYaml() (*asset, error) {
	bytes, err := gradleChartChartYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gradle/chart/Chart.yaml", size: 13, mode: os.FileMode(420), modTime: time.Unix(1498144407, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gradleChartTemplatesNotesTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x92\x51\x8b\xda\x4e\x14\x47\xdf\xf7\x53\xfc\x08\x82\xff\xff\x83\x63\x9f\x85\x7d\x69\x2b\x45\x58\x54\xec\x76\xa1\x94\x52\xae\x93\xab\x4e\x77\x32\x13\x72\x6f\x74\x25\xe4\xbb\x97\x89\xd6\xcd\xda\xb2\x94\xd2\xbc\x65\x42\xce\x1c\xee\xb9\x37\x4d\x33\x82\xdb\xc0\xc6\xa0\xe4\x82\x20\x9b\xc7\x9c\x97\xb1\xd2\x0c\xe6\x81\x7c\xcd\x62\x84\xab\xbd\xb3\x6c\xf4\x58\x32\xda\xf6\x06\xf8\xc0\x0a\xdd\x31\xa8\x2c\xbd\xb3\xa4\x2e\x06\x7c\x5a\xdd\x61\x7d\x44\x55\x87\xe0\xc2\x36\x7d\x16\x86\x8d\x45\x41\x21\x97\xc9\x0d\xc0\x4f\x65\xac\x14\xf3\xc5\xfb\xe9\xb7\xe5\x62\x75\x7f\x3b\xf8\xef\xb1\x5e\xb3\x55\x8f\x2d\x2b\x46\xa3\x40\x05\x4b\x49\x96\xd1\x34\x30\x2b\xf6\x4c\xc2\x66\x7e\x39\x6d\x5b\x8c\x22\xbe\x4b\x0c\x25\xe9\xee\x36\x6b\x8c\x94\x6c\x4d\xa2\xca\x97\x37\x5f\x4d\x38\x9b\xb7\x19\xce\xca\x92\x48\xca\x45\xe9\x49\x19\xd9\xa6\xf6\x3e\x5d\x92\xc1\xa0\x6d\xff\xbf\x72\x9a\x2d\xaf\x8c\x12\x4f\xfe\xca\xcb\x29\x17\x9d\x92\x28\x69\x2d\x86\xf2\xbc\x62\x11\xee\xce\xce\x2f\x6d\xd6\x09\xd8\x5d\xc4\x4e\xb5\x9c\x8c\xc7\x83\xb3\xc6\x64\x70\x99\xd1\xd8\xc7\xad\x0b\x5d\x24\xf6\xc2\x2f\x4b\xdd\x45\xca\xdf\x92\xa7\x60\xb9\xfa\xe7\xb5\x00\xcc\x17\xf7\xd3\x09\x66\x8a\x82\x8e\x50\x7a\x64\x10\x36\x7c\x40\xe1\x42\xad\x2c\xd8\xc4\xaa\xe3\xf6\x3d\x30\x5b\x42\x23\xd6\x0c\xda\x93\xf3\xb4\xf6\x6c\x4e\xb4\xd3\xf3\x39\xd6\xb0\x14\x70\x20\xb5\xbb\xee\xef\xd3\x88\x10\x37\x7d\x9f\x61\xbf\x83\xec\x2d\x46\x87\xd7\x52\x0e\x9f\x53\x7e\x9c\xae\x1e\x66\xef\x7e\x53\xb3\xa3\xfc\x49\xcb\x57\xee\x79\xd1\x79\xd8\xfc\xcc\xeb\x7b\x03\x30\x2e\x6c\x53\xde\x54\xda\x95\xed\xf0\x97\xc8\xcf\x82\x93\xa4\x70\x55\x8d\x9f\x94\xab\x40\x3e\xed\x71\xaa\x77\x29\xdf\x95\x3c\x33\xae\xd5\xd1\xb6\xa6\xc7\x5a\x93\x70\x1e\x0b\x72\x21\x29\x6b\x04\x59\xcb\x22\x38\xc6\xba\xea\x2f\xc1\x09\x1e\xf2\xc4\xfe\x11\x00\x00\xff\xff\x95\xfb\xb4\x1f\x08\x04\x00\x00")

func gradleChartTemplatesNotesTxtBytes() ([]byte, error) {
	return bindataRead(
		_gradleChartTemplatesNotesTxt,
		"gradle/chart/templates/NOTES.txt",
	)
}

func gradleChartTemplatesNotesTxt() (*asset, error) {
	bytes, err := gradleChartTemplatesNotesTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gradle/chart/templates/NOTES.txt", size: 1032, mode: os.FileMode(420), modTime: time.Unix(1498144407, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gradleChartTemplates_helpersTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x90\x41\x6b\xe3\x30\x10\x85\xef\xfe\x15\x0f\xb3\x81\xdd\x80\x9d\xc3\xc2\x1e\x02\x39\x65\x7b\x2a\xa4\xd0\x40\x7b\x56\xac\xa7\x5a\x20\x2b\xae\x34\x0a\x09\x69\xfe\x7b\x91\xdc\x36\x14\x7a\x68\x6f\x83\xf8\xe6\xcd\xd3\x77\x3e\x2f\xe6\x38\xd8\x61\x89\x48\x81\xb1\x8e\x72\x1a\xb9\x1a\x52\x14\xd5\xf5\x5c\x62\xbe\xb8\x5c\xaa\x4c\x55\x37\xc7\x51\x79\x0d\xe9\x09\xaf\x06\x62\x6f\xca\xdc\xf5\x2a\x48\x5b\xbd\x71\x0d\x34\x8d\xf5\x44\x9d\x99\x1a\xcd\xf5\x55\x25\x27\x68\xd7\x05\xdf\xe4\x80\xf6\x41\xb9\xc4\xd8\x66\xf2\xee\xc0\x10\xac\x26\x5e\x20\x21\xf9\x0e\xff\xfe\x96\xd1\x0e\xdb\x64\x8c\x3d\xa2\x6e\xae\x61\xf4\xba\xcc\x53\xaf\x75\xa0\x12\x42\x7d\xdc\x30\xc9\xb9\x13\x9e\x93\x72\xd6\x58\x6a\xa8\x71\x2c\x8d\xdb\xea\x91\x53\x7a\xe1\x25\xdf\xc8\xed\x23\x76\xec\x54\x8a\x44\xdc\x0f\xc4\x6d\xda\x31\x78\x0a\xe3\xf4\x4f\x63\xe9\x74\x84\x0a\x84\xb3\x83\x15\x6a\xc8\x1e\xd2\xdb\x88\xdf\xbb\x53\x71\xf0\x7f\xb3\xcd\xac\xf5\x4f\x88\x23\xbb\x3f\x5f\xe8\xc8\xa5\x3e\x2b\xf9\x55\xd2\x97\xab\xef\xbb\x79\xdf\x1c\x83\xf5\x62\x50\xcf\x62\x33\x8b\x35\xda\x7b\x3a\xaa\xc8\x69\x73\x8a\xfd\x89\xc6\xd7\x00\x00\x00\xff\xff\x34\x01\xd0\x17\x04\x02\x00\x00")

func gradleChartTemplates_helpersTplBytes() ([]byte, error) {
	return bindataRead(
		_gradleChartTemplates_helpersTpl,
		"gradle/chart/templates/_helpers.tpl",
	)
}

func gradleChartTemplates_helpersTpl() (*asset, error) {
	bytes, err := gradleChartTemplates_helpersTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gradle/chart/templates/_helpers.tpl", size: 516, mode: os.FileMode(420), modTime: time.Unix(1498144407, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gradleChartTemplatesDeploymentYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x52\xc1\x8a\xdb\x30\x14\xbc\xfb\x2b\x06\x5d\x4b\x1c\xd2\xa3\xae\x5b\xe8\xad\xe4\xb4\xd0\x53\x79\x71\x5e\x13\x51\x59\x12\xd2\x73\x68\xf0\xea\xdf\x8b\x6c\x6f\x2c\x93\x42\xe9\x65\x75\x12\x33\xd2\xcc\xbc\x91\x28\x98\x57\x8e\xc9\x78\xa7\xc1\xbf\x85\x5d\xd9\xa6\xfd\xed\x70\x62\xa1\x43\xf3\xcb\xb8\xb3\xc6\x17\x0e\xd6\xdf\x7b\x76\xd2\xf4\x2c\x74\x26\x21\xdd\x00\x8e\x7a\xd6\x18\x47\x08\xf7\xc1\x92\x30\xd4\xcf\xc1\xda\x02\x2b\xb4\xc8\xb9\x01\x2c\x9d\xd8\xa6\x72\x1a\xe8\xae\x14\x45\x43\x8d\x23\xda\x97\xb2\x6f\xbf\x51\xcf\xc8\x79\xb7\x22\x4b\x18\xbc\x21\x72\xb0\xd4\x31\xd4\x27\x05\xf5\x43\x21\x67\xd5\xa4\xc0\x5d\xd1\x2a\x9c\xe9\x28\x4d\xee\xed\x2b\xd9\x81\x53\xbb\x80\x2f\x7e\x70\x32\x9b\xbf\xe7\x9a\xed\xeb\xe8\x65\xd5\xd1\xca\xa2\x10\xfe\x35\x0d\xf0\x9e\x60\x9a\xc7\x3b\x21\xe3\x38\x3e\x44\x76\x6b\x27\xdb\x09\x1f\x26\xa6\xa7\x0b\x2f\x1d\x2c\xb9\x27\xa8\x8d\x7c\x31\x49\xe2\x1d\x39\xef\x9f\x48\x1f\x2f\x7f\xc5\xdd\xac\xae\x9f\x08\xa1\xcb\x54\xd8\xc6\xf6\x38\x58\x7b\xf4\xd6\x74\xf7\x4d\x6f\xf3\x8d\xf0\x20\xeb\xb8\xc1\x47\xa9\x2a\xda\xad\x33\x1f\x7d\x79\xcb\x4a\x26\x71\xbc\x99\x8e\x5b\xe3\x84\xa3\x23\x5b\x0e\xd4\x52\xd6\xdc\xd8\x71\x4a\xc7\xe8\x4f\xbc\x4a\x02\x57\x91\xf0\x95\xa5\x86\x80\x40\x72\xd5\xd8\x6f\xb1\xff\xb5\x8c\x4c\x67\xf3\xe1\x9e\xc9\x0f\xb1\xe3\xa4\x9b\xf2\x97\xfc\x77\xea\x6d\xf5\x45\x17\x12\x6f\x30\xee\xcc\x4e\x70\xf8\x5c\x6e\xff\x09\x00\x00\xff\xff\x52\x7b\x20\xc6\x87\x03\x00\x00")

func gradleChartTemplatesDeploymentYamlBytes() ([]byte, error) {
	return bindataRead(
		_gradleChartTemplatesDeploymentYaml,
		"gradle/chart/templates/deployment.yaml",
	)
}

func gradleChartTemplatesDeploymentYaml() (*asset, error) {
	bytes, err := gradleChartTemplatesDeploymentYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gradle/chart/templates/deployment.yaml", size: 903, mode: os.FileMode(420), modTime: time.Unix(1498144407, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gradleChartTemplatesIngressYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x90\xb1\x6a\xf4\x30\x10\x84\x7b\x3f\xc5\xa0\xf6\xe7\x74\x5c\xab\xf6\xaf\xd2\x1c\x21\xc5\xb5\x61\x6d\x4f\x62\x73\xb2\x2c\xb4\xf2\x11\x70\xf4\xee\x41\x3e\x5f\x02\xa9\xd2\xed\x7c\xec\x0e\x1f\x2b\x71\xbc\x30\xe9\x38\x07\x07\x7e\x64\x86\x3a\xea\xf1\x76\x6a\x99\xe5\xd4\x5c\xc7\xd0\x3b\x3c\x85\xf7\x44\xd5\x66\x62\x96\x5e\xb2\xb8\x06\x08\x32\xd1\x61\x5d\x91\x39\x45\x2f\x99\x30\x6f\x8b\xf7\x15\x1b\x58\x94\xd2\x00\x5e\x5a\x7a\xad\xdb\x40\x37\x48\xca\x0e\x66\x5d\x61\xff\xd7\xd9\x9e\x65\x22\x4a\x39\xfc\x90\xdd\x04\x9f\x48\x8c\x5e\x3a\xc2\xfc\x33\x30\xaf\x06\xa5\x98\x46\x23\xbb\xda\x95\x16\xcf\xad\xf4\x80\x61\xd6\xbc\x49\xd8\x17\x7a\x8a\xf2\x51\x6a\x2b\xbb\x88\x5f\xa8\xb6\x15\x65\x3f\x4f\x32\x86\xbb\x15\x30\xe4\x1c\xef\x56\x40\x94\x3c\xe8\x23\x1c\xb6\xe8\x70\xdc\x33\xd0\x4a\x77\x65\xe8\xdd\x37\x00\x94\xe9\x36\x76\x3c\xff\xe1\x01\xbf\x4e\x9e\xe7\xb4\xeb\xee\x6a\x3b\xb7\xf5\xf3\x29\x88\xaf\x0b\xf5\xf2\x2b\x00\x00\xff\xff\x54\x0e\x39\x31\x96\x01\x00\x00")

func gradleChartTemplatesIngressYamlBytes() ([]byte, error) {
	return bindataRead(
		_gradleChartTemplatesIngressYaml,
		"gradle/chart/templates/ingress.yaml",
	)
}

func gradleChartTemplatesIngressYaml() (*asset, error) {
	bytes, err := gradleChartTemplatesIngressYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gradle/chart/templates/ingress.yaml", size: 406, mode: os.FileMode(420), modTime: time.Unix(1498144407, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gradleChartTemplatesServiceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\xcd\x4a\x04\x31\x10\x84\xef\x79\x8a\x22\x57\xd9\x80\xd7\x5c\xf7\x2e\x03\xca\x5e\xa5\xcd\xb6\x3a\x98\x49\x42\xa7\x77\x51\xc6\xbc\xbb\x64\x22\x0a\xfe\xec\xad\xa9\xf4\x97\x2f\x29\x2a\xf3\x81\xa5\xce\x39\x79\x9c\xaf\xcd\xcb\x9c\x8e\x1e\xb7\x2c\xe7\x39\xb0\x59\x58\xe9\x48\x4a\xde\x00\x89\x16\xf6\x58\x57\x28\x2f\x25\x92\x32\xec\xe3\x29\xc6\x1e\x5b\x38\xb4\x66\x80\x48\x0f\x1c\x6b\xdf\x06\xc2\x33\x89\x7a\xd8\x75\x85\xdb\xf7\xd9\xdd\xd0\xc2\x68\x6d\xf7\x9d\x7c\x9a\xf1\x0e\xe1\x12\x29\x30\xec\x95\x85\xbd\xb7\x68\xcd\x9a\x5a\x38\xf4\xbb\xf4\xad\x0c\xb3\x3b\x50\x3c\x71\x75\x75\x3c\xcf\xf5\x83\x21\x2e\x59\x74\xf3\xee\xb6\xf1\xcf\x6d\x7e\x55\x96\x44\x71\xca\xa2\x83\x02\x94\xe4\x89\x75\xfa\x0f\x99\xd3\x6f\xa4\x48\xd6\x1c\x72\xf4\xb8\xdb\x4f\x5b\xf2\xd5\xcc\x4f\x3c\x8d\x0f\x1b\xa0\x72\xe4\xa0\x59\x46\x35\x54\xca\xe5\x26\x3f\x02\x00\x00\xff\xff\xce\x5a\xb0\xc7\x95\x01\x00\x00")

func gradleChartTemplatesServiceYamlBytes() ([]byte, error) {
	return bindataRead(
		_gradleChartTemplatesServiceYaml,
		"gradle/chart/templates/service.yaml",
	)
}

func gradleChartTemplatesServiceYaml() (*asset, error) {
	bytes, err := gradleChartTemplatesServiceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gradle/chart/templates/service.yaml", size: 405, mode: os.FileMode(420), modTime: time.Unix(1498144407, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gradleChartValuesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8f\x3f\x8b\x1b\x41\x0c\x47\xfb\xf9\x14\x3f\xb8\xda\xc6\x77\xe4\x8f\x99\x2e\xdc\x41\x38\xc8\x05\x17\x69\x52\xca\xbb\x5a\x47\xb6\x66\x35\xd1\x68\x4c\xf6\xdb\x87\xdd\x34\x29\xaf\x93\xc4\xe3\x89\xf7\x80\x17\x9e\xa8\x6b\xe0\x4e\xda\xb9\x61\x32\xc7\x57\xa7\x51\x19\xd5\xed\xca\x43\xb4\x7d\x7a\xc0\x8f\x5f\xd2\x20\x0d\x84\x9f\x5f\xde\xbe\xed\x26\xf3\x42\x11\x3c\x62\x12\xe5\x15\x78\xe1\x41\xc9\x19\x77\x72\xa1\xb3\x72\x43\x18\xce\x8c\x4a\xad\xf1\x08\x99\xc3\xb0\x58\x77\x04\x97\xaa\x14\xdc\xf6\xc9\xb9\xaa\x0c\xf4\x6c\x7d\x8e\x8c\xa7\x24\x85\x2e\x9c\x13\xe0\x7c\x91\x16\xbe\x64\x8c\x36\xdc\xd8\xf7\x62\x09\x30\xbf\x64\xa8\x9c\x9d\x7c\x49\xc0\x4c\x85\x33\xac\xf2\x7c\x1d\x6f\x09\x08\xba\x64\x1c\x77\xd7\xf1\xb6\x23\xad\x32\x73\x02\x6a\x57\x3d\x99\xca\xb0\x64\xbc\x4e\xdf\x2d\x4e\xce\x8d\xe7\x48\x8d\xfd\x2e\xc3\xf6\xec\x9f\xe7\x4a\x77\x5a\x25\x4b\xe5\x8c\x67\xed\x2d\xd8\x5f\x4f\x09\xe0\x3f\xc1\x3e\x93\x9e\xcc\x23\xe3\x78\x48\x58\x63\xfe\x3b\x7d\xf8\xf8\xe9\x73\x72\x6e\xd6\x7d\xe0\xb6\x1a\x55\x8a\xc4\x36\x01\x43\xed\x19\x8f\x87\x43\xd9\xb6\xc2\xc5\xd6\xac\xc7\xa7\xe3\x9b\x6c\xa1\xbf\x3b\xb7\xf7\xb0\x7f\x03\x00\x00\xff\xff\x06\x8b\xb1\x45\xa9\x01\x00\x00")

func gradleChartValuesYamlBytes() ([]byte, error) {
	return bindataRead(
		_gradleChartValuesYaml,
		"gradle/chart/values.yaml",
	)
}

func gradleChartValuesYaml() (*asset, error) {
	bytes, err := gradleChartValuesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gradle/chart/values.yaml", size: 425, mode: os.FileMode(420), modTime: time.Unix(1498144407, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gradleDetect = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\xc9\xb1\x0a\xc2\x30\x14\x85\xe1\xfd\x3e\xc5\xb1\x95\x6e\x35\x76\x56\x5c\x7d\x08\x71\x68\xcc\x89\xb9\x10\x52\xc8\x6d\xc4\xc7\x17\x0b\xe2\xf8\xff\x5f\xbf\x73\xcd\xaa\xf3\x5a\x1c\xcb\x0b\x7e\xb6\x24\x3d\xbe\xd9\x8c\x38\xfb\xa6\x39\x8c\x41\xeb\x45\x44\x23\x6e\x18\x23\xf6\x93\xdb\xf6\xe1\x59\xe7\x90\x89\xfb\x09\x6b\x62\x11\x00\x7c\xa4\x05\xdd\x75\xfb\x1d\x86\x01\x7c\xeb\x8a\xa3\x30\x1b\xe5\xc7\x65\xf9\xd3\x24\x51\xe5\x13\x00\x00\xff\xff\x33\x4d\x27\xca\x84\x00\x00\x00")

func gradleDetectBytes() ([]byte, error) {
	return bindataRead(
		_gradleDetect,
		"gradle/detect",
	)
}

func gradleDetect() (*asset, error) {
	bytes, err := gradleDetectBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gradle/detect", size: 132, mode: os.FileMode(493), modTime: time.Unix(1498144407, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mavenDockerignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xc9\x4f\xce\x4e\x2d\x4a\xcb\xcc\x49\xe5\x4a\x29\x4a\x4c\x2b\xd1\x2b\xc9\xcf\xcd\xe1\x4a\xce\x48\x2c\x2a\xd1\xe7\xf2\xf3\x0f\xf1\x74\x76\xe5\x02\x04\x00\x00\xff\xff\x18\xba\x47\x9a\x24\x00\x00\x00")

func mavenDockerignoreBytes() ([]byte, error) {
	return bindataRead(
		_mavenDockerignore,
		"maven/.dockerignore",
	)
}

func mavenDockerignore() (*asset, error) {
	bytes, err := mavenDockerignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "maven/.dockerignore", size: 36, mode: os.FileMode(420), modTime: time.Unix(1498144407, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mavenDockerfile = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\xcd\xcf\x4a\xc4\x30\x10\x06\xf0\xfb\x3c\xc5\x90\xb3\x49\x0e\xba\xba\x2c\x78\x71\xbb\xc2\xa2\x6b\x96\x48\x51\x11\x0f\x43\x9b\x16\xd3\xe6\x0f\x69\x2d\x3e\xbe\x34\x95\x85\x9e\x66\xe6\x63\xf8\x7e\x8f\x5a\x9d\xd0\xd1\x64\xfc\xee\x5a\x6c\xb8\xad\x3b\xbe\xe5\xd4\xc7\x6f\x6f\x90\x06\x7c\x28\x8f\xcf\x05\xc0\x5e\x9d\x3f\x50\xa0\xfc\x19\x92\x1c\x52\x25\x29\x46\xd0\xe5\x0b\xba\xc9\x23\x6f\x56\xb9\x8c\xc1\x89\x5f\xd7\x63\xd5\x1b\xf2\x18\xa9\xea\xa8\x35\x00\x19\x0a\xd1\x78\x5b\x77\xbb\x6d\x86\x16\x06\x0e\xef\x67\xf5\x7a\xc0\x9b\xcd\xed\xdd\x02\x71\xde\xa4\xe0\xee\xb3\xbd\xee\x1e\x29\xb5\x66\x9c\x57\x61\x29\xa1\x0c\xf1\x72\xc0\x9b\xd2\x4f\xc5\x51\xe7\x10\xf6\xa7\x02\x3f\x99\xa5\x89\xd8\x15\x32\x6e\x29\xcd\xf3\xff\x95\x7d\xc1\x5f\x00\x00\x00\xff\xff\xd5\xf8\x06\x75\xf7\x00\x00\x00")

func mavenDockerfileBytes() ([]byte, error) {
	return bindataRead(
		_mavenDockerfile,
		"maven/Dockerfile",
	)
}

func mavenDockerfile() (*asset, error) {
	bytes, err := mavenDockerfileBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "maven/Dockerfile", size: 247, mode: os.FileMode(420), modTime: time.Unix(1498144407, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mavenNotice = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x51\x4f\x8f\xe3\x26\x14\xbf\xfb\x53\xfc\x34\xa7\x5d\x89\x4e\x77\x56\xea\x65\x6f\x8c\x4d\x62\x54\x07\x22\x4c\x36\xcd\x91\xd8\x64\x4c\xeb\x40\x64\x48\x47\xf3\xed\x2b\x48\xb6\xb3\xb3\x27\xcb\xbc\xf7\xfb\xfb\x36\x5c\xa3\x73\x83\xf5\xd1\x7e\xab\xaa\x3a\x5c\xde\x16\xf7\x32\x25\x7c\xaa\x3f\xe3\xeb\x97\xa7\xa7\xdf\xbe\x7e\x79\xfa\x03\xad\x5d\xc2\x3f\x57\x02\xee\x87\xc7\xaa\xda\xda\xe5\xec\x62\x74\xc1\xc3\x45\x4c\x76\xb1\xc7\x37\xbc\x2c\xc6\x27\x3b\x12\x9c\x16\x6b\x11\x4e\x18\x26\xb3\xbc\x58\x82\x14\x60\xfc\x1b\x2e\x76\x89\xc1\x23\x1c\x93\x71\xde\xf9\x17\x18\x0c\xe1\xf2\x96\x37\xd3\xe4\x22\x62\x38\xa5\x57\xb3\x58\x18\x3f\xc2\xc4\x18\x06\x67\x92\x1d\x31\x86\xe1\x7a\xb6\x3e\x99\x94\xf5\x4e\x6e\xb6\x11\x9f\xd2\x64\xf1\xd0\xdf\x11\x0f\x9f\x8b\xc8\x68\xcd\x0c\xe7\x91\x67\x3f\x46\x78\x75\x69\x0a\xd7\x84\xc5\xc6\xb4\xb8\x21\x73\x10\x38\x3f\xcc\xd7\x31\x7b\xf8\x31\x9e\xdd\xd9\xdd\x15\x32\xbc\x54\x10\x33\xe9\x35\x5a\x52\x7c\x12\x9c\xc3\xe8\x4e\xf9\x6b\x4b\xac\xcb\xf5\x38\xbb\x38\x11\x8c\x2e\x53\x1f\xaf\xc9\x12\xc4\xfc\x58\xca\x24\x39\xc7\xef\x61\x41\xb4\xf3\x9c\x19\x9c\x8d\xb7\xac\xef\xee\xca\x4e\x56\xb9\xe4\x42\xd3\xbd\xa2\xa2\xfb\x3a\x85\xf3\xc7\x24\x2e\xe2\x74\x5d\xbc\x8b\x93\x2d\x98\x31\x20\x86\xa2\xf8\xb7\x1d\x52\x7e\xc9\xeb\xa7\x30\xcf\xe1\x35\x47\x1b\x82\x1f\x5d\x4e\x14\xbf\x55\x95\x9e\x2c\xcc\x31\xfc\x6b\x4b\x96\xdb\x85\x7d\x48\x6e\xb8\xd5\x5d\x0e\x70\x79\xbf\xea\x7d\x14\x27\x33\xcf\x38\xda\x7b\x61\x76\xcc\xf5\x9a\x9f\xe2\x2c\x59\x3e\x26\xe3\x93\x33\x33\x2e\x61\x29\x7a\xbf\xc6\x7c\xac\x2a\xdd\x32\xf4\x72\xa5\xf7\x54\x31\xf0\x1e\x5b\x25\xbf\xf3\x86\x35\x78\xa0\x3d\x78\xff\x40\xb0\xe7\xba\x95\x3b\x8d\x3d\x55\x8a\x0a\x7d\x80\x5c\x81\x8a\x03\xfe\xe4\xa2\x21\x60\x7f\x6d\x15\xeb\x7b\x48\x05\xbe\xd9\x76\x9c\x35\x04\x5c\xd4\xdd\xae\xe1\x62\x8d\xe7\x9d\x86\x90\x1a\x1d\xdf\x70\xcd\x1a\x68\x89\x2c\x78\xa7\xe2\xac\xcf\x64\x1b\xa6\xea\x96\x0a\x4d\x9f\x79\xc7\xf5\x81\x60\xc5\xb5\xc8\x9c\x2b\xa9\x40\xb1\xa5\x4a\xf3\x7a\xd7\x51\x85\xed\x4e\x6d\x65\xcf\x40\x45\x03\x21\x05\x17\x2b\xc5\xc5\x9a\x6d\x98\xd0\x8f\xe0\x02\x42\x82\x7d\x67\x42\xa3\x6f\x69\xd7\x15\x29\xba\xd3\xad\x54\xc5\x5f\x2d\xb7\x07\xc5\xd7\xad\x46\x2b\xbb\x86\xa9\x1e\xcf\x0c\x1d\xa7\xcf\x1d\xbb\x49\x89\x03\xea\x8e\xf2\x0d\x41\x43\x37\x74\xcd\x0a\x4a\xea\x96\xa9\xb2\x76\x77\xb7\x6f\x59\x79\xe2\x02\x54\x80\xd6\x9a\x4b\x91\x63\xd4\x52\x68\x45\x6b\x4d\xa0\xa5\xd2\xff\x43\xf7\xbc\x67\x04\x54\xf1\x3e\x17\xb2\x52\x72\x43\x90\xeb\x94\xab\xd2\x99\xc8\x38\xc1\x6e\x2c\xb9\x6a\x7c\xb8\x88\x54\xe5\x7f\xd7\xb3\x77\x2f\x0d\xa3\x1d\x17\xeb\x3e\x83\x7f\x5e\x7e\xac\xfe\x0b\x00\x00\xff\xff\x3e\x88\xe6\xeb\x33\x04\x00\x00")

func mavenNoticeBytes() ([]byte, error) {
	return bindataRead(
		_mavenNotice,
		"maven/NOTICE",
	)
}

func mavenNotice() (*asset, error) {
	bytes, err := mavenNoticeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "maven/NOTICE", size: 1075, mode: os.FileMode(420), modTime: time.Unix(1498144407, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mavenChartHelmignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x8e\xc1\x6a\x23\x31\x0c\x86\xef\x7a\x8a\x7f\x99\xcb\xee\xb0\x78\x1e\x22\xd9\xc3\x9e\x5a\x48\xc9\xb5\x78\x66\x14\x5b\x89\x47\x36\xb6\x26\x69\x7b\xe8\xb3\x97\x24\x84\xf6\xf2\x81\x3e\x24\xf1\x75\x78\xf6\x66\x5c\xb5\xc1\x32\x24\x68\xae\x8c\x4b\x64\xc5\xb8\x4a\x9a\x45\x03\x8a\x9f\x4e\x3e\x70\x73\xd4\xe1\x25\x4a\x43\x5b\x4b\xc9\xd5\x1a\x5a\xe4\x94\x10\x52\x1e\xb1\x78\x9b\xa2\x68\xf8\x8b\xca\xc9\x9b\x9c\x19\xc5\x5b\xfc\xe1\xbd\xce\xd4\x41\x39\x78\x93\xac\xf8\x5d\x2a\x1f\xe4\x8d\x67\x5c\xc4\x22\x7e\xfd\x71\x78\xd2\xf4\x8e\xac\xb7\xcb\x6b\x12\x0a\x57\x24\x51\x76\xe4\xb6\xbb\xd7\x9d\xe5\xca\xd4\x61\x93\x97\x25\x2b\xf6\x9b\x1d\x66\xa9\x8d\x5c\x10\x1b\x6e\xbc\xe7\x93\x1b\x3f\xea\x70\xe3\x43\xc4\x30\x5c\xf1\x18\xdb\x59\x87\xef\x47\xa3\x9f\x4e\x6b\xc1\x41\x12\x37\xea\x5d\xbb\x14\xea\xdd\xe8\x4f\xd4\x3b\x5b\x0a\xf5\x9f\xd4\x61\xef\xab\xe4\xb5\xe1\xff\xf6\x5f\x23\x57\x6a\x3e\xf2\x64\xe4\x64\x66\x3f\xdc\xf7\x6a\x3e\xd2\x57\x00\x00\x00\xff\xff\xbc\x5b\x94\x77\x4d\x01\x00\x00")

func mavenChartHelmignoreBytes() ([]byte, error) {
	return bindataRead(
		_mavenChartHelmignore,
		"maven/chart/.helmignore",
	)
}

func mavenChartHelmignore() (*asset, error) {
	bytes, err := mavenChartHelmignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "maven/chart/.helmignore", size: 333, mode: os.FileMode(420), modTime: time.Unix(1498144407, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mavenChartChartYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xca\x4b\xcc\x4d\xb5\x52\xc8\x4d\x2c\x4b\xcd\xe3\x02\x04\x00\x00\xff\xff\x46\x16\x6a\xc9\x0c\x00\x00\x00")

func mavenChartChartYamlBytes() ([]byte, error) {
	return bindataRead(
		_mavenChartChartYaml,
		"maven/chart/Chart.yaml",
	)
}

func mavenChartChartYaml() (*asset, error) {
	bytes, err := mavenChartChartYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "maven/chart/Chart.yaml", size: 12, mode: os.FileMode(420), modTime: time.Unix(1498144407, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mavenChartTemplatesNotesTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x92\x51\x8b\xda\x4e\x14\x47\xdf\xf7\x53\xfc\x08\x82\xff\xff\x83\x63\x9f\x85\x7d\x69\x2b\x45\x58\x54\xec\x76\xa1\x94\x52\xae\x93\xab\x4e\x77\x32\x13\x72\x6f\x74\x25\xe4\xbb\x97\x89\xd6\xcd\xda\xb2\x94\xd2\xbc\x65\x42\xce\x1c\xee\xb9\x37\x4d\x33\x82\xdb\xc0\xc6\xa0\xe4\x82\x20\x9b\xc7\x9c\x97\xb1\xd2\x0c\xe6\x81\x7c\xcd\x62\x84\xab\xbd\xb3\x6c\xf4\x58\x32\xda\xf6\x06\xf8\xc0\x0a\xdd\x31\xa8\x2c\xbd\xb3\xa4\x2e\x06\x7c\x5a\xdd\x61\x7d\x44\x55\x87\xe0\xc2\x36\x7d\x16\x86\x8d\x45\x41\x21\x97\xc9\x0d\xc0\x4f\x65\xac\x14\xf3\xc5\xfb\xe9\xb7\xe5\x62\x75\x7f\x3b\xf8\xef\xb1\x5e\xb3\x55\x8f\x2d\x2b\x46\xa3\x40\x05\x4b\x49\x96\xd1\x34\x30\x2b\xf6\x4c\xc2\x66\x7e\x39\x6d\x5b\x8c\x22\xbe\x4b\x0c\x25\xe9\xee\x36\x6b\x8c\x94\x6c\x4d\xa2\xca\x97\x37\x5f\x4d\x38\x9b\xb7\x19\xce\xca\x92\x48\xca\x45\xe9\x49\x19\xd9\xa6\xf6\x3e\x5d\x92\xc1\xa0\x6d\xff\xbf\x72\x9a\x2d\xaf\x8c\x12\x4f\xfe\xca\xcb\x29\x17\x9d\x92\x28\x69\x2d\x86\xf2\xbc\x62\x11\xee\xce\xce\x2f\x6d\xd6\x09\xd8\x5d\xc4\x4e\xb5\x9c\x8c\xc7\x83\xb3\xc6\x64\x70\x99\xd1\xd8\xc7\xad\x0b\x5d\x24\xf6\xc2\x2f\x4b\xdd\x45\xca\xdf\x92\xa7\x60\xb9\xfa\xe7\xb5\x00\xcc\x17\xf7\xd3\x09\x66\x8a\x82\x8e\x50\x7a\x64\x10\x36\x7c\x40\xe1\x42\xad\x2c\xd8\xc4\xaa\xe3\xf6\x3d\x30\x5b\x42\x23\xd6\x0c\xda\x93\xf3\xb4\xf6\x6c\x4e\xb4\xd3\xf3\x39\xd6\xb0\x14\x70\x20\xb5\xbb\xee\xef\xd3\x88\x10\x37\x7d\x9f\x61\xbf\x83\xec\x2d\x46\x87\xd7\x52\x0e\x9f\x53\x7e\x9c\xae\x1e\x66\xef\x7e\x53\xb3\xa3\xfc\x49\xcb\x57\xee\x79\xd1\x79\xd8\xfc\xcc\xeb\x7b\x03\x30\x2e\x6c\x53\xde\x54\xda\x95\xed\xf0\x97\xc8\xcf\x82\x93\xa4\x70\x55\x8d\x9f\x94\xab\x40\x3e\xed\x71\xaa\x77\x29\xdf\x95\x3c\x33\xae\xd5\xd1\xb6\xa6\xc7\x5a\x93\x70\x1e\x0b\x72\x21\x29\x6b\x04\x59\xcb\x22\x38\xc6\xba\xea\x2f\xc1\x09\x1e\xf2\xc4\xfe\x11\x00\x00\xff\xff\x95\xfb\xb4\x1f\x08\x04\x00\x00")

func mavenChartTemplatesNotesTxtBytes() ([]byte, error) {
	return bindataRead(
		_mavenChartTemplatesNotesTxt,
		"maven/chart/templates/NOTES.txt",
	)
}

func mavenChartTemplatesNotesTxt() (*asset, error) {
	bytes, err := mavenChartTemplatesNotesTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "maven/chart/templates/NOTES.txt", size: 1032, mode: os.FileMode(420), modTime: time.Unix(1498144407, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mavenChartTemplates_helpersTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x90\x41\x6b\xe3\x30\x10\x85\xef\xfe\x15\x0f\xb3\x81\xdd\x80\x9d\xc3\xc2\x1e\x02\x39\x65\x7b\x2a\xa4\xd0\x40\x7b\x56\xac\xa7\x5a\x20\x2b\xae\x34\x0a\x09\x69\xfe\x7b\x91\xdc\x36\x14\x7a\x68\x6f\x83\xf8\xe6\xcd\xd3\x77\x3e\x2f\xe6\x38\xd8\x61\x89\x48\x81\xb1\x8e\x72\x1a\xb9\x1a\x52\x14\xd5\xf5\x5c\x62\xbe\xb8\x5c\xaa\x4c\x55\x37\xc7\x51\x79\x0d\xe9\x09\xaf\x06\x62\x6f\xca\xdc\xf5\x2a\x48\x5b\xbd\x71\x0d\x34\x8d\xf5\x44\x9d\x99\x1a\xcd\xf5\x55\x25\x27\x68\xd7\x05\xdf\xe4\x80\xf6\x41\xb9\xc4\xd8\x66\xf2\xee\xc0\x10\xac\x26\x5e\x20\x21\xf9\x0e\xff\xfe\x96\xd1\x0e\xdb\x64\x8c\x3d\xa2\x6e\xae\x61\xf4\xba\xcc\x53\xaf\x75\xa0\x12\x42\x7d\xdc\x30\xc9\xb9\x13\x9e\x93\x72\xd6\x58\x6a\xa8\x71\x2c\x8d\xdb\xea\x91\x53\x7a\xe1\x25\xdf\xc8\xed\x23\x76\xec\x54\x8a\x44\xdc\x0f\xc4\x6d\xda\x31\x78\x0a\xe3\xf4\x4f\x63\xe9\x74\x84\x0a\x84\xb3\x83\x15\x6a\xc8\x1e\xd2\xdb\x88\xdf\xbb\x53\x71\xf0\x7f\xb3\xcd\xac\xf5\x4f\x88\x23\xbb\x3f\x5f\xe8\xc8\xa5\x3e\x2b\xf9\x55\xd2\x97\xab\xef\xbb\x79\xdf\x1c\x83\xf5\x62\x50\xcf\x62\x33\x8b\x35\xda\x7b\x3a\xaa\xc8\x69\x73\x8a\xfd\x89\xc6\xd7\x00\x00\x00\xff\xff\x34\x01\xd0\x17\x04\x02\x00\x00")

func mavenChartTemplates_helpersTplBytes() ([]byte, error) {
	return bindataRead(
		_mavenChartTemplates_helpersTpl,
		"maven/chart/templates/_helpers.tpl",
	)
}

func mavenChartTemplates_helpersTpl() (*asset, error) {
	bytes, err := mavenChartTemplates_helpersTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "maven/chart/templates/_helpers.tpl", size: 516, mode: os.FileMode(420), modTime: time.Unix(1498144407, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mavenChartTemplatesDeploymentYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x52\xc1\x8a\xdb\x30\x14\xbc\xfb\x2b\x06\x5d\x4b\x1c\xd2\xa3\xae\x5b\xe8\xad\xe4\xb4\xd0\x53\x79\x71\x5e\x13\x51\x59\x12\xd2\x73\x68\xf0\xea\xdf\x8b\x6c\x6f\x2c\x93\x42\xe9\x65\x75\x12\x33\xd2\xcc\xbc\x91\x28\x98\x57\x8e\xc9\x78\xa7\xc1\xbf\x85\x5d\xd9\xa6\xfd\xed\x70\x62\xa1\x43\xf3\xcb\xb8\xb3\xc6\x17\x0e\xd6\xdf\x7b\x76\xd2\xf4\x2c\x74\x26\x21\xdd\x00\x8e\x7a\xd6\x18\x47\x08\xf7\xc1\x92\x30\xd4\xcf\xc1\xda\x02\x2b\xb4\xc8\xb9\x01\x2c\x9d\xd8\xa6\x72\x1a\xe8\xae\x14\x45\x43\x8d\x23\xda\x97\xb2\x6f\xbf\x51\xcf\xc8\x79\xb7\x22\x4b\x18\xbc\x21\x72\xb0\xd4\x31\xd4\x27\x05\xf5\x43\x21\x67\xd5\xa4\xc0\x5d\xd1\x2a\x9c\xe9\x28\x4d\xee\xed\x2b\xd9\x81\x53\xbb\x80\x2f\x7e\x70\x32\x9b\xbf\xe7\x9a\xed\xeb\xe8\x65\xd5\xd1\xca\xa2\x10\xfe\x35\x0d\xf0\x9e\x60\x9a\xc7\x3b\x21\xe3\x38\x3e\x44\x76\x6b\x27\xdb\x09\x1f\x26\xa6\xa7\x0b\x2f\x1d\x2c\xb9\x27\xa8\x8d\x7c\x31\x49\xe2\x1d\x39\xef\x9f\x48\x1f\x2f\x7f\xc5\xdd\xac\xae\x9f\x08\xa1\xcb\x54\xd8\xc6\xf6\x38\x58\x7b\xf4\xd6\x74\xf7\x4d\x6f\xf3\x8d\xf0\x20\xeb\xb8\xc1\x47\xa9\x2a\xda\xad\x33\x1f\x7d\x79\xcb\x4a\x26\x71\xbc\x99\x8e\x5b\xe3\x84\xa3\x23\x5b\x0e\xd4\x52\xd6\xdc\xd8\x71\x4a\xc7\xe8\x4f\xbc\x4a\x02\x57\x91\xf0\x95\xa5\x86\x80\x40\x72\xd5\xd8\x6f\xb1\xff\xb5\x8c\x4c\x67\xf3\xe1\x9e\xc9\x0f\xb1\xe3\xa4\x9b\xf2\x97\xfc\x77\xea\x6d\xf5\x45\x17\x12\x6f\x30\xee\xcc\x4e\x70\xf8\x5c\x6e\xff\x09\x00\x00\xff\xff\x52\x7b\x20\xc6\x87\x03\x00\x00")

func mavenChartTemplatesDeploymentYamlBytes() ([]byte, error) {
	return bindataRead(
		_mavenChartTemplatesDeploymentYaml,
		"maven/chart/templates/deployment.yaml",
	)
}

func mavenChartTemplatesDeploymentYaml() (*asset, error) {
	bytes, err := mavenChartTemplatesDeploymentYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "maven/chart/templates/deployment.yaml", size: 903, mode: os.FileMode(420), modTime: time.Unix(1498144407, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mavenChartTemplatesIngressYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x90\xb1\x6a\xf4\x30\x10\x84\x7b\x3f\xc5\xa0\xf6\xe7\x74\x5c\xab\xf6\xaf\xd2\x1c\x21\xc5\xb5\x61\x6d\x4f\x62\x73\xb2\x2c\xb4\xf2\x11\x70\xf4\xee\x41\x3e\x5f\x02\xa9\xd2\xed\x7c\xec\x0e\x1f\x2b\x71\xbc\x30\xe9\x38\x07\x07\x7e\x64\x86\x3a\xea\xf1\x76\x6a\x99\xe5\xd4\x5c\xc7\xd0\x3b\x3c\x85\xf7\x44\xd5\x66\x62\x96\x5e\xb2\xb8\x06\x08\x32\xd1\x61\x5d\x91\x39\x45\x2f\x99\x30\x6f\x8b\xf7\x15\x1b\x58\x94\xd2\x00\x5e\x5a\x7a\xad\xdb\x40\x37\x48\xca\x0e\x66\x5d\x61\xff\xd7\xd9\x9e\x65\x22\x4a\x39\xfc\x90\xdd\x04\x9f\x48\x8c\x5e\x3a\xc2\xfc\x33\x30\xaf\x06\xa5\x98\x46\x23\xbb\xda\x95\x16\xcf\xad\xf4\x80\x61\xd6\xbc\x49\xd8\x17\x7a\x8a\xf2\x51\x6a\x2b\xbb\x88\x5f\xa8\xb6\x15\x65\x3f\x4f\x32\x86\xbb\x15\x30\xe4\x1c\xef\x56\x40\x94\x3c\xe8\x23\x1c\xb6\xe8\x70\xdc\x33\xd0\x4a\x77\x65\xe8\xdd\x37\x00\x94\xe9\x36\x76\x3c\xff\xe1\x01\xbf\x4e\x9e\xe7\xb4\xeb\xee\x6a\x3b\xb7\xf5\xf3\x29\x88\xaf\x0b\xf5\xf2\x2b\x00\x00\xff\xff\x54\x0e\x39\x31\x96\x01\x00\x00")

func mavenChartTemplatesIngressYamlBytes() ([]byte, error) {
	return bindataRead(
		_mavenChartTemplatesIngressYaml,
		"maven/chart/templates/ingress.yaml",
	)
}

func mavenChartTemplatesIngressYaml() (*asset, error) {
	bytes, err := mavenChartTemplatesIngressYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "maven/chart/templates/ingress.yaml", size: 406, mode: os.FileMode(420), modTime: time.Unix(1498144407, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mavenChartTemplatesServiceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\xcd\x4a\x04\x31\x10\x84\xef\x79\x8a\x22\x57\xd9\x80\xd7\x5c\xf7\x2e\x03\xca\x5e\xa5\xcd\xb6\x3a\x98\x49\x42\xa7\x77\x51\xc6\xbc\xbb\x64\x22\x0a\xfe\xec\xad\xa9\xf4\x97\x2f\x29\x2a\xf3\x81\xa5\xce\x39\x79\x9c\xaf\xcd\xcb\x9c\x8e\x1e\xb7\x2c\xe7\x39\xb0\x59\x58\xe9\x48\x4a\xde\x00\x89\x16\xf6\x58\x57\x28\x2f\x25\x92\x32\xec\xe3\x29\xc6\x1e\x5b\x38\xb4\x66\x80\x48\x0f\x1c\x6b\xdf\x06\xc2\x33\x89\x7a\xd8\x75\x85\xdb\xf7\xd9\xdd\xd0\xc2\x68\x6d\xf7\x9d\x7c\x9a\xf1\x0e\xe1\x12\x29\x30\xec\x95\x85\xbd\xb7\x68\xcd\x9a\x5a\x38\xf4\xbb\xf4\xad\x0c\xb3\x3b\x50\x3c\x71\x75\x75\x3c\xcf\xf5\x83\x21\x2e\x59\x74\xf3\xee\xb6\xf1\xcf\x6d\x7e\x55\x96\x44\x71\xca\xa2\x83\x02\x94\xe4\x89\x75\xfa\x0f\x99\xd3\x6f\xa4\x48\xd6\x1c\x72\xf4\xb8\xdb\x4f\x5b\xf2\xd5\xcc\x4f\x3c\x8d\x0f\x1b\xa0\x72\xe4\xa0\x59\x46\x35\x54\xca\xe5\x26\x3f\x02\x00\x00\xff\xff\xce\x5a\xb0\xc7\x95\x01\x00\x00")

func mavenChartTemplatesServiceYamlBytes() ([]byte, error) {
	return bindataRead(
		_mavenChartTemplatesServiceYaml,
		"maven/chart/templates/service.yaml",
	)
}

func mavenChartTemplatesServiceYaml() (*asset, error) {
	bytes, err := mavenChartTemplatesServiceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "maven/chart/templates/service.yaml", size: 405, mode: os.FileMode(420), modTime: time.Unix(1498144407, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mavenChartValuesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8f\xbd\x8e\x1b\x31\x0c\x06\x7b\x3d\xc5\x07\x5c\x6d\xc3\x77\xc8\x8f\xa1\x2e\xb8\x6b\x0e\x88\x03\x17\x69\x52\xd2\x5a\xae\x43\x5b\x12\x15\x8a\x5a\x64\xdf\x3e\x58\xa7\x49\x99\x8e\x24\x06\x43\xcc\x13\xde\x78\xa6\x91\x1d\x0b\xe5\xc1\x1d\xb3\x1a\x4e\xb4\x70\x45\x33\xbd\x71\xf2\xbe\x0f\x4f\xf8\xfe\x53\x3a\xa4\x83\xf0\xe3\xcb\xe9\xeb\x6e\x56\x2b\xe4\xce\x13\x66\xc9\xbc\x01\x6f\x9c\x32\x19\x63\x21\x13\xba\x64\xee\x70\xc5\x85\xd1\xa8\x77\x9e\x20\xd5\x15\xab\x0e\x83\x73\x69\x99\x9c\xfb\x3e\x18\xb7\x2c\x89\x5e\x75\x54\x8f\x78\x09\x52\xe8\xca\x31\x00\xc6\x57\xe9\x6e\x6b\xc4\xa4\xe9\xce\xb6\x17\x0d\x80\xda\x35\x22\xcb\xc5\xc8\xd6\x00\x54\x2a\x1c\xa1\x8d\xeb\x6d\xba\x07\xc0\xe9\x1a\x71\xdc\xdd\xa6\xfb\x8e\x72\x93\xca\x01\x68\x23\xe7\xb3\x66\x49\x6b\xc4\xfb\xfc\x4d\xfd\x6c\xdc\xb9\x7a\xe8\x6c\x8b\xa4\xc7\xb3\xbf\x9e\x1b\x2d\xb4\x49\xd6\xc6\x11\xaf\x79\x74\x67\x7b\x3f\x07\x80\x7f\x3b\x5b\xa5\x7c\x56\xf3\x88\xe3\x21\x60\x8b\xf9\xe7\xf4\xe1\xe3\xa7\xcf\xc1\xb8\xeb\xb0\xc4\x7d\x33\x66\x29\xe2\x8f\x09\x48\x6d\x44\x3c\x1f\x0e\xe5\xb1\x15\x2e\xba\x65\x3d\xbf\x1c\x4f\xf2\x08\xfd\x35\xb8\xff\x0f\xfb\x27\x00\x00\xff\xff\x06\xdb\x2d\x17\xa8\x01\x00\x00")

func mavenChartValuesYamlBytes() ([]byte, error) {
	return bindataRead(
		_mavenChartValuesYaml,
		"maven/chart/values.yaml",
	)
}

func mavenChartValuesYaml() (*asset, error) {
	bytes, err := mavenChartValuesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "maven/chart/values.yaml", size: 424, mode: os.FileMode(420), modTime: time.Unix(1498144407, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mavenDetect = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\xc9\x41\x0e\x82\x30\x10\x05\xd0\xfd\x9c\xe2\x0b\x86\x1d\x56\xd6\x1a\x6f\xe0\x09\x8c\x0b\x2a\xbf\xe9\x24\x65\x6a\x28\x25\x1c\xdf\xb8\x30\x2e\x5f\x5e\x7b\x70\xb5\x2c\xce\xab\x39\xda\x06\x3f\x96\x28\x2d\xbe\xac\x85\xb8\xfa\xaa\x69\xea\x27\x5d\x6e\x22\x1a\xf0\x40\x1f\x70\x1c\xdc\x3b\xcf\xa7\x7d\x4e\x78\x5e\xb0\x46\x9a\x00\xe0\x2b\x66\x34\xf7\x71\xa3\x35\xe8\x3a\x70\xd7\x15\x67\x61\x2a\x94\xdf\x5a\xfe\xd7\x20\x41\xe5\x13\x00\x00\xff\xff\x86\x2d\xae\x51\x7e\x00\x00\x00")

func mavenDetectBytes() ([]byte, error) {
	return bindataRead(
		_mavenDetect,
		"maven/detect",
	)
}

func mavenDetect() (*asset, error) {
	bytes, err := mavenDetectBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "maven/detect", size: 126, mode: os.FileMode(493), modTime: time.Unix(1498144407, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeDockerignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xc9\x4f\xce\x4e\x2d\x4a\xcb\xcc\x49\xe5\x4a\x29\x4a\x4c\x2b\xd1\x2b\xc9\xcf\xcd\xe1\x4a\xce\x48\x2c\x2a\xd1\xe7\xf2\xf3\x0f\xf1\x74\x76\xe5\x02\x04\x00\x00\xff\xff\x18\xba\x47\x9a\x24\x00\x00\x00")

func nodeDockerignoreBytes() ([]byte, error) {
	return bindataRead(
		_nodeDockerignore,
		"node/.dockerignore",
	)
}

func nodeDockerignore() (*asset, error) {
	bytes, err := nodeDockerignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "node/.dockerignore", size: 36, mode: os.FileMode(420), modTime: time.Unix(1497095036, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeDockerfile = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x72\x0b\xf2\xf7\x55\xc8\xcb\x4f\x49\xb5\x32\xd3\xcd\xcf\x4b\x2a\xcd\xcc\x49\xe1\x72\x8d\x08\xf0\x0f\x76\x55\xb0\x30\xb0\x30\xe0\x0a\x0a\xf5\x53\xc8\x2b\xc8\x55\xc8\xcc\x2b\x2e\x49\xcc\xc9\xe1\x72\xf6\x75\x51\x88\x56\x02\x8a\x28\xe9\x28\x28\x01\x85\x8a\x4a\x94\x62\xb9\x00\x01\x00\x00\xff\xff\xb4\x7e\x78\x65\x45\x00\x00\x00")

func nodeDockerfileBytes() ([]byte, error) {
	return bindataRead(
		_nodeDockerfile,
		"node/Dockerfile",
	)
}

func nodeDockerfile() (*asset, error) {
	bytes, err := nodeDockerfileBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "node/Dockerfile", size: 69, mode: os.FileMode(420), modTime: time.Unix(1497095036, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeNotice = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x52\x5f\x6f\xe2\x38\x10\x7f\xe7\x53\x8c\x78\x6a\xa5\x5c\xef\x7a\xd2\xbd\xdc\x9b\x49\x4c\x63\x5d\x48\x22\xc7\x94\xe3\x31\x24\x86\x78\x37\xc4\xc8\x76\x16\xf5\xdb\xef\x8c\xa1\xdb\x76\x25\x44\xe4\xf1\xcc\xef\xdf\x78\x23\x14\x14\xa6\xd3\x93\xd7\xff\x2e\x16\xa9\xbd\xbc\x39\x73\x1a\x02\x3c\xa4\x8f\xf0\xf7\x5f\xcf\xcf\x7f\xe0\xdf\x3f\x90\x6b\x67\xbf\xcf\x09\x88\xa9\x7b\x5a\x2c\x6a\xed\xce\xc6\x7b\x63\x27\x30\x1e\x06\xed\xf4\xe1\x0d\x4e\xae\x9d\x82\xee\x13\x38\x3a\xad\xc1\x1e\xa1\x1b\x5a\x77\xd2\x09\x04\x0b\xed\xf4\x06\x17\xed\x3c\x0e\xd8\x43\x68\xcd\x64\xa6\x13\xb4\xd0\x21\x1b\x75\x86\x01\x61\xbc\x3d\x86\x6b\xeb\x34\x36\xf7\xd0\x7a\x6f\x3b\xd3\x22\x1e\xf4\xb6\x9b\xcf\x7a\x0a\x6d\x20\xbe\xa3\x19\xb5\x87\x87\x30\x68\x58\x36\xf7\x89\xe5\x63\x24\xe9\x75\x3b\x82\x99\x80\xee\xde\xaf\xe0\x6a\xc2\x60\xe7\x00\x4e\xfb\xe0\x4c\x47\x18\x09\x36\x75\xe3\xdc\x93\x86\xf7\xeb\xd1\x9c\xcd\x9d\x81\xc6\x63\x04\x9e\x40\x67\x8f\x0e\x48\x67\x02\x67\xdb\x9b\x23\x7d\x75\xb4\x75\x99\x0f\xa3\xf1\x43\x02\xbd\x21\xe8\xc3\x1c\xb0\xe8\xa9\x18\xc3\x4c\xc8\xc7\x9f\xd6\x81\xd7\xe3\x48\x08\x06\x75\x47\xaf\x1f\xea\x62\x0f\xb1\x5c\x28\xd0\x70\x8f\x28\xf2\x5e\x07\x7b\xfe\xea\x04\x23\x3a\xce\x6e\x42\x4a\x1d\x67\x7a\x8b\x91\x45\xc6\x6f\xba\x0b\x54\xa1\xf6\xa3\x1d\x47\x7b\x25\x6b\x9d\x9d\x7a\x43\x8e\x3c\xee\x55\xe1\x55\x7b\xb0\x3f\x74\xf4\x72\xdb\xf0\x64\x03\x4a\xbd\x49\xa0\x05\x5c\x3e\xb6\x7a\xbf\xf2\x43\x8b\xda\x0f\xfa\x1e\x18\xf2\x62\xbc\xed\x27\x3b\x8e\xe8\x7d\xc0\xc5\x1b\xcc\xfe\x62\x5d\xe4\xfb\xdd\x26\xbe\x18\x95\x73\x68\xaa\xb5\xda\x31\xc9\x41\x34\x50\xcb\xea\x55\x64\x3c\x83\x25\x6b\xf0\xbc\x4c\x60\x27\x54\x5e\x6d\x15\x60\x87\x64\xa5\xda\x43\xb5\x06\x56\xee\xe1\x3f\x51\x66\x09\xf0\xff\x6b\xc9\x9b\x06\x2a\x09\x62\x53\x17\x82\x63\x4d\x94\x69\xb1\xcd\x44\xf9\x02\x2b\x9c\x2b\x2b\x7c\xc7\x02\x5f\x33\x82\xaa\x0a\x88\xf0\x0e\x25\x78\x43\x60\x1b\x2e\xd3\x1c\x8f\x6c\x25\x0a\xa1\xf6\x09\xac\x85\x2a\x09\x73\x8d\xa0\x0c\x6a\x26\x95\x48\xb7\x05\x93\x50\x6f\x65\x5d\x35\x1c\xe9\x33\x84\x2d\x45\xb9\x96\xc8\xc2\x37\xbc\x54\x4f\xc8\x8a\x35\xe0\xaf\x78\x80\x26\x67\x45\x11\xa9\xd8\x16\xd5\xcb\xa8\x2f\xad\xea\xbd\x14\x2f\xb9\x82\xbc\x2a\x32\x8e\xc5\x15\x47\x65\x6c\x55\xf0\x1b\x15\x9a\x4a\x0b\x26\x36\x09\x64\x6c\xc3\x5e\x78\x9c\xaa\x10\x45\xc6\xb6\xbb\xba\x5d\xce\x63\x09\xf9\x18\xfe\x52\x25\xaa\x92\x6c\xa4\x55\xa9\x24\x1e\x13\x74\x29\xd5\xaf\xd1\x9d\x68\x78\x02\x4c\x8a\x86\x02\x59\xcb\x0a\xe1\x29\x4e\x9c\xa8\x22\x08\xce\x95\xfc\x86\x42\x51\xc3\x97\x8d\x60\x0b\x9d\xb7\x0d\xff\xd0\x92\x71\x56\x20\x56\x43\xc3\x9f\x9b\x9f\x16\x3f\x03\x00\x00\xff\xff\x3e\x88\xe6\xeb\x33\x04\x00\x00")

func nodeNoticeBytes() ([]byte, error) {
	return bindataRead(
		_nodeNotice,
		"node/NOTICE",
	)
}

func nodeNotice() (*asset, error) {
	bytes, err := nodeNoticeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "node/NOTICE", size: 1075, mode: os.FileMode(420), modTime: time.Unix(1497095036, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeChartHelmignore = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x4c\x8f\x41\x4f\xc3\x30\x0c\x85\xef\xf9\x15\x46\xbb\x00\x42\xe9\x8f\xd8\x38\x70\x02\xa9\x68\x57\x94\x36\x5e\x62\x96\x3a\x51\xe2\xae\xc0\x81\xdf\x8e\xd7\x69\x62\x97\x4f\xce\xcb\xf3\xcb\xcb\x06\xde\x9c\x08\x56\x6e\x20\x19\x28\x70\xae\x08\x4b\x44\x86\x61\xa6\xe4\x89\x03\x14\x37\x1e\x5d\xc0\x66\xcd\x06\xde\x23\x35\x68\x73\x29\xb9\x8a\x0e\x11\x53\x82\x90\xf2\x00\x93\x93\x31\xaa\xfb\x09\x2a\x26\x27\x74\x42\xdd\x93\x78\xa3\x3b\xf6\x1a\xc0\x18\xf4\x36\x33\xdc\x97\x8a\x07\xfa\x42\x0f\x0b\xa9\xef\xee\xc1\xc2\x2b\xa7\x6f\xc8\xbc\x6e\x9e\x2b\x41\xc1\x0a\x89\x18\xad\xb1\xbb\xfe\xa3\x17\xed\xa6\x11\xdb\x3c\x4d\x1a\xb0\xdf\xf6\xe0\xa9\x36\x63\x03\x49\xb7\xf2\x52\xdf\xd8\xe1\xa7\x76\x2b\xaf\x42\x0c\xdd\x19\xd7\x63\x3b\x71\xf7\x1f\x34\xe8\xff\xe6\x02\x07\x4a\xd8\xcc\xa3\x6d\x4b\x51\x0e\xee\xa8\x94\x49\xe7\x5f\xb5\xee\x5d\xa5\x3c\x37\x78\xd9\x3d\xeb\x83\xa5\xe6\x4f\x1c\xc5\x58\xf2\xe8\xba\x8b\x4f\x25\xf3\x17\x00\x00\xff\xff\xbc\x5b\x94\x77\x4d\x01\x00\x00")

func nodeChartHelmignoreBytes() ([]byte, error) {
	return bindataRead(
		_nodeChartHelmignore,
		"node/chart/.helmignore",
	)
}

func nodeChartHelmignore() (*asset, error) {
	bytes, err := nodeChartHelmignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "node/chart/.helmignore", size: 333, mode: os.FileMode(420), modTime: time.Unix(1497095036, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeChartChartYaml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xca\x4b\xcc\x4d\xb5\x52\xc8\xcb\x4f\x49\xe5\x02\x04\x00\x00\xff\xff\xe3\x6f\x5e\x9b\x0b\x00\x00\x00")

func nodeChartChartYamlBytes() ([]byte, error) {
	return bindataRead(
		_nodeChartChartYaml,
		"node/chart/Chart.yaml",
	)
}

func nodeChartChartYaml() (*asset, error) {
	bytes, err := nodeChartChartYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "node/chart/Chart.yaml", size: 11, mode: os.FileMode(420), modTime: time.Unix(1497095036, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeChartTemplatesNotesTxt = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x93\x51\x6b\xdb\x3c\x14\x40\xdf\xfb\x2b\x2e\x26\x90\xef\x7b\xb0\xb2\x67\x43\x5f\xb6\x85\x11\x28\x49\xc8\xba\xc2\x18\x63\x5c\xcb\xd7\xb1\x56\x59\x12\xd6\x75\xd2\x60\xfc\xdf\x27\x39\x5e\xea\x66\xa3\x8c\x31\xbf\x45\x8e\x8e\x4e\xee\x51\x6e\xba\x2e\x05\x55\x82\xb4\x86\x51\x19\x0f\xc9\xda\x16\xb4\xb5\x0d\x27\x20\x1e\x50\xb7\xe4\x85\xa7\xe6\xa0\x24\x09\x3e\x39\x82\xbe\xbf\x01\xf8\x40\x0c\x5c\x11\xa0\x73\x5a\x49\x64\x65\x0d\x7c\xda\xdd\x41\x7e\x82\xa6\x35\x46\x99\x7d\x7c\xed\x29\x60\xeb\x1a\x4d\xe1\xb3\xb0\x89\x9e\x5c\xc0\xc2\x7a\xf3\x7e\xf9\x6d\xbb\xd9\xdd\xdf\xce\xfe\x7b\x6c\x73\x92\xac\x61\x1f\x78\x69\x6a\xb0\x26\xef\x50\x12\x74\x1d\x88\x1d\x69\x42\x4f\x62\x7d\x59\xed\x7b\x48\x2d\x7c\xf7\xd6\x38\xe4\xea\x36\xe9\x84\x77\x24\x45\xa4\xfa\x2f\x6f\xbe\x0a\x33\x9a\xf7\x09\x8c\xca\x3e\x92\x98\x6a\xa7\x91\x09\x92\xb2\xd5\x3a\x1e\x12\x7e\x5a\x80\xfd\x7f\xe5\xb4\xda\x5e\x19\x45\x9e\xff\x2b\x2f\x15\xce\x1c\x94\x3c\x23\xb7\x5e\x60\x51\x34\xe4\x3d\x0d\x6b\xe3\x87\x3e\x19\x04\x64\x65\xa1\x62\x76\xd9\x62\x31\x1b\x35\xb2\xd9\x65\x46\x0b\x6d\xf7\xca\x0c\x91\x48\x87\x79\xbe\x28\x75\x67\xb1\x78\x8b\x1a\x8d\xa4\xe6\x9f\xd7\x0a\xcf\x7a\x73\xbf\xcc\x60\xc5\x50\xe3\x09\x18\x1f\x03\x01\x4a\x3a\x42\xad\x4c\xcb\x61\x32\xa5\x6d\x06\xee\xd4\x03\x56\x5b\x60\x0b\x79\xf8\xee\x01\x95\xc6\x5c\x93\x38\xd3\xce\xcf\x67\xdb\x82\x44\x03\x47\x64\x59\x0d\xbb\xcf\x23\x02\x5b\x4e\x7d\xe6\xd3\x0e\xfe\x20\x21\x3d\xbe\x96\x72\xfe\x9c\xf2\xe3\x72\xf7\xb0\x7a\xf7\x9b\x9a\x03\xe5\x4f\x5a\xbe\x72\xce\x8b\xce\xf3\xee\x67\x5e\x3d\x19\x80\x08\xfa\x31\x6f\x2c\xad\x5c\x3f\xff\x25\xf2\xb3\x60\x16\x15\xae\xaa\xd1\x13\x53\x63\x50\xc7\x7b\x1c\xeb\x5d\xca\x0f\x25\x47\xc6\xb5\x7a\x78\x29\x26\xac\x3c\xac\x17\xb6\x0e\x97\x24\x2a\x87\x1a\x28\xc3\x5f\xc1\xc3\xc9\xb6\xcd\xf4\x12\x9c\xe1\xa6\x88\xec\x1f\x01\x00\x00\xff\xff\x95\xfb\xb4\x1f\x08\x04\x00\x00")

func nodeChartTemplatesNotesTxtBytes() ([]byte, error) {
	return bindataRead(
		_nodeChartTemplatesNotesTxt,
		"node/chart/templates/NOTES.txt",
	)
}

func nodeChartTemplatesNotesTxt() (*asset, error) {
	bytes, err := nodeChartTemplatesNotesTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "node/chart/templates/NOTES.txt", size: 1032, mode: os.FileMode(420), modTime: time.Unix(1497095036, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeChartTemplates_helpersTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x90\xc1\x4a\x33\x31\x14\x85\xf7\xf3\x14\x87\xe1\x2f\xfc\x16\x66\xba\x10\x5c\x14\xba\xaa\xae\x84\x0a\x16\x74\x9d\xce\x9c\xd8\x40\x26\x1d\x93\x9b\xd2\x52\xfb\xee\x4e\x32\x6a\x11\x5c\xe8\xee\x12\xbe\x7c\xf7\xdc\x73\x3a\xcd\xa6\xd8\x9b\x6e\x8e\x40\x81\x36\x96\x72\xec\xb9\xe8\x62\x10\xd5\x6c\x39\xc7\x74\x76\x3e\x17\x89\x2a\xee\x0e\xbd\x72\x2d\x64\x4b\x38\xd5\x11\x3b\x9d\xe7\x66\xab\xbc\xd4\xc5\x07\x57\xa1\xa5\x36\x8e\x28\x13\x53\xa2\xba\xbc\xaa\x68\x05\xf5\x32\xe3\xab\x24\xa8\x9f\x94\x8d\x0c\x75\x22\x1f\xf6\xf4\xde\xb4\xc4\x1b\xc4\x47\xd7\xe0\xe6\x3a\x8f\xa6\x5b\x47\xad\xcd\x01\x65\x75\x91\x71\x88\x91\xe6\x31\xd7\xd2\x53\x09\xa1\xbe\x76\xe8\x68\xed\x11\xaf\x51\x59\xa3\x0d\x5b\xa8\xbe\xcf\x89\xeb\xe2\x99\xa3\x3d\xf3\x92\x76\xa4\xf4\x01\x1b\x36\x2a\x06\x22\xec\x86\x58\xf7\x71\x43\xef\x28\x0c\xe3\x9d\x83\xc3\xb6\x01\xca\x13\xd6\x74\x46\x06\xa3\xec\x86\xd3\x4d\xc0\xff\xcd\x31\x77\x70\xbb\x5a\x27\xd6\xb8\x17\x84\x9e\xcd\xd5\x0f\x75\xa4\x50\xdf\x2b\xf9\x97\xed\xf3\xc5\xef\xbb\xf9\xfc\xd9\x7b\xe3\x44\xa3\x9c\x84\x6a\x12\x4a\xd4\x8f\xb4\x54\x81\xe3\xcf\x51\xfb\x97\x1a\xdf\x03\x00\x00\xff\xff\x34\x01\xd0\x17\x04\x02\x00\x00")

func nodeChartTemplates_helpersTplBytes() ([]byte, error) {
	return bindataRead(
		_nodeChartTemplates_helpersTpl,
		"node/chart/templates/_helpers.tpl",
	)
}

func nodeChartTemplates_helpersTpl() (*asset, error) {
	bytes, err := nodeChartTemplates_helpersTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "node/chart/templates/_helpers.tpl", size: 516, mode: os.FileMode(420), modTime: time.Unix(1497095036, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeChartTemplatesDeploymentYaml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x53\xc1\x6a\xeb\x30\x10\xbc\xfb\x2b\x16\x5f\x1f\x71\xc8\x3b\xea\x9a\x07\xef\x56\x7c\x0a\xf4\x54\x36\xce\xd6\x11\x95\x25\x21\xad\x43\x43\x9a\x7f\xef\xca\x76\x62\x99\x14\x4a\x2f\xf5\x49\xcc\x8e\x76\x66\xc7\x2b\xf4\x7a\x47\x21\x6a\x67\x15\xd0\x3b\x93\x4d\xc7\xb8\x3e\x6d\xf6\xc4\xb8\x29\xde\xb4\x3d\x28\xf8\x47\xde\xb8\x73\x47\x96\x8b\x4e\xe0\x03\x32\xaa\x02\xc0\x62\x47\x0a\x2e\x17\x60\xea\xbc\x41\x26\x28\x5f\x7b\x63\x12\x5c\x42\x05\xd7\xab\x70\x0c\xee\xc9\xc4\xc4\x06\x68\x8e\x18\x58\x41\x29\x37\xaa\x6d\x3a\x57\x4f\x42\x15\xde\x6a\x46\x26\x33\xf0\x01\x41\x44\xb1\x91\x9e\x7f\x4a\x28\x5f\x4a\xa1\x95\x45\xf4\xd4\xa4\x5e\xa9\xa6\x1b\x8c\x83\x7a\xb5\x43\xd3\x53\xac\x26\x70\xeb\x7a\xcb\xa3\xf8\xcd\xd7\x28\x9f\x5b\x4f\x5f\x6e\x2d\x7d\xe8\xfd\x77\xd3\x00\xdc\x1c\x0c\xf3\x38\xcb\xa8\xad\x38\xbe\x21\xab\x39\x93\xe5\x84\x77\x11\xdd\x61\x4b\x53\x06\x93\xef\x01\x12\xf7\xad\x8e\x1c\xce\x42\x5e\x3f\x14\x5d\x68\xbf\xc4\xed\xd8\x5d\x3d\x14\x18\xdb\x21\xb0\x85\x6c\x2d\xe3\xd4\x4e\x32\x3a\x2f\x72\x1b\x6f\xf8\x7b\x31\xb7\xeb\x5d\xe0\x2c\xa2\xd5\x3c\x73\xed\xd2\xbf\xcc\xda\x44\x0a\x27\xdd\x50\xa5\x2d\x53\xb0\x68\x12\x21\x6f\x65\xf4\x89\x2c\xc5\x58\x07\xb7\xa7\xb9\x25\xc0\x91\xd9\xff\x27\xce\x21\x11\x46\x3e\x2a\x58\x2f\xb1\x9f\x4a\x06\xc2\x83\xfe\x75\xcd\xe8\xfa\xd0\x90\xa4\x96\x76\xc9\x3d\x63\x67\xb2\x15\x9d\x8a\xb2\xdf\xf2\xb2\xe4\x41\xc1\xe6\x6f\xba\xfd\x19\x00\x00\xff\xff\x52\x7b\x20\xc6\x87\x03\x00\x00")

func nodeChartTemplatesDeploymentYamlBytes() ([]byte, error) {
	return bindataRead(
		_nodeChartTemplatesDeploymentYaml,
		"node/chart/templates/deployment.yaml",
	)
}

func nodeChartTemplatesDeploymentYaml() (*asset, error) {
	bytes, err := nodeChartTemplatesDeploymentYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "node/chart/templates/deployment.yaml", size: 903, mode: os.FileMode(420), modTime: time.Unix(1497095036, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeChartTemplatesIngressYaml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x90\x31\x6b\xc3\x40\x0c\x85\x77\xff\x8a\xc7\xad\xc5\x17\xb2\xde\xda\xa9\x4b\x28\x1d\xb2\x16\xd9\x56\x6b\x93\xf3\xd9\x9c\xe4\x50\x48\xf3\xdf\xab\x73\x9c\x16\x3a\x65\x93\x3e\x9e\x1e\x1f\xa2\x79\x38\x72\x96\x61\x4a\x01\xfc\xa5\x9c\xca\x28\xbb\xf3\xbe\x61\xa5\x7d\x75\x1a\x52\x17\xf0\x92\x3e\x33\x8b\x54\xa3\xb1\x8e\x94\x42\x05\x24\x1a\x39\xe0\x72\x81\xf2\x38\x47\x52\x86\xfb\x58\x62\x2c\xd8\xc1\xe3\x7a\xb5\x4c\xa4\x86\xa3\x94\x34\xd0\xf6\x94\x35\xc0\xd9\x85\x7f\x2e\xb3\x3f\x58\xd4\x72\xf5\x1f\xd9\x4c\xf0\x8d\xcc\xd6\xd9\x5a\xe7\x93\x83\x7b\x77\x16\x73\x95\xcc\xdc\x96\xae\xbc\x44\x5e\x4b\x6b\xf4\x93\xe8\x2a\xe1\xdf\x38\x32\x09\xdf\x4b\x7d\x61\x47\x8a\x0b\x8b\x6f\x8c\x77\xd3\x48\x43\xba\x59\x01\xbd\xea\x7c\xb3\x02\x66\xd2\x5e\xee\x4b\xbd\xae\x01\xbb\x6d\x07\x1a\x6a\x4f\x6c\x3f\xf8\x05\x80\x70\x3e\x0f\x2d\x1f\x1e\x78\xc0\xbf\x93\xd7\x29\x6f\xba\x9b\xda\xc6\x7d\xf9\x7c\x4e\x14\x4b\xa0\x5c\xfe\x04\x00\x00\xff\xff\x54\x0e\x39\x31\x96\x01\x00\x00")

func nodeChartTemplatesIngressYamlBytes() ([]byte, error) {
	return bindataRead(
		_nodeChartTemplatesIngressYaml,
		"node/chart/templates/ingress.yaml",
	)
}

func nodeChartTemplatesIngressYaml() (*asset, error) {
	bytes, err := nodeChartTemplatesIngressYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "node/chart/templates/ingress.yaml", size: 406, mode: os.FileMode(420), modTime: time.Unix(1497095036, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeChartTemplatesServiceYaml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x90\x4f\x4b\x03\x31\x10\xc5\xef\xfb\x29\x86\x5c\xa5\x01\xaf\xb9\xf6\x2e\x0b\x4a\xaf\x32\xa6\xa3\x06\x67\x93\x30\x99\x16\xa5\xf6\xbb\x3b\xd9\x88\x82\x7f\x7a\x1b\xde\xfe\xde\x7b\x9b\x87\x35\xed\x48\x5a\x2a\x39\xc0\xf1\x7a\x7a\x49\x79\x1f\xe0\x96\xe4\x98\x22\x4d\x0b\x29\xee\x51\x31\x4c\x00\x19\x17\x0a\x70\x3a\x81\xd2\x52\x19\x95\xc0\x3d\x1e\x98\xbb\xec\xc0\xc3\xf9\x6c\x0c\xe3\x03\x71\xeb\x34\x40\x7c\x46\xd1\x00\xce\x1c\x7e\xdb\x6f\x7f\x63\xa8\x71\x9b\x6f\xe5\xb3\x19\xde\x41\xc8\x32\xa3\x65\x5e\x39\x70\xf7\xce\x30\x37\xb5\x4a\xb1\x67\xe9\x5b\x1d\xcd\x7e\x87\x7c\xa0\xe6\xdb\xf8\x3d\xdf\x3f\x8c\xe2\x5a\x44\xd7\xde\xcd\x7a\xfe\x49\xd3\xab\x92\x64\xe4\xd9\x80\xe1\xb2\x68\x94\x27\xd2\xf9\x3f\x4b\xca\xbf\x2d\x55\x8a\x96\x58\x38\xc0\xdd\x76\x5e\x95\xaf\x65\x7e\xda\xf3\x78\xb0\x41\x8d\x98\xa2\x16\x19\xd3\x60\xad\x97\x97\xfc\x08\x00\x00\xff\xff\xce\x5a\xb0\xc7\x95\x01\x00\x00")

func nodeChartTemplatesServiceYamlBytes() ([]byte, error) {
	return bindataRead(
		_nodeChartTemplatesServiceYaml,
		"node/chart/templates/service.yaml",
	)
}

func nodeChartTemplatesServiceYaml() (*asset, error) {
	bytes, err := nodeChartTemplatesServiceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "node/chart/templates/service.yaml", size: 405, mode: os.FileMode(420), modTime: time.Unix(1497095036, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeChartValuesYaml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x90\x31\x4f\xc3\x40\x0c\x85\xf7\xfc\x0a\x4b\x9d\xa9\xd2\x4e\x55\x36\xd4\x2e\x95\x28\xea\xc0\xc2\xe8\x24\x4e\xb1\xf0\x9d\x83\xcf\x57\x91\x7f\x8f\x9b\x0d\x26\xa4\x0c\xfe\x9e\xed\x17\xbf\xdb\xc0\x89\x26\xac\xe2\x70\x47\xa9\x54\x60\x52\x83\xac\x23\x6d\x9b\x0d\xbc\x7d\x70\x81\xf8\x10\xde\x9f\x2f\x2f\x4f\xd1\x4a\xe8\x4e\x23\x4c\x2c\xeb\xc0\x89\x06\x41\xa3\xd8\x35\xc6\x5e\x62\xdd\x15\x7a\x82\x19\x4b\x89\x31\xce\x81\x8b\x56\x03\xa7\x34\x0b\x3a\x95\x6d\x63\x34\x0b\x0f\x78\xd4\x9a\xbd\x83\x7d\xc3\x09\x6f\xd4\x35\x00\x46\x37\x2e\x6e\x4b\x07\xa3\x0e\x9f\x64\x5b\xd6\x50\xd5\x6e\x1d\x08\xf7\x86\xb6\x04\x66\x4c\xd4\xad\x07\x06\x38\x46\x4f\x73\x5f\x59\xc6\xc0\xb9\x8a\x5c\x35\xcc\xc3\xe2\x3c\xbd\xaa\x5f\x8d\x0a\x65\x6f\x0a\xd9\x9d\x87\xf5\x27\xbf\xf7\x97\x39\xe0\x28\xb5\x38\xd9\xf9\x1a\x0a\x7d\x47\x95\x31\x6c\x2c\x8e\x3b\xb4\x87\x36\xc4\x88\xf1\x57\x0c\xe3\x88\x35\x50\x79\x78\x0a\x27\xf6\xb5\x02\x18\xe6\xda\xc1\xae\x6d\xd3\x4a\x89\x92\x3e\x02\xed\xf6\x87\x0b\xaf\x11\xbf\xe2\x8d\xff\x33\xfb\x13\x00\x00\xff\xff\x0b\xf7\x95\x54\x98\x01\x00\x00")

func nodeChartValuesYamlBytes() ([]byte, error) {
	return bindataRead(
		_nodeChartValuesYaml,
		"node/chart/values.yaml",
	)
}

func nodeChartValuesYaml() (*asset, error) {
	bytes, err := nodeChartValuesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "node/chart/values.yaml", size: 408, mode: os.FileMode(420), modTime: time.Unix(1497118555, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeDetect = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x3c\xcc\xb1\x0a\xc2\x30\x14\x85\xe1\xfd\x3e\xc5\x29\xed\x6a\x43\x67\x71\x91\x3a\x14\xc4\x41\x70\x12\x91\x34\xde\x98\x68\xb9\x09\x4d\x14\x7d\x7b\x2d\x62\xd7\x73\x7e\xbe\xb2\x50\x8f\x34\xaa\xde\x8b\x62\x79\xa2\xd7\xc9\x11\xad\x0f\xdd\xb6\x3d\xb7\xdd\x7e\x55\x35\x44\x25\x36\x2f\x9f\xc1\x7a\x1c\xde\xf0\x16\x3a\x46\xf8\x04\x33\xfc\x16\x09\x19\xbb\x70\xe1\xfa\x96\x6a\xfa\xde\x47\x14\x58\x58\x54\x33\xa2\xa2\x36\x77\x7d\x9d\x82\x20\x38\x2d\x91\x1d\x0b\x01\x3c\xa9\x0d\x59\x4f\xc4\xc6\x85\x3f\x42\x9f\x00\x00\x00\xff\xff\xb6\x32\x4f\x9a\x93\x00\x00\x00")

func nodeDetectBytes() ([]byte, error) {
	return bindataRead(
		_nodeDetect,
		"node/detect",
	)
}

func nodeDetect() (*asset, error) {
	bytes, err := nodeDetectBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "node/detect", size: 147, mode: os.FileMode(493), modTime: time.Unix(1497095036, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _phpDockerignore = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x72\xc9\x4f\xce\x4e\x2d\x4a\xcb\xcc\x49\xe5\x4a\x29\x4a\x4c\x2b\xd1\x2b\xc9\xcf\xcd\xe1\x4a\xce\x48\x2c\x2a\xd1\xe7\xf2\xf3\x0f\xf1\x74\x76\xe5\x02\x04\x00\x00\xff\xff\x18\xba\x47\x9a\x24\x00\x00\x00")

func phpDockerignoreBytes() ([]byte, error) {
	return bindataRead(
		_phpDockerignore,
		"php/.dockerignore",
	)
}

func phpDockerignore() (*asset, error) {
	bytes, err := phpDockerignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "php/.dockerignore", size: 36, mode: os.FileMode(420), modTime: time.Unix(1497095036, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _phpDockerfile = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8d\xbd\x4e\xc3\x30\x14\x46\x77\x3f\xc5\x37\x75\x73\xed\xb0\x80\x82\x18\x10\x2a\x1b\xa4\x4a\x85\x04\x12\xcb\xc5\x36\x72\x24\xff\xc9\x71\x7a\x5f\x1f\x91\xaa\x19\xba\x1d\xdd\x9f\x73\x5e\xc7\xe1\x0d\x26\xc7\x92\x67\x57\xfb\x0e\xcf\x27\xfc\x2c\x53\xb0\xd2\xa5\xb3\x78\x19\x8e\x5f\xd8\x43\x51\x29\x62\xfc\x78\x87\xb1\x2b\x63\xb7\xdb\x5e\x30\xa5\xb9\x51\x08\x42\xac\xa6\xe2\x4b\x7f\xbf\xef\x24\x15\x32\xde\x89\xc3\xe7\x71\x38\x1d\xf0\xa0\x2f\x2a\x29\x7f\x6b\x8e\x4f\x5b\xe0\x62\x53\x67\xaa\x8a\x99\x95\x6f\x31\xac\x9d\x65\x76\x35\x66\x0b\xb9\xa0\xd3\x5a\x83\x99\xa5\xa5\x46\x8f\xf8\x16\x00\x40\x77\x2e\xfd\xef\xab\xe3\x3a\x35\x77\x1d\x1b\x9f\x39\x41\x8e\xdb\x7d\x7f\x85\x9b\xc6\x5f\x00\x00\x00\xff\xff\x87\xb1\x00\xe6\xf5\x00\x00\x00")

func phpDockerfileBytes() ([]byte, error) {
	return bindataRead(
		_phpDockerfile,
		"php/Dockerfile",
	)
}

func phpDockerfile() (*asset, error) {
	bytes, err := phpDockerfileBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "php/Dockerfile", size: 245, mode: os.FileMode(420), modTime: time.Unix(1498144407, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _phpNotice = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x52\x5f\x6f\xe2\x38\x10\x7f\xe7\x53\x8c\x78\x6a\xa5\x5c\xef\x7a\xd2\xbd\xdc\x9b\x49\x4c\x63\x5d\x48\x22\xc7\x94\xe3\x31\x24\x86\x78\x37\xc4\xc8\x76\x16\xf5\xdb\xef\x8c\xa1\xdb\x76\x25\x44\xe4\xf1\xcc\xef\xdf\x78\x23\x14\x14\xa6\xd3\x93\xd7\xff\x2e\x16\xa9\xbd\xbc\x39\x73\x1a\x02\x3c\xa4\x8f\xf0\xf7\x5f\xcf\xcf\x7f\xe0\xdf\x3f\x90\x6b\x67\xbf\xcf\x09\x88\xa9\x7b\x5a\x2c\x6a\xed\xce\xc6\x7b\x63\x27\x30\x1e\x06\xed\xf4\xe1\x0d\x4e\xae\x9d\x82\xee\x13\x38\x3a\xad\xc1\x1e\xa1\x1b\x5a\x77\xd2\x09\x04\x0b\xed\xf4\x06\x17\xed\x3c\x0e\xd8\x43\x68\xcd\x64\xa6\x13\xb4\xd0\x21\x1b\x75\x86\x01\x61\xbc\x3d\x86\x6b\xeb\x34\x36\xf7\xd0\x7a\x6f\x3b\xd3\x22\x1e\xf4\xb6\x9b\xcf\x7a\x0a\x6d\x20\xbe\xa3\x19\xb5\x87\x87\x30\x68\x58\x36\xf7\x89\xe5\x63\x24\xe9\x75\x3b\x82\x99\x80\xee\xde\xaf\xe0\x6a\xc2\x60\xe7\x00\x4e\xfb\xe0\x4c\x47\x18\x09\x36\x75\xe3\xdc\x93\x86\xf7\xeb\xd1\x9c\xcd\x9d\x81\xc6\x63\x04\x9e\x40\x67\x8f\x0e\x48\x67\x02\x67\xdb\x9b\x23\x7d\x75\xb4\x75\x99\x0f\xa3\xf1\x43\x02\xbd\x21\xe8\xc3\x1c\xb0\xe8\xa9\x18\xc3\x4c\xc8\xc7\x9f\xd6\x81\xd7\xe3\x48\x08\x06\x75\x47\xaf\x1f\xea\x62\x0f\xb1\x5c\x28\xd0\x70\x8f\x28\xf2\x5e\x07\x7b\xfe\xea\x04\x23\x3a\xce\x6e\x42\x4a\x1d\x67\x7a\x8b\x91\x45\xc6\x6f\xba\x0b\x54\xa1\xf6\xa3\x1d\x47\x7b\x25\x6b\x9d\x9d\x7a\x43\x8e\x3c\xee\x55\xe1\x55\x7b\xb0\x3f\x74\xf4\x72\xdb\xf0\x64\x03\x4a\xbd\x49\xa0\x05\x5c\x3e\xb6\x7a\xbf\xf2\x43\x8b\xda\x0f\xfa\x1e\x18\xf2\x62\xbc\xed\x27\x3b\x8e\xe8\x7d\xc0\xc5\x1b\xcc\xfe\x62\x5d\xe4\xfb\xdd\x26\xbe\x18\x95\x73\x68\xaa\xb5\xda\x31\xc9\x41\x34\x50\xcb\xea\x55\x64\x3c\x83\x25\x6b\xf0\xbc\x4c\x60\x27\x54\x5e\x6d\x15\x60\x87\x64\xa5\xda\x43\xb5\x06\x56\xee\xe1\x3f\x51\x66\x09\xf0\xff\x6b\xc9\x9b\x06\x2a\x09\x62\x53\x17\x82\x63\x4d\x94\x69\xb1\xcd\x44\xf9\x02\x2b\x9c\x2b\x2b\x7c\xc7\x02\x5f\x33\x82\xaa\x0a\x88\xf0\x0e\x25\x78\x43\x60\x1b\x2e\xd3\x1c\x8f\x6c\x25\x0a\xa1\xf6\x09\xac\x85\x2a\x09\x73\x8d\xa0\x0c\x6a\x26\x95\x48\xb7\x05\x93\x50\x6f\x65\x5d\x35\x1c\xe9\x33\x84\x2d\x45\xb9\x96\xc8\xc2\x37\xbc\x54\x4f\xc8\x8a\x35\xe0\xaf\x78\x80\x26\x67\x45\x11\xa9\xd8\x16\xd5\xcb\xa8\x2f\xad\xea\xbd\x14\x2f\xb9\x82\xbc\x2a\x32\x8e\xc5\x15\x47\x65\x6c\x55\xf0\x1b\x15\x9a\x4a\x0b\x26\x36\x09\x64\x6c\xc3\x5e\x78\x9c\xaa\x10\x45\xc6\xb6\xbb\xba\x5d\xce\x63\x09\xf9\x18\xfe\x52\x25\xaa\x92\x6c\xa4\x55\xa9\x24\x1e\x13\x74\x29\xd5\xaf\xd1\x9d\x68\x78\x02\x4c\x8a\x86\x02\x59\xcb\x0a\xe1\x29\x4e\x9c\xa8\x22\x08\xce\x95\xfc\x86\x42\x51\xc3\x97\x8d\x60\x0b\x9d\xb7\x0d\xff\xd0\x92\x71\x56\x20\x56\x43\xc3\x9f\x9b\x9f\x16\x3f\x03\x00\x00\xff\xff\x3e\x88\xe6\xeb\x33\x04\x00\x00")

func phpNoticeBytes() ([]byte, error) {
	return bindataRead(
		_phpNotice,
		"php/NOTICE",
	)
}

func phpNotice() (*asset, error) {
	bytes, err := phpNoticeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "php/NOTICE", size: 1075, mode: os.FileMode(420), modTime: time.Unix(1497095036, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _phpChartHelmignore = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x4c\x8f\x41\x4f\xc3\x30\x0c\x85\xef\xf9\x15\x46\xbb\x00\x42\xe9\x8f\xd8\x38\x70\x02\xa9\x68\x57\x94\x36\x5e\x62\x96\x3a\x51\xe2\xae\xc0\x81\xdf\x8e\xd7\x69\x62\x97\x4f\xce\xcb\xf3\xcb\xcb\x06\xde\x9c\x08\x56\x6e\x20\x19\x28\x70\xae\x08\x4b\x44\x86\x61\xa6\xe4\x89\x03\x14\x37\x1e\x5d\xc0\x66\xcd\x06\xde\x23\x35\x68\x73\x29\xb9\x8a\x0e\x11\x53\x82\x90\xf2\x00\x93\x93\x31\xaa\xfb\x09\x2a\x26\x27\x74\x42\xdd\x93\x78\xa3\x3b\xf6\x1a\xc0\x18\xf4\x36\x33\xdc\x97\x8a\x07\xfa\x42\x0f\x0b\xa9\xef\xee\xc1\xc2\x2b\xa7\x6f\xc8\xbc\x6e\x9e\x2b\x41\xc1\x0a\x89\x18\xad\xb1\xbb\xfe\xa3\x17\xed\xa6\x11\xdb\x3c\x4d\x1a\xb0\xdf\xf6\xe0\xa9\x36\x63\x03\x49\xb7\xf2\x52\xdf\xd8\xe1\xa7\x76\x2b\xaf\x42\x0c\xdd\x19\xd7\x63\x3b\x71\xf7\x1f\x34\xe8\xff\xe6\x02\x07\x4a\xd8\xcc\xa3\x6d\x4b\x51\x0e\xee\xa8\x94\x49\xe7\x5f\xb5\xee\x5d\xa5\x3c\x37\x78\xd9\x3d\xeb\x83\xa5\xe6\x4f\x1c\xc5\x58\xf2\xe8\xba\x8b\x4f\x25\xf3\x17\x00\x00\xff\xff\xbc\x5b\x94\x77\x4d\x01\x00\x00")

func phpChartHelmignoreBytes() ([]byte, error) {
	return bindataRead(
		_phpChartHelmignore,
		"php/chart/.helmignore",
	)
}

func phpChartHelmignore() (*asset, error) {
	bytes, err := phpChartHelmignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "php/chart/.helmignore", size: 333, mode: os.FileMode(420), modTime: time.Unix(1497095036, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _phpChartChartYaml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xca\x4b\xcc\x4d\xb5\x52\x28\xc8\x28\xe0\x02\x04\x00\x00\xff\xff\x59\xbe\xed\x73\x0a\x00\x00\x00")

func phpChartChartYamlBytes() ([]byte, error) {
	return bindataRead(
		_phpChartChartYaml,
		"php/chart/Chart.yaml",
	)
}

func phpChartChartYaml() (*asset, error) {
	bytes, err := phpChartChartYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "php/chart/Chart.yaml", size: 10, mode: os.FileMode(420), modTime: time.Unix(1497095036, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _phpChartTemplatesNotesTxt = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x93\x51\x6b\xdb\x3c\x14\x40\xdf\xfb\x2b\x2e\x26\x90\xef\x7b\xb0\xb2\x67\x43\x5f\xb6\x85\x11\x28\x49\xc8\xba\xc2\x18\x63\x5c\xcb\xd7\xb1\x56\x59\x12\xd6\x75\xd2\x60\xfc\xdf\x27\x39\x5e\xea\x66\xa3\x8c\x31\xbf\x45\x8e\x8e\x4e\xee\x51\x6e\xba\x2e\x05\x55\x82\xb4\x86\x51\x19\x0f\xc9\xda\x16\xb4\xb5\x0d\x27\x20\x1e\x50\xb7\xe4\x85\xa7\xe6\xa0\x24\x09\x3e\x39\x82\xbe\xbf\x01\xf8\x40\x0c\x5c\x11\xa0\x73\x5a\x49\x64\x65\x0d\x7c\xda\xdd\x41\x7e\x82\xa6\x35\x46\x99\x7d\x7c\xed\x29\x60\xeb\x1a\x4d\xe1\xb3\xb0\x89\x9e\x5c\xc0\xc2\x7a\xf3\x7e\xf9\x6d\xbb\xd9\xdd\xdf\xce\xfe\x7b\x6c\x73\x92\xac\x61\x1f\x78\x69\x6a\xb0\x26\xef\x50\x12\x74\x1d\x88\x1d\x69\x42\x4f\x62\x7d\x59\xed\x7b\x48\x2d\x7c\xf7\xd6\x38\xe4\xea\x36\xe9\x84\x77\x24\x45\xa4\xfa\x2f\x6f\xbe\x0a\x33\x9a\xf7\x09\x8c\xca\x3e\x92\x98\x6a\xa7\x91\x09\x92\xb2\xd5\x3a\x1e\x12\x7e\x5a\x80\xfd\x7f\xe5\xb4\xda\x5e\x19\x45\x9e\xff\x2b\x2f\x15\xce\x1c\x94\x3c\x23\xb7\x5e\x60\x51\x34\xe4\x3d\x0d\x6b\xe3\x87\x3e\x19\x04\x64\x65\xa1\x62\x76\xd9\x62\x31\x1b\x35\xb2\xd9\x65\x46\x0b\x6d\xf7\xca\x0c\x91\x48\x87\x79\xbe\x28\x75\x67\xb1\x78\x8b\x1a\x8d\xa4\xe6\x9f\xd7\x0a\xcf\x7a\x73\xbf\xcc\x60\xc5\x50\xe3\x09\x18\x1f\x03\x01\x4a\x3a\x42\xad\x4c\xcb\x61\x32\xa5\x6d\x06\xee\xd4\x03\x56\x5b\x60\x0b\x79\xf8\xee\x01\x95\xc6\x5c\x93\x38\xd3\xce\xcf\x67\xdb\x82\x44\x03\x47\x64\x59\x0d\xbb\xcf\x23\x02\x5b\x4e\x7d\xe6\xd3\x0e\xfe\x20\x21\x3d\xbe\x96\x72\xfe\x9c\xf2\xe3\x72\xf7\xb0\x7a\xf7\x9b\x9a\x03\xe5\x4f\x5a\xbe\x72\xce\x8b\xce\xf3\xee\x67\x5e\x3d\x19\x80\x08\xfa\x31\x6f\x2c\xad\x5c\x3f\xff\x25\xf2\xb3\x60\x16\x15\xae\xaa\xd1\x13\x53\x63\x50\xc7\x7b\x1c\xeb\x5d\xca\x0f\x25\x47\xc6\xb5\x7a\x78\x29\x26\xac\x3c\xac\x17\xb6\x0e\x97\x24\x2a\x87\x1a\x28\xc3\x5f\xc1\xc3\xc9\xb6\xcd\xf4\x12\x9c\xe1\xa6\x88\xec\x1f\x01\x00\x00\xff\xff\x95\xfb\xb4\x1f\x08\x04\x00\x00")

func phpChartTemplatesNotesTxtBytes() ([]byte, error) {
	return bindataRead(
		_phpChartTemplatesNotesTxt,
		"php/chart/templates/NOTES.txt",
	)
}

func phpChartTemplatesNotesTxt() (*asset, error) {
	bytes, err := phpChartTemplatesNotesTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "php/chart/templates/NOTES.txt", size: 1032, mode: os.FileMode(420), modTime: time.Unix(1497095036, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _phpChartTemplates_helpersTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x90\xc1\x4a\x33\x31\x14\x85\xf7\xf3\x14\x87\xe1\x2f\xfc\x16\x66\xba\x10\x5c\x14\xba\xaa\xae\x84\x0a\x16\x74\x9d\xce\x9c\xd8\x40\x26\x1d\x93\x9b\xd2\x52\xfb\xee\x4e\x32\x6a\x11\x5c\xe8\xee\x12\xbe\x7c\xf7\xdc\x73\x3a\xcd\xa6\xd8\x9b\x6e\x8e\x40\x81\x36\x96\x72\xec\xb9\xe8\x62\x10\xd5\x6c\x39\xc7\x74\x76\x3e\x17\x89\x2a\xee\x0e\xbd\x72\x2d\x64\x4b\x38\xd5\x11\x3b\x9d\xe7\x66\xab\xbc\xd4\xc5\x07\x57\xa1\xa5\x36\x8e\x28\x13\x53\xa2\xba\xbc\xaa\x68\x05\xf5\x32\xe3\xab\x24\xa8\x9f\x94\x8d\x0c\x75\x22\x1f\xf6\xf4\xde\xb4\xc4\x1b\xc4\x47\xd7\xe0\xe6\x3a\x8f\xa6\x5b\x47\xad\xcd\x01\x65\x75\x91\x71\x88\x91\xe6\x31\xd7\xd2\x53\x09\xa1\xbe\x76\xe8\x68\xed\x11\xaf\x51\x59\xa3\x0d\x5b\xa8\xbe\xcf\x89\xeb\xe2\x99\xa3\x3d\xf3\x92\x76\xa4\xf4\x01\x1b\x36\x2a\x06\x22\xec\x86\x58\xf7\x71\x43\xef\x28\x0c\xe3\x9d\x83\xc3\xb6\x01\xca\x13\xd6\x74\x46\x06\xa3\xec\x86\xd3\x4d\xc0\xff\xcd\x31\x77\x70\xbb\x5a\x27\xd6\xb8\x17\x84\x9e\xcd\xd5\x0f\x75\xa4\x50\xdf\x2b\xf9\x97\xed\xf3\xc5\xef\xbb\xf9\xfc\xd9\x7b\xe3\x44\xa3\x9c\x84\x6a\x12\x4a\xd4\x8f\xb4\x54\x81\xe3\xcf\x51\xfb\x97\x1a\xdf\x03\x00\x00\xff\xff\x34\x01\xd0\x17\x04\x02\x00\x00")

func phpChartTemplates_helpersTplBytes() ([]byte, error) {
	return bindataRead(
		_phpChartTemplates_helpersTpl,
		"php/chart/templates/_helpers.tpl",
	)
}

func phpChartTemplates_helpersTpl() (*asset, error) {
	bytes, err := phpChartTemplates_helpersTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "php/chart/templates/_helpers.tpl", size: 516, mode: os.FileMode(420), modTime: time.Unix(1497095036, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _phpChartTemplatesDeploymentYaml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x53\xc1\x6a\xeb\x30\x10\xbc\xfb\x2b\x16\x5f\x1f\x71\xc8\x3b\xea\x9a\x07\xef\x56\x7c\x0a\xf4\x54\x36\xce\xd6\x11\x95\x25\x21\xad\x43\x43\x9a\x7f\xef\xca\x76\x62\x99\x14\x4a\x2f\xf5\x49\xcc\x8e\x76\x66\xc7\x2b\xf4\x7a\x47\x21\x6a\x67\x15\xd0\x3b\x93\x4d\xc7\xb8\x3e\x6d\xf6\xc4\xb8\x29\xde\xb4\x3d\x28\xf8\x47\xde\xb8\x73\x47\x96\x8b\x4e\xe0\x03\x32\xaa\x02\xc0\x62\x47\x0a\x2e\x17\x60\xea\xbc\x41\x26\x28\x5f\x7b\x63\x12\x5c\x42\x05\xd7\xab\x70\x0c\xee\xc9\xc4\xc4\x06\x68\x8e\x18\x58\x41\x29\x37\xaa\x6d\x3a\x57\x4f\x42\x15\xde\x6a\x46\x26\x33\xf0\x01\x41\x44\xb1\x91\x9e\x7f\x4a\x28\x5f\x4a\xa1\x95\x45\xf4\xd4\xa4\x5e\xa9\xa6\x1b\x8c\x83\x7a\xb5\x43\xd3\x53\xac\x26\x70\xeb\x7a\xcb\xa3\xf8\xcd\xd7\x28\x9f\x5b\x4f\x5f\x6e\x2d\x7d\xe8\xfd\x77\xd3\x00\xdc\x1c\x0c\xf3\x38\xcb\xa8\xad\x38\xbe\x21\xab\x39\x93\xe5\x84\x77\x11\xdd\x61\x4b\x53\x06\x93\xef\x01\x12\xf7\xad\x8e\x1c\xce\x42\x5e\x3f\x14\x5d\x68\xbf\xc4\xed\xd8\x5d\x3d\x14\x18\xdb\x21\xb0\x85\x6c\x2d\xe3\xd4\x4e\x32\x3a\x2f\x72\x1b\x6f\xf8\x7b\x31\xb7\xeb\x5d\xe0\x2c\xa2\xd5\x3c\x73\xed\xd2\xbf\xcc\xda\x44\x0a\x27\xdd\x50\xa5\x2d\x53\xb0\x68\x12\x21\x6f\x65\xf4\x89\x2c\xc5\x58\x07\xb7\xa7\xb9\x25\xc0\x91\xd9\xff\x27\xce\x21\x11\x46\x3e\x2a\x58\x2f\xb1\x9f\x4a\x06\xc2\x83\xfe\x75\xcd\xe8\xfa\xd0\x90\xa4\x96\x76\xc9\x3d\x63\x67\xb2\x15\x9d\x8a\xb2\xdf\xf2\xb2\xe4\x41\xc1\xe6\x6f\xba\xfd\x19\x00\x00\xff\xff\x52\x7b\x20\xc6\x87\x03\x00\x00")

func phpChartTemplatesDeploymentYamlBytes() ([]byte, error) {
	return bindataRead(
		_phpChartTemplatesDeploymentYaml,
		"php/chart/templates/deployment.yaml",
	)
}

func phpChartTemplatesDeploymentYaml() (*asset, error) {
	bytes, err := phpChartTemplatesDeploymentYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "php/chart/templates/deployment.yaml", size: 903, mode: os.FileMode(420), modTime: time.Unix(1497095036, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _phpChartTemplatesIngressYaml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x90\x31\x6b\xc3\x40\x0c\x85\x77\xff\x8a\xc7\xad\xc5\x17\xb2\xde\xda\xa9\x4b\x28\x1d\xb2\x16\xd9\x56\x6b\x93\xf3\xd9\x9c\xe4\x50\x48\xf3\xdf\xab\x73\x9c\x16\x3a\x65\x93\x3e\x9e\x1e\x1f\xa2\x79\x38\x72\x96\x61\x4a\x01\xfc\xa5\x9c\xca\x28\xbb\xf3\xbe\x61\xa5\x7d\x75\x1a\x52\x17\xf0\x92\x3e\x33\x8b\x54\xa3\xb1\x8e\x94\x42\x05\x24\x1a\x39\xe0\x72\x81\xf2\x38\x47\x52\x86\xfb\x58\x62\x2c\xd8\xc1\xe3\x7a\xb5\x4c\xa4\x86\xa3\x94\x34\xd0\xf6\x94\x35\xc0\xd9\x85\x7f\x2e\xb3\x3f\x58\xd4\x72\xf5\x1f\xd9\x4c\xf0\x8d\xcc\xd6\xd9\x5a\xe7\x93\x83\x7b\x77\x16\x73\x95\xcc\xdc\x96\xae\xbc\x44\x5e\x4b\x6b\xf4\x93\xe8\x2a\xe1\xdf\x38\x32\x09\xdf\x4b\x7d\x61\x47\x8a\x0b\x8b\x6f\x8c\x77\xd3\x48\x43\xba\x59\x01\xbd\xea\x7c\xb3\x02\x66\xd2\x5e\xee\x4b\xbd\xae\x01\xbb\x6d\x07\x1a\x6a\x4f\x6c\x3f\xf8\x05\x80\x70\x3e\x0f\x2d\x1f\x1e\x78\xc0\xbf\x93\xd7\x29\x6f\xba\x9b\xda\xc6\x7d\xf9\x7c\x4e\x14\x4b\xa0\x5c\xfe\x04\x00\x00\xff\xff\x54\x0e\x39\x31\x96\x01\x00\x00")

func phpChartTemplatesIngressYamlBytes() ([]byte, error) {
	return bindataRead(
		_phpChartTemplatesIngressYaml,
		"php/chart/templates/ingress.yaml",
	)
}

func phpChartTemplatesIngressYaml() (*asset, error) {
	bytes, err := phpChartTemplatesIngressYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "php/chart/templates/ingress.yaml", size: 406, mode: os.FileMode(420), modTime: time.Unix(1497095036, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _phpChartTemplatesServiceYaml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x90\x4f\x4b\x03\x31\x10\xc5\xef\xfb\x29\x86\x5c\xa5\x01\xaf\xb9\xf6\x2e\x0b\x4a\xaf\x32\xa6\xa3\x06\x67\x93\x30\x99\x16\xa5\xf6\xbb\x3b\xd9\x88\x82\x7f\x7a\x1b\xde\xfe\xde\x7b\x9b\x87\x35\xed\x48\x5a\x2a\x39\xc0\xf1\x7a\x7a\x49\x79\x1f\xe0\x96\xe4\x98\x22\x4d\x0b\x29\xee\x51\x31\x4c\x00\x19\x17\x0a\x70\x3a\x81\xd2\x52\x19\x95\xc0\x3d\x1e\x98\xbb\xec\xc0\xc3\xf9\x6c\x0c\xe3\x03\x71\xeb\x34\x40\x7c\x46\xd1\x00\xce\x1c\x7e\xdb\x6f\x7f\x63\xa8\x71\x9b\x6f\xe5\xb3\x19\xde\x41\xc8\x32\xa3\x65\x5e\x39\x70\xf7\xce\x30\x37\xb5\x4a\xb1\x67\xe9\x5b\x1d\xcd\x7e\x87\x7c\xa0\xe6\xdb\xf8\x3d\xdf\x3f\x8c\xe2\x5a\x44\xd7\xde\xcd\x7a\xfe\x49\xd3\xab\x92\x64\xe4\xd9\x80\xe1\xb2\x68\x94\x27\xd2\xf9\x3f\x4b\xca\xbf\x2d\x55\x8a\x96\x58\x38\xc0\xdd\x76\x5e\x95\xaf\x65\x7e\xda\xf3\x78\xb0\x41\x8d\x98\xa2\x16\x19\xd3\x60\xad\x97\x97\xfc\x08\x00\x00\xff\xff\xce\x5a\xb0\xc7\x95\x01\x00\x00")

func phpChartTemplatesServiceYamlBytes() ([]byte, error) {
	return bindataRead(
		_phpChartTemplatesServiceYaml,
		"php/chart/templates/service.yaml",
	)
}

func phpChartTemplatesServiceYaml() (*asset, error) {
	bytes, err := phpChartTemplatesServiceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "php/chart/templates/service.yaml", size: 405, mode: os.FileMode(420), modTime: time.Unix(1497095036, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _phpChartValuesYaml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x90\x31\x6f\x02\x31\x0c\x85\xf7\xfb\x15\x96\x98\x39\x01\x4b\xd1\x6d\x15\x0c\x45\x2a\xd5\x0d\x5d\x3a\x9a\xe0\x03\xab\xce\x25\x75\x1c\xd4\xfb\xf7\xf5\xdd\xc6\x56\x29\xc3\xf3\xb3\xfd\x25\x2f\x2b\x38\xd2\x80\x55\x0c\x1e\x28\x95\x0a\x0c\x49\xa1\x7f\xeb\xdb\x66\x05\x9f\x77\x2e\xe0\x07\xe1\xeb\xf5\xfc\xbe\xf6\x4e\x44\x33\xba\xc2\xc0\x42\xf3\xc0\x91\x82\xa0\x92\xaf\x2a\xe3\x45\x7c\xdb\x12\x5c\x08\x32\x96\xe2\x63\x3c\x7a\x39\xa5\xaa\x60\x14\xb3\xa0\x51\x69\x1b\xa5\x2c\x1c\xf0\x90\xea\x68\x1d\xec\x1a\x8e\x78\xa3\xae\x01\x50\xba\x71\x31\x9d\x3a\xb8\xa6\xf0\x4d\xda\x72\x72\x37\xe9\xad\x03\xe1\x8b\xa2\x4e\x5e\x8e\x18\xa9\x83\x7c\xcf\xae\x0d\xbd\xf5\xd2\x6e\xd7\x98\x31\xdc\xc9\x9d\x5c\x45\xfa\xe4\x78\x87\x9c\x86\x8f\x64\xbd\x52\xa1\xd1\x9a\x42\xfa\xe0\xb0\x5c\xf3\x44\x98\xb2\xeb\x83\xd4\x62\xa4\xa7\xde\x1d\xfa\x75\x35\xa2\x53\xd4\x5f\xb7\xdf\xb8\xe5\x29\x9e\x2d\x67\x7a\xa6\x40\x65\xc6\x09\x47\xb6\x45\x01\x84\x5c\x3b\xd8\x6e\x36\x71\xa9\x22\xc5\x34\xa7\xd9\xee\xf6\x67\x5e\xf2\xfd\xf8\xff\xfe\x67\xf6\x2f\x00\x00\xff\xff\xe0\xf6\x98\xbd\x94\x01\x00\x00")

func phpChartValuesYamlBytes() ([]byte, error) {
	return bindataRead(
		_phpChartValuesYaml,
		"php/chart/values.yaml",
	)
}

func phpChartValuesYaml() (*asset, error) {
	bytes, err := phpChartValuesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "php/chart/values.yaml", size: 404, mode: os.FileMode(420), modTime: time.Unix(1497118555, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _phpDetect = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x34\xc9\xb1\x0e\x82\x30\x10\x06\xe0\xfd\x9e\xe2\xf7\x34\x6c\x52\x99\x7d\x01\x47\x76\xc2\x20\x78\x4d\xcf\xe8\xb5\xe1\xd0\x30\xf0\xf0\xa6\x83\xe3\x97\xef\x78\x08\x1f\x5f\xc2\xa4\x16\xc4\xbe\x98\xee\x9e\x88\x34\x62\x18\x70\x8e\xe0\x53\x17\xe6\xfc\x2e\xd9\x65\x69\x9f\x9e\x8d\xb1\xef\xff\x50\x7b\xc8\xd6\x96\x54\x18\xe3\x78\xc5\x9a\xc4\x08\x90\x39\x65\x70\x7f\xeb\x19\x4d\x03\xd9\x74\xc5\x85\xe4\xe5\x52\xaf\xaa\xa3\xa8\x44\xbf\x00\x00\x00\xff\xff\xbc\x83\x55\xb5\x78\x00\x00\x00")

func phpDetectBytes() ([]byte, error) {
	return bindataRead(
		_phpDetect,
		"php/detect",
	)
}

func phpDetect() (*asset, error) {
	bytes, err := phpDetectBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "php/detect", size: 120, mode: os.FileMode(493), modTime: time.Unix(1497095036, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _pythonDockerignore = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x72\xc9\x4f\xce\x4e\x2d\x4a\xcb\xcc\x49\xe5\x4a\x29\x4a\x4c\x2b\xd1\x2b\xc9\xcf\xcd\xe1\x4a\xce\x48\x2c\x2a\xd1\xe7\xf2\xf3\x0f\xf1\x74\x76\xe5\x02\x04\x00\x00\xff\xff\x18\xba\x47\x9a\x24\x00\x00\x00")

func pythonDockerignoreBytes() ([]byte, error) {
	return bindataRead(
		_pythonDockerignore,
		"python/.dockerignore",
	)
}

func pythonDockerignore() (*asset, error) {
	bytes, err := pythonDockerignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "python/.dockerignore", size: 36, mode: os.FileMode(420), modTime: time.Unix(1497095036, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _pythonDockerfile = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x72\x0b\xf2\xf7\x55\x28\xa8\x2c\xc9\xc8\xcf\xb3\xca\xcf\x4b\x2a\xcd\xcc\x49\xe1\x72\x8d\x08\xf0\x0f\x76\x55\xb0\x30\xb0\x30\xe0\x72\xf5\x0b\x09\x8a\x0c\xf0\xf7\xf4\x0b\x51\x88\x56\x82\xa8\x53\x8a\xe5\x72\xf6\x75\x01\x72\x13\x0b\x0a\xf4\x0a\x2a\x81\x5c\x40\x00\x00\x00\xff\xff\x9d\x8c\x34\xeb\x45\x00\x00\x00")

func pythonDockerfileBytes() ([]byte, error) {
	return bindataRead(
		_pythonDockerfile,
		"python/Dockerfile",
	)
}

func pythonDockerfile() (*asset, error) {
	bytes, err := pythonDockerfileBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "python/Dockerfile", size: 69, mode: os.FileMode(420), modTime: time.Unix(1497095036, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _pythonNotice = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x52\x5f\x6f\xe2\x38\x10\x7f\xe7\x53\x8c\x78\x6a\xa5\x5c\xef\x7a\xd2\xbd\xdc\x9b\x49\x4c\x63\x5d\x48\x22\xc7\x94\xe3\x31\x24\x86\x78\x37\xc4\xc8\x76\x16\xf5\xdb\xef\x8c\xa1\xdb\x76\x25\x44\xe4\xf1\xcc\xef\xdf\x78\x23\x14\x14\xa6\xd3\x93\xd7\xff\x2e\x16\xa9\xbd\xbc\x39\x73\x1a\x02\x3c\xa4\x8f\xf0\xf7\x5f\xcf\xcf\x7f\xe0\xdf\x3f\x90\x6b\x67\xbf\xcf\x09\x88\xa9\x7b\x5a\x2c\x6a\xed\xce\xc6\x7b\x63\x27\x30\x1e\x06\xed\xf4\xe1\x0d\x4e\xae\x9d\x82\xee\x13\x38\x3a\xad\xc1\x1e\xa1\x1b\x5a\x77\xd2\x09\x04\x0b\xed\xf4\x06\x17\xed\x3c\x0e\xd8\x43\x68\xcd\x64\xa6\x13\xb4\xd0\x21\x1b\x75\x86\x01\x61\xbc\x3d\x86\x6b\xeb\x34\x36\xf7\xd0\x7a\x6f\x3b\xd3\x22\x1e\xf4\xb6\x9b\xcf\x7a\x0a\x6d\x20\xbe\xa3\x19\xb5\x87\x87\x30\x68\x58\x36\xf7\x89\xe5\x63\x24\xe9\x75\x3b\x82\x99\x80\xee\xde\xaf\xe0\x6a\xc2\x60\xe7\x00\x4e\xfb\xe0\x4c\x47\x18\x09\x36\x75\xe3\xdc\x93\x86\xf7\xeb\xd1\x9c\xcd\x9d\x81\xc6\x63\x04\x9e\x40\x67\x8f\x0e\x48\x67\x02\x67\xdb\x9b\x23\x7d\x75\xb4\x75\x99\x0f\xa3\xf1\x43\x02\xbd\x21\xe8\xc3\x1c\xb0\xe8\xa9\x18\xc3\x4c\xc8\xc7\x9f\xd6\x81\xd7\xe3\x48\x08\x06\x75\x47\xaf\x1f\xea\x62\x0f\xb1\x5c\x28\xd0\x70\x8f\x28\xf2\x5e\x07\x7b\xfe\xea\x04\x23\x3a\xce\x6e\x42\x4a\x1d\x67\x7a\x8b\x91\x45\xc6\x6f\xba\x0b\x54\xa1\xf6\xa3\x1d\x47\x7b\x25\x6b\x9d\x9d\x7a\x43\x8e\x3c\xee\x55\xe1\x55\x7b\xb0\x3f\x74\xf4\x72\xdb\xf0\x64\x03\x4a\xbd\x49\xa0\x05\x5c\x3e\xb6\x7a\xbf\xf2\x43\x8b\xda\x0f\xfa\x1e\x18\xf2\x62\xbc\xed\x27\x3b\x8e\xe8\x7d\xc0\xc5\x1b\xcc\xfe\x62\x5d\xe4\xfb\xdd\x26\xbe\x18\x95\x73\x68\xaa\xb5\xda\x31\xc9\x41\x34\x50\xcb\xea\x55\x64\x3c\x83\x25\x6b\xf0\xbc\x4c\x60\x27\x54\x5e\x6d\x15\x60\x87\x64\xa5\xda\x43\xb5\x06\x56\xee\xe1\x3f\x51\x66\x09\xf0\xff\x6b\xc9\x9b\x06\x2a\x09\x62\x53\x17\x82\x63\x4d\x94\x69\xb1\xcd\x44\xf9\x02\x2b\x9c\x2b\x2b\x7c\xc7\x02\x5f\x33\x82\xaa\x0a\x88\xf0\x0e\x25\x78\x43\x60\x1b\x2e\xd3\x1c\x8f\x6c\x25\x0a\xa1\xf6\x09\xac\x85\x2a\x09\x73\x8d\xa0\x0c\x6a\x26\x95\x48\xb7\x05\x93\x50\x6f\x65\x5d\x35\x1c\xe9\x33\x84\x2d\x45\xb9\x96\xc8\xc2\x37\xbc\x54\x4f\xc8\x8a\x35\xe0\xaf\x78\x80\x26\x67\x45\x11\xa9\xd8\x16\xd5\xcb\xa8\x2f\xad\xea\xbd\x14\x2f\xb9\x82\xbc\x2a\x32\x8e\xc5\x15\x47\x65\x6c\x55\xf0\x1b\x15\x9a\x4a\x0b\x26\x36\x09\x64\x6c\xc3\x5e\x78\x9c\xaa\x10\x45\xc6\xb6\xbb\xba\x5d\xce\x63\x09\xf9\x18\xfe\x52\x25\xaa\x92\x6c\xa4\x55\xa9\x24\x1e\x13\x74\x29\xd5\xaf\xd1\x9d\x68\x78\x02\x4c\x8a\x86\x02\x59\xcb\x0a\xe1\x29\x4e\x9c\xa8\x22\x08\xce\x95\xfc\x86\x42\x51\xc3\x97\x8d\x60\x0b\x9d\xb7\x0d\xff\xd0\x92\x71\x56\x20\x56\x43\xc3\x9f\x9b\x9f\x16\x3f\x03\x00\x00\xff\xff\x3e\x88\xe6\xeb\x33\x04\x00\x00")

func pythonNoticeBytes() ([]byte, error) {
	return bindataRead(
		_pythonNotice,
		"python/NOTICE",
	)
}

func pythonNotice() (*asset, error) {
	bytes, err := pythonNoticeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "python/NOTICE", size: 1075, mode: os.FileMode(420), modTime: time.Unix(1497095036, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _pythonChartHelmignore = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x4c\x8f\x41\x4f\xc3\x30\x0c\x85\xef\xf9\x15\x46\xbb\x00\x42\xe9\x8f\xd8\x38\x70\x02\xa9\x68\x57\x94\x36\x5e\x62\x96\x3a\x51\xe2\xae\xc0\x81\xdf\x8e\xd7\x69\x62\x97\x4f\xce\xcb\xf3\xcb\xcb\x06\xde\x9c\x08\x56\x6e\x20\x19\x28\x70\xae\x08\x4b\x44\x86\x61\xa6\xe4\x89\x03\x14\x37\x1e\x5d\xc0\x66\xcd\x06\xde\x23\x35\x68\x73\x29\xb9\x8a\x0e\x11\x53\x82\x90\xf2\x00\x93\x93\x31\xaa\xfb\x09\x2a\x26\x27\x74\x42\xdd\x93\x78\xa3\x3b\xf6\x1a\xc0\x18\xf4\x36\x33\xdc\x97\x8a\x07\xfa\x42\x0f\x0b\xa9\xef\xee\xc1\xc2\x2b\xa7\x6f\xc8\xbc\x6e\x9e\x2b\x41\xc1\x0a\x89\x18\xad\xb1\xbb\xfe\xa3\x17\xed\xa6\x11\xdb\x3c\x4d\x1a\xb0\xdf\xf6\xe0\xa9\x36\x63\x03\x49\xb7\xf2\x52\xdf\xd8\xe1\xa7\x76\x2b\xaf\x42\x0c\xdd\x19\xd7\x63\x3b\x71\xf7\x1f\x34\xe8\xff\xe6\x02\x07\x4a\xd8\xcc\xa3\x6d\x4b\x51\x0e\xee\xa8\x94\x49\xe7\x5f\xb5\xee\x5d\xa5\x3c\x37\x78\xd9\x3d\xeb\x83\xa5\xe6\x4f\x1c\xc5\x58\xf2\xe8\xba\x8b\x4f\x25\xf3\x17\x00\x00\xff\xff\xbc\x5b\x94\x77\x4d\x01\x00\x00")

func pythonChartHelmignoreBytes() ([]byte, error) {
	return bindataRead(
		_pythonChartHelmignore,
		"python/chart/.helmignore",
	)
}

func pythonChartHelmignore() (*asset, error) {
	bytes, err := pythonChartHelmignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "python/chart/.helmignore", size: 333, mode: os.FileMode(420), modTime: time.Unix(1497095036, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _pythonChartChartYaml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xca\x4b\xcc\x4d\xb5\x52\x28\xa8\x2c\xc9\xc8\xcf\xe3\x02\x04\x00\x00\xff\xff\xf1\xba\xd4\xcc\x0d\x00\x00\x00")

func pythonChartChartYamlBytes() ([]byte, error) {
	return bindataRead(
		_pythonChartChartYaml,
		"python/chart/Chart.yaml",
	)
}

func pythonChartChartYaml() (*asset, error) {
	bytes, err := pythonChartChartYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "python/chart/Chart.yaml", size: 13, mode: os.FileMode(420), modTime: time.Unix(1497095036, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _pythonChartTemplatesNotesTxt = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x93\x51\x6b\xdb\x3c\x14\x40\xdf\xfb\x2b\x2e\x26\x90\xef\x7b\xb0\xb2\x67\x43\x5f\xb6\x85\x11\x28\x49\xc8\xba\xc2\x18\x63\x5c\xcb\xd7\xb1\x56\x59\x12\xd6\x75\xd2\x60\xfc\xdf\x27\x39\x5e\xea\x66\xa3\x8c\x31\xbf\x45\x8e\x8e\x4e\xee\x51\x6e\xba\x2e\x05\x55\x82\xb4\x86\x51\x19\x0f\xc9\xda\x16\xb4\xb5\x0d\x27\x20\x1e\x50\xb7\xe4\x85\xa7\xe6\xa0\x24\x09\x3e\x39\x82\xbe\xbf\x01\xf8\x40\x0c\x5c\x11\xa0\x73\x5a\x49\x64\x65\x0d\x7c\xda\xdd\x41\x7e\x82\xa6\x35\x46\x99\x7d\x7c\xed\x29\x60\xeb\x1a\x4d\xe1\xb3\xb0\x89\x9e\x5c\xc0\xc2\x7a\xf3\x7e\xf9\x6d\xbb\xd9\xdd\xdf\xce\xfe\x7b\x6c\x73\x92\xac\x61\x1f\x78\x69\x6a\xb0\x26\xef\x50\x12\x74\x1d\x88\x1d\x69\x42\x4f\x62\x7d\x59\xed\x7b\x48\x2d\x7c\xf7\xd6\x38\xe4\xea\x36\xe9\x84\x77\x24\x45\xa4\xfa\x2f\x6f\xbe\x0a\x33\x9a\xf7\x09\x8c\xca\x3e\x92\x98\x6a\xa7\x91\x09\x92\xb2\xd5\x3a\x1e\x12\x7e\x5a\x80\xfd\x7f\xe5\xb4\xda\x5e\x19\x45\x9e\xff\x2b\x2f\x15\xce\x1c\x94\x3c\x23\xb7\x5e\x60\x51\x34\xe4\x3d\x0d\x6b\xe3\x87\x3e\x19\x04\x64\x65\xa1\x62\x76\xd9\x62\x31\x1b\x35\xb2\xd9\x65\x46\x0b\x6d\xf7\xca\x0c\x91\x48\x87\x79\xbe\x28\x75\x67\xb1\x78\x8b\x1a\x8d\xa4\xe6\x9f\xd7\x0a\xcf\x7a\x73\xbf\xcc\x60\xc5\x50\xe3\x09\x18\x1f\x03\x01\x4a\x3a\x42\xad\x4c\xcb\x61\x32\xa5\x6d\x06\xee\xd4\x03\x56\x5b\x60\x0b\x79\xf8\xee\x01\x95\xc6\x5c\x93\x38\xd3\xce\xcf\x67\xdb\x82\x44\x03\x47\x64\x59\x0d\xbb\xcf\x23\x02\x5b\x4e\x7d\xe6\xd3\x0e\xfe\x20\x21\x3d\xbe\x96\x72\xfe\x9c\xf2\xe3\x72\xf7\xb0\x7a\xf7\x9b\x9a\x03\xe5\x4f\x5a\xbe\x72\xce\x8b\xce\xf3\xee\x67\x5e\x3d\x19\x80\x08\xfa\x31\x6f\x2c\xad\x5c\x3f\xff\x25\xf2\xb3\x60\x16\x15\xae\xaa\xd1\x13\x53\x63\x50\xc7\x7b\x1c\xeb\x5d\xca\x0f\x25\x47\xc6\xb5\x7a\x78\x29\x26\xac\x3c\xac\x17\xb6\x0e\x97\x24\x2a\x87\x1a\x28\xc3\x5f\xc1\xc3\xc9\xb6\xcd\xf4\x12\x9c\xe1\xa6\x88\xec\x1f\x01\x00\x00\xff\xff\x95\xfb\xb4\x1f\x08\x04\x00\x00")

func pythonChartTemplatesNotesTxtBytes() ([]byte, error) {
	return bindataRead(
		_pythonChartTemplatesNotesTxt,
		"python/chart/templates/NOTES.txt",
	)
}

func pythonChartTemplatesNotesTxt() (*asset, error) {
	bytes, err := pythonChartTemplatesNotesTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "python/chart/templates/NOTES.txt", size: 1032, mode: os.FileMode(420), modTime: time.Unix(1497095036, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _pythonChartTemplates_helpersTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x90\xc1\x4a\x33\x31\x14\x85\xf7\xf3\x14\x87\xe1\x2f\xfc\x16\x66\xba\x10\x5c\x14\xba\xaa\xae\x84\x0a\x16\x74\x9d\xce\x9c\xd8\x40\x26\x1d\x93\x9b\xd2\x52\xfb\xee\x4e\x32\x6a\x11\x5c\xe8\xee\x12\xbe\x7c\xf7\xdc\x73\x3a\xcd\xa6\xd8\x9b\x6e\x8e\x40\x81\x36\x96\x72\xec\xb9\xe8\x62\x10\xd5\x6c\x39\xc7\x74\x76\x3e\x17\x89\x2a\xee\x0e\xbd\x72\x2d\x64\x4b\x38\xd5\x11\x3b\x9d\xe7\x66\xab\xbc\xd4\xc5\x07\x57\xa1\xa5\x36\x8e\x28\x13\x53\xa2\xba\xbc\xaa\x68\x05\xf5\x32\xe3\xab\x24\xa8\x9f\x94\x8d\x0c\x75\x22\x1f\xf6\xf4\xde\xb4\xc4\x1b\xc4\x47\xd7\xe0\xe6\x3a\x8f\xa6\x5b\x47\xad\xcd\x01\x65\x75\x91\x71\x88\x91\xe6\x31\xd7\xd2\x53\x09\xa1\xbe\x76\xe8\x68\xed\x11\xaf\x51\x59\xa3\x0d\x5b\xa8\xbe\xcf\x89\xeb\xe2\x99\xa3\x3d\xf3\x92\x76\xa4\xf4\x01\x1b\x36\x2a\x06\x22\xec\x86\x58\xf7\x71\x43\xef\x28\x0c\xe3\x9d\x83\xc3\xb6\x01\xca\x13\xd6\x74\x46\x06\xa3\xec\x86\xd3\x4d\xc0\xff\xcd\x31\x77\x70\xbb\x5a\x27\xd6\xb8\x17\x84\x9e\xcd\xd5\x0f\x75\xa4\x50\xdf\x2b\xf9\x97\xed\xf3\xc5\xef\xbb\xf9\xfc\xd9\x7b\xe3\x44\xa3\x9c\x84\x6a\x12\x4a\xd4\x8f\xb4\x54\x81\xe3\xcf\x51\xfb\x97\x1a\xdf\x03\x00\x00\xff\xff\x34\x01\xd0\x17\x04\x02\x00\x00")

func pythonChartTemplates_helpersTplBytes() ([]byte, error) {
	return bindataRead(
		_pythonChartTemplates_helpersTpl,
		"python/chart/templates/_helpers.tpl",
	)
}

func pythonChartTemplates_helpersTpl() (*asset, error) {
	bytes, err := pythonChartTemplates_helpersTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "python/chart/templates/_helpers.tpl", size: 516, mode: os.FileMode(420), modTime: time.Unix(1497095036, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _pythonChartTemplatesDeploymentYaml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x53\xc1\x6a\xeb\x30\x10\xbc\xfb\x2b\x16\x5f\x1f\x71\xc8\x3b\xea\x9a\x07\xef\x56\x7c\x0a\xf4\x54\x36\xce\xd6\x11\x95\x25\x21\xad\x43\x43\x9a\x7f\xef\xca\x76\x62\x99\x14\x4a\x2f\xf5\x49\xcc\x8e\x76\x66\xc7\x2b\xf4\x7a\x47\x21\x6a\x67\x15\xd0\x3b\x93\x4d\xc7\xb8\x3e\x6d\xf6\xc4\xb8\x29\xde\xb4\x3d\x28\xf8\x47\xde\xb8\x73\x47\x96\x8b\x4e\xe0\x03\x32\xaa\x02\xc0\x62\x47\x0a\x2e\x17\x60\xea\xbc\x41\x26\x28\x5f\x7b\x63\x12\x5c\x42\x05\xd7\xab\x70\x0c\xee\xc9\xc4\xc4\x06\x68\x8e\x18\x58\x41\x29\x37\xaa\x6d\x3a\x57\x4f\x42\x15\xde\x6a\x46\x26\x33\xf0\x01\x41\x44\xb1\x91\x9e\x7f\x4a\x28\x5f\x4a\xa1\x95\x45\xf4\xd4\xa4\x5e\xa9\xa6\x1b\x8c\x83\x7a\xb5\x43\xd3\x53\xac\x26\x70\xeb\x7a\xcb\xa3\xf8\xcd\xd7\x28\x9f\x5b\x4f\x5f\x6e\x2d\x7d\xe8\xfd\x77\xd3\x00\xdc\x1c\x0c\xf3\x38\xcb\xa8\xad\x38\xbe\x21\xab\x39\x93\xe5\x84\x77\x11\xdd\x61\x4b\x53\x06\x93\xef\x01\x12\xf7\xad\x8e\x1c\xce\x42\x5e\x3f\x14\x5d\x68\xbf\xc4\xed\xd8\x5d\x3d\x14\x18\xdb\x21\xb0\x85\x6c\x2d\xe3\xd4\x4e\x32\x3a\x2f\x72\x1b\x6f\xf8\x7b\x31\xb7\xeb\x5d\xe0\x2c\xa2\xd5\x3c\x73\xed\xd2\xbf\xcc\xda\x44\x0a\x27\xdd\x50\xa5\x2d\x53\xb0\x68\x12\x21\x6f\x65\xf4\x89\x2c\xc5\x58\x07\xb7\xa7\xb9\x25\xc0\x91\xd9\xff\x27\xce\x21\x11\x46\x3e\x2a\x58\x2f\xb1\x9f\x4a\x06\xc2\x83\xfe\x75\xcd\xe8\xfa\xd0\x90\xa4\x96\x76\xc9\x3d\x63\x67\xb2\x15\x9d\x8a\xb2\xdf\xf2\xb2\xe4\x41\xc1\xe6\x6f\xba\xfd\x19\x00\x00\xff\xff\x52\x7b\x20\xc6\x87\x03\x00\x00")

func pythonChartTemplatesDeploymentYamlBytes() ([]byte, error) {
	return bindataRead(
		_pythonChartTemplatesDeploymentYaml,
		"python/chart/templates/deployment.yaml",
	)
}

func pythonChartTemplatesDeploymentYaml() (*asset, error) {
	bytes, err := pythonChartTemplatesDeploymentYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "python/chart/templates/deployment.yaml", size: 903, mode: os.FileMode(420), modTime: time.Unix(1497095036, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _pythonChartTemplatesIngressYaml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x90\x31\x6b\xc3\x40\x0c\x85\x77\xff\x8a\xc7\xad\xc5\x17\xb2\xde\xda\xa9\x4b\x28\x1d\xb2\x16\xd9\x56\x6b\x93\xf3\xd9\x9c\xe4\x50\x48\xf3\xdf\xab\x73\x9c\x16\x3a\x65\x93\x3e\x9e\x1e\x1f\xa2\x79\x38\x72\x96\x61\x4a\x01\xfc\xa5\x9c\xca\x28\xbb\xf3\xbe\x61\xa5\x7d\x75\x1a\x52\x17\xf0\x92\x3e\x33\x8b\x54\xa3\xb1\x8e\x94\x42\x05\x24\x1a\x39\xe0\x72\x81\xf2\x38\x47\x52\x86\xfb\x58\x62\x2c\xd8\xc1\xe3\x7a\xb5\x4c\xa4\x86\xa3\x94\x34\xd0\xf6\x94\x35\xc0\xd9\x85\x7f\x2e\xb3\x3f\x58\xd4\x72\xf5\x1f\xd9\x4c\xf0\x8d\xcc\xd6\xd9\x5a\xe7\x93\x83\x7b\x77\x16\x73\x95\xcc\xdc\x96\xae\xbc\x44\x5e\x4b\x6b\xf4\x93\xe8\x2a\xe1\xdf\x38\x32\x09\xdf\x4b\x7d\x61\x47\x8a\x0b\x8b\x6f\x8c\x77\xd3\x48\x43\xba\x59\x01\xbd\xea\x7c\xb3\x02\x66\xd2\x5e\xee\x4b\xbd\xae\x01\xbb\x6d\x07\x1a\x6a\x4f\x6c\x3f\xf8\x05\x80\x70\x3e\x0f\x2d\x1f\x1e\x78\xc0\xbf\x93\xd7\x29\x6f\xba\x9b\xda\xc6\x7d\xf9\x7c\x4e\x14\x4b\xa0\x5c\xfe\x04\x00\x00\xff\xff\x54\x0e\x39\x31\x96\x01\x00\x00")

func pythonChartTemplatesIngressYamlBytes() ([]byte, error) {
	return bindataRead(
		_pythonChartTemplatesIngressYaml,
		"python/chart/templates/ingress.yaml",
	)
}

func pythonChartTemplatesIngressYaml() (*asset, error) {
	bytes, err := pythonChartTemplatesIngressYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "python/chart/templates/ingress.yaml", size: 406, mode: os.FileMode(420), modTime: time.Unix(1497095036, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _pythonChartTemplatesServiceYaml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x90\x4f\x4b\x03\x31\x10\xc5\xef\xfb\x29\x86\x5c\xa5\x01\xaf\xb9\xf6\x2e\x0b\x4a\xaf\x32\xa6\xa3\x06\x67\x93\x30\x99\x16\xa5\xf6\xbb\x3b\xd9\x88\x82\x7f\x7a\x1b\xde\xfe\xde\x7b\x9b\x87\x35\xed\x48\x5a\x2a\x39\xc0\xf1\x7a\x7a\x49\x79\x1f\xe0\x96\xe4\x98\x22\x4d\x0b\x29\xee\x51\x31\x4c\x00\x19\x17\x0a\x70\x3a\x81\xd2\x52\x19\x95\xc0\x3d\x1e\x98\xbb\xec\xc0\xc3\xf9\x6c\x0c\xe3\x03\x71\xeb\x34\x40\x7c\x46\xd1\x00\xce\x1c\x7e\xdb\x6f\x7f\x63\xa8\x71\x9b\x6f\xe5\xb3\x19\xde\x41\xc8\x32\xa3\x65\x5e\x39\x70\xf7\xce\x30\x37\xb5\x4a\xb1\x67\xe9\x5b\x1d\xcd\x7e\x87\x7c\xa0\xe6\xdb\xf8\x3d\xdf\x3f\x8c\xe2\x5a\x44\xd7\xde\xcd\x7a\xfe\x49\xd3\xab\x92\x64\xe4\xd9\x80\xe1\xb2\x68\x94\x27\xd2\xf9\x3f\x4b\xca\xbf\x2d\x55\x8a\x96\x58\x38\xc0\xdd\x76\x5e\x95\xaf\x65\x7e\xda\xf3\x78\xb0\x41\x8d\x98\xa2\x16\x19\xd3\x60\xad\x97\x97\xfc\x08\x00\x00\xff\xff\xce\x5a\xb0\xc7\x95\x01\x00\x00")

func pythonChartTemplatesServiceYamlBytes() ([]byte, error) {
	return bindataRead(
		_pythonChartTemplatesServiceYaml,
		"python/chart/templates/service.yaml",
	)
}

func pythonChartTemplatesServiceYaml() (*asset, error) {
	bytes, err := pythonChartTemplatesServiceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "python/chart/templates/service.yaml", size: 405, mode: os.FileMode(420), modTime: time.Unix(1497095036, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _pythonChartValuesYaml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x90\x3f\x6f\x02\x31\x0c\xc5\xf7\xfb\x14\x96\x98\x8b\x80\x09\xdd\x56\xc1\x82\x54\x2a\x86\x2e\x1d\x7d\xc1\x07\x56\x9d\x3f\x75\x1c\xd4\xfb\xf6\xf5\x9d\xba\xb4\x53\xa5\x0c\x7e\xcf\xce\x2f\x7e\x59\xc1\x91\x46\x6c\x62\xf0\x40\x69\x54\x61\xcc\x0a\x65\xb2\x7b\x4e\xeb\x6e\x05\x6f\x77\xae\xe0\x07\xe1\xfd\xf9\xfc\xf2\xe4\xcd\x88\x66\x74\x85\x91\x85\xe6\x81\x23\x05\x41\x25\xbf\xad\x8c\x83\x38\xc0\x32\x0c\x04\x05\x6b\xf5\x31\x4e\x2e\xa7\xdc\x14\x8c\x62\x11\x34\xaa\xeb\x4e\xa9\x08\x07\x3c\xe4\x96\xac\x87\x5d\xc7\x11\x6f\xd4\x77\x00\x4a\x37\xae\xa6\x53\x0f\xd7\x1c\x3e\x48\xd7\x9c\xdd\xcd\x7a\xeb\x41\x78\x50\xd4\xc9\x65\xc2\x48\xfd\xcf\x8a\x2e\x0d\xbd\x9b\xd3\xd0\x58\xae\x2e\x4b\x13\xb9\x64\xc7\x3b\xe4\x34\xbe\x66\xbb\x28\x55\x4a\xd6\x55\xd2\x07\x87\xe5\x99\xbf\x84\xa9\xb8\x3c\x48\xab\x46\x7a\xba\xb8\x43\x5f\x5e\x25\x74\x90\xfa\x82\xfb\x8d\x5b\x1e\xe4\x97\xe5\xa6\x83\x3d\x58\xa0\x3a\x33\x85\x23\xdb\x52\x01\x84\xd2\x7a\xd8\x6e\x36\x71\x51\x91\x62\x9e\x23\x6d\x77\xfb\x33\x2f\x21\x3f\xfd\x9f\xff\x33\xfb\x1d\x00\x00\xff\xff\x80\x72\xab\xd5\x9c\x01\x00\x00")

func pythonChartValuesYamlBytes() ([]byte, error) {
	return bindataRead(
		_pythonChartValuesYaml,
		"python/chart/values.yaml",
	)
}

func pythonChartValuesYaml() (*asset, error) {
	bytes, err := pythonChartValuesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "python/chart/values.yaml", size: 412, mode: os.FileMode(420), modTime: time.Unix(1497118555, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _pythonDetect = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x8e\xc1\x6a\x83\x40\x14\x45\xf7\xef\x2b\xae\x28\xee\xea\xe0\xba\x74\x53\xec\x42\xe8\x42\x0a\x5d\x15\x29\x2a\x6f\x98\x07\x66\x9c\xcc\x3c\x83\xfe\x7d\x12\x12\xb2\x4a\xb6\xf7\x5c\x0e\x27\xcf\xcc\x9a\xa2\x19\xc5\x1b\xf6\x27\x8c\x43\x72\x44\x9f\xbf\xed\x77\xf3\xdf\xb4\x3f\x1f\x45\x4d\x94\xe3\x6b\x13\x05\x0f\x71\xde\x21\x16\x43\x08\x90\x84\x69\xbe\x2d\x7e\x51\x74\xbb\xba\xc5\x57\x74\xa1\x7f\xc8\xf0\x66\x51\x3c\x1c\x26\xf2\x71\x95\xc8\x07\xf6\x9a\x2a\xdd\x14\x3d\xca\xf2\xc9\x2f\xb1\xae\xa1\x0a\xfb\x2b\xde\x49\xb0\x32\x33\xfa\x77\xa8\x63\x4f\x00\x5f\xbb\x6a\xb2\x42\xc4\x93\x5b\xee\x19\x74\x0e\x00\x00\xff\xff\x8e\xe1\xe1\x89\xd4\x00\x00\x00")

func pythonDetectBytes() ([]byte, error) {
	return bindataRead(
		_pythonDetect,
		"python/detect",
	)
}

func pythonDetect() (*asset, error) {
	bytes, err := pythonDetectBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "python/detect", size: 212, mode: os.FileMode(493), modTime: time.Unix(1497095036, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _rubyDockerignore = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x72\xc9\x4f\xce\x4e\x2d\x4a\xcb\xcc\x49\xe5\x4a\x29\x4a\x4c\x2b\xd1\x2b\xc9\xcf\xcd\xe1\x4a\xce\x48\x2c\x2a\xd1\xe7\xf2\xf3\x0f\xf1\x74\x76\xe5\x02\x04\x00\x00\xff\xff\x18\xba\x47\x9a\x24\x00\x00\x00")

func rubyDockerignoreBytes() ([]byte, error) {
	return bindataRead(
		_rubyDockerignore,
		"ruby/.dockerignore",
	)
}

func rubyDockerignore() (*asset, error) {
	bytes, err := rubyDockerignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ruby/.dockerignore", size: 36, mode: os.FileMode(420), modTime: time.Unix(1497095036, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _rubyDockerfile = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x72\x0b\xf2\xf7\x55\x28\x2a\x4d\xaa\xb4\xca\xcf\x4b\x2a\xcd\xcc\x49\xe1\x72\x8d\x08\xf0\x0f\x76\x55\xb0\x30\xb0\x30\xe0\x72\xf6\x75\x51\x88\x56\x02\x49\x2b\xe9\x28\x28\x25\x16\x14\xe8\x15\x25\x29\xc5\x72\x01\x02\x00\x00\xff\xff\x49\x96\xb9\xb0\x35\x00\x00\x00")

func rubyDockerfileBytes() ([]byte, error) {
	return bindataRead(
		_rubyDockerfile,
		"ruby/Dockerfile",
	)
}

func rubyDockerfile() (*asset, error) {
	bytes, err := rubyDockerfileBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ruby/Dockerfile", size: 53, mode: os.FileMode(420), modTime: time.Unix(1497095036, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _rubyNotice = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x52\x5f\x6f\xe2\x38\x10\x7f\xe7\x53\x8c\x78\x6a\xa5\x5c\xef\x7a\xd2\xbd\xdc\x9b\x49\x4c\x63\x5d\x48\x22\xc7\x94\xe3\x31\x24\x86\x78\x37\xc4\xc8\x76\x16\xf5\xdb\xef\x8c\xa1\xdb\x76\x25\x44\xe4\xf1\xcc\xef\xdf\x78\x23\x14\x14\xa6\xd3\x93\xd7\xff\x2e\x16\xa9\xbd\xbc\x39\x73\x1a\x02\x3c\xa4\x8f\xf0\xf7\x5f\xcf\xcf\x7f\xe0\xdf\x3f\x90\x6b\x67\xbf\xcf\x09\x88\xa9\x7b\x5a\x2c\x6a\xed\xce\xc6\x7b\x63\x27\x30\x1e\x06\xed\xf4\xe1\x0d\x4e\xae\x9d\x82\xee\x13\x38\x3a\xad\xc1\x1e\xa1\x1b\x5a\x77\xd2\x09\x04\x0b\xed\xf4\x06\x17\xed\x3c\x0e\xd8\x43\x68\xcd\x64\xa6\x13\xb4\xd0\x21\x1b\x75\x86\x01\x61\xbc\x3d\x86\x6b\xeb\x34\x36\xf7\xd0\x7a\x6f\x3b\xd3\x22\x1e\xf4\xb6\x9b\xcf\x7a\x0a\x6d\x20\xbe\xa3\x19\xb5\x87\x87\x30\x68\x58\x36\xf7\x89\xe5\x63\x24\xe9\x75\x3b\x82\x99\x80\xee\xde\xaf\xe0\x6a\xc2\x60\xe7\x00\x4e\xfb\xe0\x4c\x47\x18\x09\x36\x75\xe3\xdc\x93\x86\xf7\xeb\xd1\x9c\xcd\x9d\x81\xc6\x63\x04\x9e\x40\x67\x8f\x0e\x48\x67\x02\x67\xdb\x9b\x23\x7d\x75\xb4\x75\x99\x0f\xa3\xf1\x43\x02\xbd\x21\xe8\xc3\x1c\xb0\xe8\xa9\x18\xc3\x4c\xc8\xc7\x9f\xd6\x81\xd7\xe3\x48\x08\x06\x75\x47\xaf\x1f\xea\x62\x0f\xb1\x5c\x28\xd0\x70\x8f\x28\xf2\x5e\x07\x7b\xfe\xea\x04\x23\x3a\xce\x6e\x42\x4a\x1d\x67\x7a\x8b\x91\x45\xc6\x6f\xba\x0b\x54\xa1\xf6\xa3\x1d\x47\x7b\x25\x6b\x9d\x9d\x7a\x43\x8e\x3c\xee\x55\xe1\x55\x7b\xb0\x3f\x74\xf4\x72\xdb\xf0\x64\x03\x4a\xbd\x49\xa0\x05\x5c\x3e\xb6\x7a\xbf\xf2\x43\x8b\xda\x0f\xfa\x1e\x18\xf2\x62\xbc\xed\x27\x3b\x8e\xe8\x7d\xc0\xc5\x1b\xcc\xfe\x62\x5d\xe4\xfb\xdd\x26\xbe\x18\x95\x73\x68\xaa\xb5\xda\x31\xc9\x41\x34\x50\xcb\xea\x55\x64\x3c\x83\x25\x6b\xf0\xbc\x4c\x60\x27\x54\x5e\x6d\x15\x60\x87\x64\xa5\xda\x43\xb5\x06\x56\xee\xe1\x3f\x51\x66\x09\xf0\xff\x6b\xc9\x9b\x06\x2a\x09\x62\x53\x17\x82\x63\x4d\x94\x69\xb1\xcd\x44\xf9\x02\x2b\x9c\x2b\x2b\x7c\xc7\x02\x5f\x33\x82\xaa\x0a\x88\xf0\x0e\x25\x78\x43\x60\x1b\x2e\xd3\x1c\x8f\x6c\x25\x0a\xa1\xf6\x09\xac\x85\x2a\x09\x73\x8d\xa0\x0c\x6a\x26\x95\x48\xb7\x05\x93\x50\x6f\x65\x5d\x35\x1c\xe9\x33\x84\x2d\x45\xb9\x96\xc8\xc2\x37\xbc\x54\x4f\xc8\x8a\x35\xe0\xaf\x78\x80\x26\x67\x45\x11\xa9\xd8\x16\xd5\xcb\xa8\x2f\xad\xea\xbd\x14\x2f\xb9\x82\xbc\x2a\x32\x8e\xc5\x15\x47\x65\x6c\x55\xf0\x1b\x15\x9a\x4a\x0b\x26\x36\x09\x64\x6c\xc3\x5e\x78\x9c\xaa\x10\x45\xc6\xb6\xbb\xba\x5d\xce\x63\x09\xf9\x18\xfe\x52\x25\xaa\x92\x6c\xa4\x55\xa9\x24\x1e\x13\x74\x29\xd5\xaf\xd1\x9d\x68\x78\x02\x4c\x8a\x86\x02\x59\xcb\x0a\xe1\x29\x4e\x9c\xa8\x22\x08\xce\x95\xfc\x86\x42\x51\xc3\x97\x8d\x60\x0b\x9d\xb7\x0d\xff\xd0\x92\x71\x56\x20\x56\x43\xc3\x9f\x9b\x9f\x16\x3f\x03\x00\x00\xff\xff\x3e\x88\xe6\xeb\x33\x04\x00\x00")

func rubyNoticeBytes() ([]byte, error) {
	return bindataRead(
		_rubyNotice,
		"ruby/NOTICE",
	)
}

func rubyNotice() (*asset, error) {
	bytes, err := rubyNoticeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ruby/NOTICE", size: 1075, mode: os.FileMode(420), modTime: time.Unix(1497095036, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _rubyChartHelmignore = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x4c\x8f\x41\x4f\xc3\x30\x0c\x85\xef\xf9\x15\x46\xbb\x00\x42\xe9\x8f\xd8\x38\x70\x02\xa9\x68\x57\x94\x36\x5e\x62\x96\x3a\x51\xe2\xae\xc0\x81\xdf\x8e\xd7\x69\x62\x97\x4f\xce\xcb\xf3\xcb\xcb\x06\xde\x9c\x08\x56\x6e\x20\x19\x28\x70\xae\x08\x4b\x44\x86\x61\xa6\xe4\x89\x03\x14\x37\x1e\x5d\xc0\x66\xcd\x06\xde\x23\x35\x68\x73\x29\xb9\x8a\x0e\x11\x53\x82\x90\xf2\x00\x93\x93\x31\xaa\xfb\x09\x2a\x26\x27\x74\x42\xdd\x93\x78\xa3\x3b\xf6\x1a\xc0\x18\xf4\x36\x33\xdc\x97\x8a\x07\xfa\x42\x0f\x0b\xa9\xef\xee\xc1\xc2\x2b\xa7\x6f\xc8\xbc\x6e\x9e\x2b\x41\xc1\x0a\x89\x18\xad\xb1\xbb\xfe\xa3\x17\xed\xa6\x11\xdb\x3c\x4d\x1a\xb0\xdf\xf6\xe0\xa9\x36\x63\x03\x49\xb7\xf2\x52\xdf\xd8\xe1\xa7\x76\x2b\xaf\x42\x0c\xdd\x19\xd7\x63\x3b\x71\xf7\x1f\x34\xe8\xff\xe6\x02\x07\x4a\xd8\xcc\xa3\x6d\x4b\x51\x0e\xee\xa8\x94\x49\xe7\x5f\xb5\xee\x5d\xa5\x3c\x37\x78\xd9\x3d\xeb\x83\xa5\xe6\x4f\x1c\xc5\x58\xf2\xe8\xba\x8b\x4f\x25\xf3\x17\x00\x00\xff\xff\xbc\x5b\x94\x77\x4d\x01\x00\x00")

func rubyChartHelmignoreBytes() ([]byte, error) {
	return bindataRead(
		_rubyChartHelmignore,
		"ruby/chart/.helmignore",
	)
}

func rubyChartHelmignore() (*asset, error) {
	bytes, err := rubyChartHelmignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ruby/chart/.helmignore", size: 333, mode: os.FileMode(420), modTime: time.Unix(1497095036, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _rubyChartChartYaml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xca\x4b\xcc\x4d\xb5\x52\x28\x2a\x4d\xaa\xe4\x02\x04\x00\x00\xff\xff\x74\x83\x10\xe3\x0b\x00\x00\x00")

func rubyChartChartYamlBytes() ([]byte, error) {
	return bindataRead(
		_rubyChartChartYaml,
		"ruby/chart/Chart.yaml",
	)
}

func rubyChartChartYaml() (*asset, error) {
	bytes, err := rubyChartChartYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ruby/chart/Chart.yaml", size: 11, mode: os.FileMode(420), modTime: time.Unix(1497095036, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _rubyChartTemplatesNotesTxt = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x93\x51\x6b\xdb\x3c\x14\x40\xdf\xfb\x2b\x2e\x26\x90\xef\x7b\xb0\xb2\x67\x43\x5f\xb6\x85\x11\x28\x49\xc8\xba\xc2\x18\x63\x5c\xcb\xd7\xb1\x56\x59\x12\xd6\x75\xd2\x60\xfc\xdf\x27\x39\x5e\xea\x66\xa3\x8c\x31\xbf\x45\x8e\x8e\x4e\xee\x51\x6e\xba\x2e\x05\x55\x82\xb4\x86\x51\x19\x0f\xc9\xda\x16\xb4\xb5\x0d\x27\x20\x1e\x50\xb7\xe4\x85\xa7\xe6\xa0\x24\x09\x3e\x39\x82\xbe\xbf\x01\xf8\x40\x0c\x5c\x11\xa0\x73\x5a\x49\x64\x65\x0d\x7c\xda\xdd\x41\x7e\x82\xa6\x35\x46\x99\x7d\x7c\xed\x29\x60\xeb\x1a\x4d\xe1\xb3\xb0\x89\x9e\x5c\xc0\xc2\x7a\xf3\x7e\xf9\x6d\xbb\xd9\xdd\xdf\xce\xfe\x7b\x6c\x73\x92\xac\x61\x1f\x78\x69\x6a\xb0\x26\xef\x50\x12\x74\x1d\x88\x1d\x69\x42\x4f\x62\x7d\x59\xed\x7b\x48\x2d\x7c\xf7\xd6\x38\xe4\xea\x36\xe9\x84\x77\x24\x45\xa4\xfa\x2f\x6f\xbe\x0a\x33\x9a\xf7\x09\x8c\xca\x3e\x92\x98\x6a\xa7\x91\x09\x92\xb2\xd5\x3a\x1e\x12\x7e\x5a\x80\xfd\x7f\xe5\xb4\xda\x5e\x19\x45\x9e\xff\x2b\x2f\x15\xce\x1c\x94\x3c\x23\xb7\x5e\x60\x51\x34\xe4\x3d\x0d\x6b\xe3\x87\x3e\x19\x04\x64\x65\xa1\x62\x76\xd9\x62\x31\x1b\x35\xb2\xd9\x65\x46\x0b\x6d\xf7\xca\x0c\x91\x48\x87\x79\xbe\x28\x75\x67\xb1\x78\x8b\x1a\x8d\xa4\xe6\x9f\xd7\x0a\xcf\x7a\x73\xbf\xcc\x60\xc5\x50\xe3\x09\x18\x1f\x03\x01\x4a\x3a\x42\xad\x4c\xcb\x61\x32\xa5\x6d\x06\xee\xd4\x03\x56\x5b\x60\x0b\x79\xf8\xee\x01\x95\xc6\x5c\x93\x38\xd3\xce\xcf\x67\xdb\x82\x44\x03\x47\x64\x59\x0d\xbb\xcf\x23\x02\x5b\x4e\x7d\xe6\xd3\x0e\xfe\x20\x21\x3d\xbe\x96\x72\xfe\x9c\xf2\xe3\x72\xf7\xb0\x7a\xf7\x9b\x9a\x03\xe5\x4f\x5a\xbe\x72\xce\x8b\xce\xf3\xee\x67\x5e\x3d\x19\x80\x08\xfa\x31\x6f\x2c\xad\x5c\x3f\xff\x25\xf2\xb3\x60\x16\x15\xae\xaa\xd1\x13\x53\x63\x50\xc7\x7b\x1c\xeb\x5d\xca\x0f\x25\x47\xc6\xb5\x7a\x78\x29\x26\xac\x3c\xac\x17\xb6\x0e\x97\x24\x2a\x87\x1a\x28\xc3\x5f\xc1\xc3\xc9\xb6\xcd\xf4\x12\x9c\xe1\xa6\x88\xec\x1f\x01\x00\x00\xff\xff\x95\xfb\xb4\x1f\x08\x04\x00\x00")

func rubyChartTemplatesNotesTxtBytes() ([]byte, error) {
	return bindataRead(
		_rubyChartTemplatesNotesTxt,
		"ruby/chart/templates/NOTES.txt",
	)
}

func rubyChartTemplatesNotesTxt() (*asset, error) {
	bytes, err := rubyChartTemplatesNotesTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ruby/chart/templates/NOTES.txt", size: 1032, mode: os.FileMode(420), modTime: time.Unix(1497095036, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _rubyChartTemplates_helpersTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x90\xc1\x4a\x33\x31\x14\x85\xf7\xf3\x14\x87\xe1\x2f\xfc\x16\x66\xba\x10\x5c\x14\xba\xaa\xae\x84\x0a\x16\x74\x9d\xce\x9c\xd8\x40\x26\x1d\x93\x9b\xd2\x52\xfb\xee\x4e\x32\x6a\x11\x5c\xe8\xee\x12\xbe\x7c\xf7\xdc\x73\x3a\xcd\xa6\xd8\x9b\x6e\x8e\x40\x81\x36\x96\x72\xec\xb9\xe8\x62\x10\xd5\x6c\x39\xc7\x74\x76\x3e\x17\x89\x2a\xee\x0e\xbd\x72\x2d\x64\x4b\x38\xd5\x11\x3b\x9d\xe7\x66\xab\xbc\xd4\xc5\x07\x57\xa1\xa5\x36\x8e\x28\x13\x53\xa2\xba\xbc\xaa\x68\x05\xf5\x32\xe3\xab\x24\xa8\x9f\x94\x8d\x0c\x75\x22\x1f\xf6\xf4\xde\xb4\xc4\x1b\xc4\x47\xd7\xe0\xe6\x3a\x8f\xa6\x5b\x47\xad\xcd\x01\x65\x75\x91\x71\x88\x91\xe6\x31\xd7\xd2\x53\x09\xa1\xbe\x76\xe8\x68\xed\x11\xaf\x51\x59\xa3\x0d\x5b\xa8\xbe\xcf\x89\xeb\xe2\x99\xa3\x3d\xf3\x92\x76\xa4\xf4\x01\x1b\x36\x2a\x06\x22\xec\x86\x58\xf7\x71\x43\xef\x28\x0c\xe3\x9d\x83\xc3\xb6\x01\xca\x13\xd6\x74\x46\x06\xa3\xec\x86\xd3\x4d\xc0\xff\xcd\x31\x77\x70\xbb\x5a\x27\xd6\xb8\x17\x84\x9e\xcd\xd5\x0f\x75\xa4\x50\xdf\x2b\xf9\x97\xed\xf3\xc5\xef\xbb\xf9\xfc\xd9\x7b\xe3\x44\xa3\x9c\x84\x6a\x12\x4a\xd4\x8f\xb4\x54\x81\xe3\xcf\x51\xfb\x97\x1a\xdf\x03\x00\x00\xff\xff\x34\x01\xd0\x17\x04\x02\x00\x00")

func rubyChartTemplates_helpersTplBytes() ([]byte, error) {
	return bindataRead(
		_rubyChartTemplates_helpersTpl,
		"ruby/chart/templates/_helpers.tpl",
	)
}

func rubyChartTemplates_helpersTpl() (*asset, error) {
	bytes, err := rubyChartTemplates_helpersTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ruby/chart/templates/_helpers.tpl", size: 516, mode: os.FileMode(420), modTime: time.Unix(1497095036, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _rubyChartTemplatesDeploymentYaml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x53\xc1\x6a\xeb\x30\x10\xbc\xfb\x2b\x16\x5f\x1f\x71\xc8\x3b\xea\x9a\x07\xef\x56\x7c\x0a\xf4\x54\x36\xce\xd6\x11\x95\x25\x21\xad\x43\x43\x9a\x7f\xef\xca\x76\x62\x99\x14\x4a\x2f\xf5\x49\xcc\x8e\x76\x66\xc7\x2b\xf4\x7a\x47\x21\x6a\x67\x15\xd0\x3b\x93\x4d\xc7\xb8\x3e\x6d\xf6\xc4\xb8\x29\xde\xb4\x3d\x28\xf8\x47\xde\xb8\x73\x47\x96\x8b\x4e\xe0\x03\x32\xaa\x02\xc0\x62\x47\x0a\x2e\x17\x60\xea\xbc\x41\x26\x28\x5f\x7b\x63\x12\x5c\x42\x05\xd7\xab\x70\x0c\xee\xc9\xc4\xc4\x06\x68\x8e\x18\x58\x41\x29\x37\xaa\x6d\x3a\x57\x4f\x42\x15\xde\x6a\x46\x26\x33\xf0\x01\x41\x44\xb1\x91\x9e\x7f\x4a\x28\x5f\x4a\xa1\x95\x45\xf4\xd4\xa4\x5e\xa9\xa6\x1b\x8c\x83\x7a\xb5\x43\xd3\x53\xac\x26\x70\xeb\x7a\xcb\xa3\xf8\xcd\xd7\x28\x9f\x5b\x4f\x5f\x6e\x2d\x7d\xe8\xfd\x77\xd3\x00\xdc\x1c\x0c\xf3\x38\xcb\xa8\xad\x38\xbe\x21\xab\x39\x93\xe5\x84\x77\x11\xdd\x61\x4b\x53\x06\x93\xef\x01\x12\xf7\xad\x8e\x1c\xce\x42\x5e\x3f\x14\x5d\x68\xbf\xc4\xed\xd8\x5d\x3d\x14\x18\xdb\x21\xb0\x85\x6c\x2d\xe3\xd4\x4e\x32\x3a\x2f\x72\x1b\x6f\xf8\x7b\x31\xb7\xeb\x5d\xe0\x2c\xa2\xd5\x3c\x73\xed\xd2\xbf\xcc\xda\x44\x0a\x27\xdd\x50\xa5\x2d\x53\xb0\x68\x12\x21\x6f\x65\xf4\x89\x2c\xc5\x58\x07\xb7\xa7\xb9\x25\xc0\x91\xd9\xff\x27\xce\x21\x11\x46\x3e\x2a\x58\x2f\xb1\x9f\x4a\x06\xc2\x83\xfe\x75\xcd\xe8\xfa\xd0\x90\xa4\x96\x76\xc9\x3d\x63\x67\xb2\x15\x9d\x8a\xb2\xdf\xf2\xb2\xe4\x41\xc1\xe6\x6f\xba\xfd\x19\x00\x00\xff\xff\x52\x7b\x20\xc6\x87\x03\x00\x00")

func rubyChartTemplatesDeploymentYamlBytes() ([]byte, error) {
	return bindataRead(
		_rubyChartTemplatesDeploymentYaml,
		"ruby/chart/templates/deployment.yaml",
	)
}

func rubyChartTemplatesDeploymentYaml() (*asset, error) {
	bytes, err := rubyChartTemplatesDeploymentYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ruby/chart/templates/deployment.yaml", size: 903, mode: os.FileMode(420), modTime: time.Unix(1497095036, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _rubyChartTemplatesIngressYaml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x90\x31\x6b\xc3\x40\x0c\x85\x77\xff\x8a\xc7\xad\xc5\x17\xb2\xde\xda\xa9\x4b\x28\x1d\xb2\x16\xd9\x56\x6b\x93\xf3\xd9\x9c\xe4\x50\x48\xf3\xdf\xab\x73\x9c\x16\x3a\x65\x93\x3e\x9e\x1e\x1f\xa2\x79\x38\x72\x96\x61\x4a\x01\xfc\xa5\x9c\xca\x28\xbb\xf3\xbe\x61\xa5\x7d\x75\x1a\x52\x17\xf0\x92\x3e\x33\x8b\x54\xa3\xb1\x8e\x94\x42\x05\x24\x1a\x39\xe0\x72\x81\xf2\x38\x47\x52\x86\xfb\x58\x62\x2c\xd8\xc1\xe3\x7a\xb5\x4c\xa4\x86\xa3\x94\x34\xd0\xf6\x94\x35\xc0\xd9\x85\x7f\x2e\xb3\x3f\x58\xd4\x72\xf5\x1f\xd9\x4c\xf0\x8d\xcc\xd6\xd9\x5a\xe7\x93\x83\x7b\x77\x16\x73\x95\xcc\xdc\x96\xae\xbc\x44\x5e\x4b\x6b\xf4\x93\xe8\x2a\xe1\xdf\x38\x32\x09\xdf\x4b\x7d\x61\x47\x8a\x0b\x8b\x6f\x8c\x77\xd3\x48\x43\xba\x59\x01\xbd\xea\x7c\xb3\x02\x66\xd2\x5e\xee\x4b\xbd\xae\x01\xbb\x6d\x07\x1a\x6a\x4f\x6c\x3f\xf8\x05\x80\x70\x3e\x0f\x2d\x1f\x1e\x78\xc0\xbf\x93\xd7\x29\x6f\xba\x9b\xda\xc6\x7d\xf9\x7c\x4e\x14\x4b\xa0\x5c\xfe\x04\x00\x00\xff\xff\x54\x0e\x39\x31\x96\x01\x00\x00")

func rubyChartTemplatesIngressYamlBytes() ([]byte, error) {
	return bindataRead(
		_rubyChartTemplatesIngressYaml,
		"ruby/chart/templates/ingress.yaml",
	)
}

func rubyChartTemplatesIngressYaml() (*asset, error) {
	bytes, err := rubyChartTemplatesIngressYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ruby/chart/templates/ingress.yaml", size: 406, mode: os.FileMode(420), modTime: time.Unix(1497095036, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _rubyChartTemplatesServiceYaml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x90\x4f\x4b\x03\x31\x10\xc5\xef\xfb\x29\x86\x5c\xa5\x01\xaf\xb9\xf6\x2e\x0b\x4a\xaf\x32\xa6\xa3\x06\x67\x93\x30\x99\x16\xa5\xf6\xbb\x3b\xd9\x88\x82\x7f\x7a\x1b\xde\xfe\xde\x7b\x9b\x87\x35\xed\x48\x5a\x2a\x39\xc0\xf1\x7a\x7a\x49\x79\x1f\xe0\x96\xe4\x98\x22\x4d\x0b\x29\xee\x51\x31\x4c\x00\x19\x17\x0a\x70\x3a\x81\xd2\x52\x19\x95\xc0\x3d\x1e\x98\xbb\xec\xc0\xc3\xf9\x6c\x0c\xe3\x03\x71\xeb\x34\x40\x7c\x46\xd1\x00\xce\x1c\x7e\xdb\x6f\x7f\x63\xa8\x71\x9b\x6f\xe5\xb3\x19\xde\x41\xc8\x32\xa3\x65\x5e\x39\x70\xf7\xce\x30\x37\xb5\x4a\xb1\x67\xe9\x5b\x1d\xcd\x7e\x87\x7c\xa0\xe6\xdb\xf8\x3d\xdf\x3f\x8c\xe2\x5a\x44\xd7\xde\xcd\x7a\xfe\x49\xd3\xab\x92\x64\xe4\xd9\x80\xe1\xb2\x68\x94\x27\xd2\xf9\x3f\x4b\xca\xbf\x2d\x55\x8a\x96\x58\x38\xc0\xdd\x76\x5e\x95\xaf\x65\x7e\xda\xf3\x78\xb0\x41\x8d\x98\xa2\x16\x19\xd3\x60\xad\x97\x97\xfc\x08\x00\x00\xff\xff\xce\x5a\xb0\xc7\x95\x01\x00\x00")

func rubyChartTemplatesServiceYamlBytes() ([]byte, error) {
	return bindataRead(
		_rubyChartTemplatesServiceYaml,
		"ruby/chart/templates/service.yaml",
	)
}

func rubyChartTemplatesServiceYaml() (*asset, error) {
	bytes, err := rubyChartTemplatesServiceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ruby/chart/templates/service.yaml", size: 405, mode: os.FileMode(420), modTime: time.Unix(1497095036, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _rubyChartValuesYaml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x90\x31\x6f\xfa\x40\x0c\xc5\xf7\x7c\x0a\x4b\xcc\x7f\x04\x4c\x28\xdb\x5f\xb0\x20\x95\x0a\x55\x5d\x3a\x3a\xc1\xa1\x56\x7d\xb9\xd4\xe7\x43\xcd\xb7\xef\x23\x1b\x5b\xa5\x0c\xfe\x3d\xdb\x2f\x7e\xb7\xa2\xa3\x0c\x5c\x2d\xe8\xce\x56\xa5\xd0\x90\x9d\xde\x6a\x37\xaf\x9b\x15\xbd\x7f\x6a\x21\x7c\x4c\x1f\xff\xcf\x2f\xff\xd0\x4a\x1c\x21\x57\x1a\xd4\xe4\x31\x70\x94\xde\xd8\x05\xbb\xae\xdc\x19\xd6\x23\x53\x27\x34\x71\x29\x18\xd3\x11\x38\xe7\xea\x14\x92\x26\xe3\x90\xb2\x6e\x5c\x26\xd3\x9e\x0f\xb9\x8e\xd1\xd2\xae\xd1\xc4\x37\x69\x1b\x22\x97\x9b\x96\xf0\xb9\xa5\x6b\xee\xbf\xc4\xd7\x9a\xa1\x66\xbf\xb5\x64\xda\x39\xfb\x0c\x1c\x39\x49\x4b\x8e\x03\x01\xc1\xe8\xe5\xb1\xab\x6a\x57\xe0\x54\xcd\x2e\x19\xe6\xb0\x38\x0d\xaf\x39\x2e\x2e\x45\xc6\x68\x8a\xf8\x5d\xfb\xe5\x27\xcf\xfb\xf3\x04\x38\x58\x2d\x21\x7e\xba\x40\x91\x1f\x54\x23\xc3\xc6\x71\xdc\x7e\x03\x09\x21\x9e\x24\x88\xb0\x45\xa8\x5e\xca\xc3\xd1\x34\x69\x2c\x15\x51\x3f\xd5\x96\xb6\x9b\x4d\x5a\x28\x49\xca\x8f\x38\xdb\xdd\xfe\xac\x4b\xc0\x6f\xbc\xf0\x5f\x66\x7f\x03\x00\x00\xff\xff\x44\xce\x84\x92\x96\x01\x00\x00")

func rubyChartValuesYamlBytes() ([]byte, error) {
	return bindataRead(
		_rubyChartValuesYaml,
		"ruby/chart/values.yaml",
	)
}

func rubyChartValuesYaml() (*asset, error) {
	bytes, err := rubyChartValuesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ruby/chart/values.yaml", size: 406, mode: os.FileMode(420), modTime: time.Unix(1497118555, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _rubyDetect = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x44\x8c\x4b\x4b\x85\x40\x1c\xc5\xf7\xf3\x29\x4e\xd3\x20\xb6\xc8\xd1\x75\xb4\x28\x93\x72\x93\x31\x53\x6d\x44\xc4\xc7\x7f\x70\x40\xc7\xf0\xd1\x83\xb8\xdf\xfd\x7a\xb9\xe0\x5d\x9d\x1f\x9c\x73\x7e\xd7\x57\x72\x9d\x27\x59\x5b\x27\xc9\x7d\xa3\xae\xe6\x8e\x59\x83\x1c\xb7\x06\x5c\x44\xf2\x99\x06\x63\x7b\xe2\x28\xee\xb0\x74\xe4\x18\xa0\x63\x95\xbe\xbd\x97\x4f\xa9\xba\xe7\xc2\x47\xd3\xe2\x14\xad\x9d\x5c\x35\xd0\xc6\xff\x8f\x0f\xfa\xa5\xd4\xd9\x87\x8a\x93\x3c\x2c\x0e\x1c\x37\x1c\x9e\x87\xaf\x9f\x76\xa3\x4d\x40\x4d\x37\x82\x4f\x6b\xfd\x07\xe1\x37\xd5\x02\x71\x51\xca\x20\x90\x9f\x89\xd2\x69\xf6\x7a\xde\xfe\xda\x05\x21\xa3\x7e\xa6\xfd\xe9\xc6\xbd\x89\x98\xb1\xec\x18\x00\x00\xff\xff\x6b\x6e\x96\x62\xc4\x00\x00\x00")

func rubyDetectBytes() ([]byte, error) {
	return bindataRead(
		_rubyDetect,
		"ruby/detect",
	)
}

func rubyDetect() (*asset, error) {
	bytes, err := rubyDetectBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ruby/detect", size: 196, mode: os.FileMode(493), modTime: time.Unix(1497095036, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"README.md": readmeMd,
	"dotnetcore/.dockerignore": dotnetcoreDockerignore,
	"dotnetcore/Dockerfile": dotnetcoreDockerfile,
	"dotnetcore/NOTICE": dotnetcoreNotice,
	"dotnetcore/chart/.helmignore": dotnetcoreChartHelmignore,
	"dotnetcore/chart/Chart.yaml": dotnetcoreChartChartYaml,
	"dotnetcore/chart/templates/NOTES.txt": dotnetcoreChartTemplatesNotesTxt,
	"dotnetcore/chart/templates/_helpers.tpl": dotnetcoreChartTemplates_helpersTpl,
	"dotnetcore/chart/templates/deployment.yaml": dotnetcoreChartTemplatesDeploymentYaml,
	"dotnetcore/chart/templates/ingress.yaml": dotnetcoreChartTemplatesIngressYaml,
	"dotnetcore/chart/templates/service.yaml": dotnetcoreChartTemplatesServiceYaml,
	"dotnetcore/chart/values.yaml": dotnetcoreChartValuesYaml,
	"dotnetcore/detect": dotnetcoreDetect,
	"golang/.dockerignore": golangDockerignore,
	"golang/Dockerfile": golangDockerfile,
	"golang/NOTICE": golangNotice,
	"golang/chart/.helmignore": golangChartHelmignore,
	"golang/chart/Chart.yaml": golangChartChartYaml,
	"golang/chart/templates/NOTES.txt": golangChartTemplatesNotesTxt,
	"golang/chart/templates/_helpers.tpl": golangChartTemplates_helpersTpl,
	"golang/chart/templates/deployment.yaml": golangChartTemplatesDeploymentYaml,
	"golang/chart/templates/ingress.yaml": golangChartTemplatesIngressYaml,
	"golang/chart/templates/service.yaml": golangChartTemplatesServiceYaml,
	"golang/chart/values.yaml": golangChartValuesYaml,
	"golang/detect": golangDetect,
	"gradle/.dockerignore": gradleDockerignore,
	"gradle/Dockerfile": gradleDockerfile,
	"gradle/NOTICE": gradleNotice,
	"gradle/chart/.helmignore": gradleChartHelmignore,
	"gradle/chart/Chart.yaml": gradleChartChartYaml,
	"gradle/chart/templates/NOTES.txt": gradleChartTemplatesNotesTxt,
	"gradle/chart/templates/_helpers.tpl": gradleChartTemplates_helpersTpl,
	"gradle/chart/templates/deployment.yaml": gradleChartTemplatesDeploymentYaml,
	"gradle/chart/templates/ingress.yaml": gradleChartTemplatesIngressYaml,
	"gradle/chart/templates/service.yaml": gradleChartTemplatesServiceYaml,
	"gradle/chart/values.yaml": gradleChartValuesYaml,
	"gradle/detect": gradleDetect,
	"maven/.dockerignore": mavenDockerignore,
	"maven/Dockerfile": mavenDockerfile,
	"maven/NOTICE": mavenNotice,
	"maven/chart/.helmignore": mavenChartHelmignore,
	"maven/chart/Chart.yaml": mavenChartChartYaml,
	"maven/chart/templates/NOTES.txt": mavenChartTemplatesNotesTxt,
	"maven/chart/templates/_helpers.tpl": mavenChartTemplates_helpersTpl,
	"maven/chart/templates/deployment.yaml": mavenChartTemplatesDeploymentYaml,
	"maven/chart/templates/ingress.yaml": mavenChartTemplatesIngressYaml,
	"maven/chart/templates/service.yaml": mavenChartTemplatesServiceYaml,
	"maven/chart/values.yaml": mavenChartValuesYaml,
	"maven/detect": mavenDetect,
	"node/.dockerignore": nodeDockerignore,
	"node/Dockerfile": nodeDockerfile,
	"node/NOTICE": nodeNotice,
	"node/chart/.helmignore": nodeChartHelmignore,
	"node/chart/Chart.yaml": nodeChartChartYaml,
	"node/chart/templates/NOTES.txt": nodeChartTemplatesNotesTxt,
	"node/chart/templates/_helpers.tpl": nodeChartTemplates_helpersTpl,
	"node/chart/templates/deployment.yaml": nodeChartTemplatesDeploymentYaml,
	"node/chart/templates/ingress.yaml": nodeChartTemplatesIngressYaml,
	"node/chart/templates/service.yaml": nodeChartTemplatesServiceYaml,
	"node/chart/values.yaml": nodeChartValuesYaml,
	"node/detect": nodeDetect,
	"php/.dockerignore": phpDockerignore,
	"php/Dockerfile": phpDockerfile,
	"php/NOTICE": phpNotice,
	"php/chart/.helmignore": phpChartHelmignore,
	"php/chart/Chart.yaml": phpChartChartYaml,
	"php/chart/templates/NOTES.txt": phpChartTemplatesNotesTxt,
	"php/chart/templates/_helpers.tpl": phpChartTemplates_helpersTpl,
	"php/chart/templates/deployment.yaml": phpChartTemplatesDeploymentYaml,
	"php/chart/templates/ingress.yaml": phpChartTemplatesIngressYaml,
	"php/chart/templates/service.yaml": phpChartTemplatesServiceYaml,
	"php/chart/values.yaml": phpChartValuesYaml,
	"php/detect": phpDetect,
	"python/.dockerignore": pythonDockerignore,
	"python/Dockerfile": pythonDockerfile,
	"python/NOTICE": pythonNotice,
	"python/chart/.helmignore": pythonChartHelmignore,
	"python/chart/Chart.yaml": pythonChartChartYaml,
	"python/chart/templates/NOTES.txt": pythonChartTemplatesNotesTxt,
	"python/chart/templates/_helpers.tpl": pythonChartTemplates_helpersTpl,
	"python/chart/templates/deployment.yaml": pythonChartTemplatesDeploymentYaml,
	"python/chart/templates/ingress.yaml": pythonChartTemplatesIngressYaml,
	"python/chart/templates/service.yaml": pythonChartTemplatesServiceYaml,
	"python/chart/values.yaml": pythonChartValuesYaml,
	"python/detect": pythonDetect,
	"ruby/.dockerignore": rubyDockerignore,
	"ruby/Dockerfile": rubyDockerfile,
	"ruby/NOTICE": rubyNotice,
	"ruby/chart/.helmignore": rubyChartHelmignore,
	"ruby/chart/Chart.yaml": rubyChartChartYaml,
	"ruby/chart/templates/NOTES.txt": rubyChartTemplatesNotesTxt,
	"ruby/chart/templates/_helpers.tpl": rubyChartTemplates_helpersTpl,
	"ruby/chart/templates/deployment.yaml": rubyChartTemplatesDeploymentYaml,
	"ruby/chart/templates/ingress.yaml": rubyChartTemplatesIngressYaml,
	"ruby/chart/templates/service.yaml": rubyChartTemplatesServiceYaml,
	"ruby/chart/values.yaml": rubyChartValuesYaml,
	"ruby/detect": rubyDetect,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"README.md": &bintree{readmeMd, map[string]*bintree{}},
	"dotnetcore": &bintree{nil, map[string]*bintree{
		".dockerignore": &bintree{dotnetcoreDockerignore, map[string]*bintree{}},
		"Dockerfile": &bintree{dotnetcoreDockerfile, map[string]*bintree{}},
		"NOTICE": &bintree{dotnetcoreNotice, map[string]*bintree{}},
		"chart": &bintree{nil, map[string]*bintree{
			".helmignore": &bintree{dotnetcoreChartHelmignore, map[string]*bintree{}},
			"Chart.yaml": &bintree{dotnetcoreChartChartYaml, map[string]*bintree{}},
			"templates": &bintree{nil, map[string]*bintree{
				"NOTES.txt": &bintree{dotnetcoreChartTemplatesNotesTxt, map[string]*bintree{}},
				"_helpers.tpl": &bintree{dotnetcoreChartTemplates_helpersTpl, map[string]*bintree{}},
				"deployment.yaml": &bintree{dotnetcoreChartTemplatesDeploymentYaml, map[string]*bintree{}},
				"ingress.yaml": &bintree{dotnetcoreChartTemplatesIngressYaml, map[string]*bintree{}},
				"service.yaml": &bintree{dotnetcoreChartTemplatesServiceYaml, map[string]*bintree{}},
			}},
			"values.yaml": &bintree{dotnetcoreChartValuesYaml, map[string]*bintree{}},
		}},
		"detect": &bintree{dotnetcoreDetect, map[string]*bintree{}},
	}},
	"golang": &bintree{nil, map[string]*bintree{
		".dockerignore": &bintree{golangDockerignore, map[string]*bintree{}},
		"Dockerfile": &bintree{golangDockerfile, map[string]*bintree{}},
		"NOTICE": &bintree{golangNotice, map[string]*bintree{}},
		"chart": &bintree{nil, map[string]*bintree{
			".helmignore": &bintree{golangChartHelmignore, map[string]*bintree{}},
			"Chart.yaml": &bintree{golangChartChartYaml, map[string]*bintree{}},
			"templates": &bintree{nil, map[string]*bintree{
				"NOTES.txt": &bintree{golangChartTemplatesNotesTxt, map[string]*bintree{}},
				"_helpers.tpl": &bintree{golangChartTemplates_helpersTpl, map[string]*bintree{}},
				"deployment.yaml": &bintree{golangChartTemplatesDeploymentYaml, map[string]*bintree{}},
				"ingress.yaml": &bintree{golangChartTemplatesIngressYaml, map[string]*bintree{}},
				"service.yaml": &bintree{golangChartTemplatesServiceYaml, map[string]*bintree{}},
			}},
			"values.yaml": &bintree{golangChartValuesYaml, map[string]*bintree{}},
		}},
		"detect": &bintree{golangDetect, map[string]*bintree{}},
	}},
	"gradle": &bintree{nil, map[string]*bintree{
		".dockerignore": &bintree{gradleDockerignore, map[string]*bintree{}},
		"Dockerfile": &bintree{gradleDockerfile, map[string]*bintree{}},
		"NOTICE": &bintree{gradleNotice, map[string]*bintree{}},
		"chart": &bintree{nil, map[string]*bintree{
			".helmignore": &bintree{gradleChartHelmignore, map[string]*bintree{}},
			"Chart.yaml": &bintree{gradleChartChartYaml, map[string]*bintree{}},
			"templates": &bintree{nil, map[string]*bintree{
				"NOTES.txt": &bintree{gradleChartTemplatesNotesTxt, map[string]*bintree{}},
				"_helpers.tpl": &bintree{gradleChartTemplates_helpersTpl, map[string]*bintree{}},
				"deployment.yaml": &bintree{gradleChartTemplatesDeploymentYaml, map[string]*bintree{}},
				"ingress.yaml": &bintree{gradleChartTemplatesIngressYaml, map[string]*bintree{}},
				"service.yaml": &bintree{gradleChartTemplatesServiceYaml, map[string]*bintree{}},
			}},
			"values.yaml": &bintree{gradleChartValuesYaml, map[string]*bintree{}},
		}},
		"detect": &bintree{gradleDetect, map[string]*bintree{}},
	}},
	"maven": &bintree{nil, map[string]*bintree{
		".dockerignore": &bintree{mavenDockerignore, map[string]*bintree{}},
		"Dockerfile": &bintree{mavenDockerfile, map[string]*bintree{}},
		"NOTICE": &bintree{mavenNotice, map[string]*bintree{}},
		"chart": &bintree{nil, map[string]*bintree{
			".helmignore": &bintree{mavenChartHelmignore, map[string]*bintree{}},
			"Chart.yaml": &bintree{mavenChartChartYaml, map[string]*bintree{}},
			"templates": &bintree{nil, map[string]*bintree{
				"NOTES.txt": &bintree{mavenChartTemplatesNotesTxt, map[string]*bintree{}},
				"_helpers.tpl": &bintree{mavenChartTemplates_helpersTpl, map[string]*bintree{}},
				"deployment.yaml": &bintree{mavenChartTemplatesDeploymentYaml, map[string]*bintree{}},
				"ingress.yaml": &bintree{mavenChartTemplatesIngressYaml, map[string]*bintree{}},
				"service.yaml": &bintree{mavenChartTemplatesServiceYaml, map[string]*bintree{}},
			}},
			"values.yaml": &bintree{mavenChartValuesYaml, map[string]*bintree{}},
		}},
		"detect": &bintree{mavenDetect, map[string]*bintree{}},
	}},
	"node": &bintree{nil, map[string]*bintree{
		".dockerignore": &bintree{nodeDockerignore, map[string]*bintree{}},
		"Dockerfile": &bintree{nodeDockerfile, map[string]*bintree{}},
		"NOTICE": &bintree{nodeNotice, map[string]*bintree{}},
		"chart": &bintree{nil, map[string]*bintree{
			".helmignore": &bintree{nodeChartHelmignore, map[string]*bintree{}},
			"Chart.yaml": &bintree{nodeChartChartYaml, map[string]*bintree{}},
			"templates": &bintree{nil, map[string]*bintree{
				"NOTES.txt": &bintree{nodeChartTemplatesNotesTxt, map[string]*bintree{}},
				"_helpers.tpl": &bintree{nodeChartTemplates_helpersTpl, map[string]*bintree{}},
				"deployment.yaml": &bintree{nodeChartTemplatesDeploymentYaml, map[string]*bintree{}},
				"ingress.yaml": &bintree{nodeChartTemplatesIngressYaml, map[string]*bintree{}},
				"service.yaml": &bintree{nodeChartTemplatesServiceYaml, map[string]*bintree{}},
			}},
			"values.yaml": &bintree{nodeChartValuesYaml, map[string]*bintree{}},
		}},
		"detect": &bintree{nodeDetect, map[string]*bintree{}},
	}},
	"php": &bintree{nil, map[string]*bintree{
		".dockerignore": &bintree{phpDockerignore, map[string]*bintree{}},
		"Dockerfile": &bintree{phpDockerfile, map[string]*bintree{}},
		"NOTICE": &bintree{phpNotice, map[string]*bintree{}},
		"chart": &bintree{nil, map[string]*bintree{
			".helmignore": &bintree{phpChartHelmignore, map[string]*bintree{}},
			"Chart.yaml": &bintree{phpChartChartYaml, map[string]*bintree{}},
			"templates": &bintree{nil, map[string]*bintree{
				"NOTES.txt": &bintree{phpChartTemplatesNotesTxt, map[string]*bintree{}},
				"_helpers.tpl": &bintree{phpChartTemplates_helpersTpl, map[string]*bintree{}},
				"deployment.yaml": &bintree{phpChartTemplatesDeploymentYaml, map[string]*bintree{}},
				"ingress.yaml": &bintree{phpChartTemplatesIngressYaml, map[string]*bintree{}},
				"service.yaml": &bintree{phpChartTemplatesServiceYaml, map[string]*bintree{}},
			}},
			"values.yaml": &bintree{phpChartValuesYaml, map[string]*bintree{}},
		}},
		"detect": &bintree{phpDetect, map[string]*bintree{}},
	}},
	"python": &bintree{nil, map[string]*bintree{
		".dockerignore": &bintree{pythonDockerignore, map[string]*bintree{}},
		"Dockerfile": &bintree{pythonDockerfile, map[string]*bintree{}},
		"NOTICE": &bintree{pythonNotice, map[string]*bintree{}},
		"chart": &bintree{nil, map[string]*bintree{
			".helmignore": &bintree{pythonChartHelmignore, map[string]*bintree{}},
			"Chart.yaml": &bintree{pythonChartChartYaml, map[string]*bintree{}},
			"templates": &bintree{nil, map[string]*bintree{
				"NOTES.txt": &bintree{pythonChartTemplatesNotesTxt, map[string]*bintree{}},
				"_helpers.tpl": &bintree{pythonChartTemplates_helpersTpl, map[string]*bintree{}},
				"deployment.yaml": &bintree{pythonChartTemplatesDeploymentYaml, map[string]*bintree{}},
				"ingress.yaml": &bintree{pythonChartTemplatesIngressYaml, map[string]*bintree{}},
				"service.yaml": &bintree{pythonChartTemplatesServiceYaml, map[string]*bintree{}},
			}},
			"values.yaml": &bintree{pythonChartValuesYaml, map[string]*bintree{}},
		}},
		"detect": &bintree{pythonDetect, map[string]*bintree{}},
	}},
	"ruby": &bintree{nil, map[string]*bintree{
		".dockerignore": &bintree{rubyDockerignore, map[string]*bintree{}},
		"Dockerfile": &bintree{rubyDockerfile, map[string]*bintree{}},
		"NOTICE": &bintree{rubyNotice, map[string]*bintree{}},
		"chart": &bintree{nil, map[string]*bintree{
			".helmignore": &bintree{rubyChartHelmignore, map[string]*bintree{}},
			"Chart.yaml": &bintree{rubyChartChartYaml, map[string]*bintree{}},
			"templates": &bintree{nil, map[string]*bintree{
				"NOTES.txt": &bintree{rubyChartTemplatesNotesTxt, map[string]*bintree{}},
				"_helpers.tpl": &bintree{rubyChartTemplates_helpersTpl, map[string]*bintree{}},
				"deployment.yaml": &bintree{rubyChartTemplatesDeploymentYaml, map[string]*bintree{}},
				"ingress.yaml": &bintree{rubyChartTemplatesIngressYaml, map[string]*bintree{}},
				"service.yaml": &bintree{rubyChartTemplatesServiceYaml, map[string]*bintree{}},
			}},
			"values.yaml": &bintree{rubyChartValuesYaml, map[string]*bintree{}},
		}},
		"detect": &bintree{rubyDetect, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

