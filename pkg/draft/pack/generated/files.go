// Code generated by go-bindata.
// sources:
// ../../../../packs/README.md
// ../../../../packs/dotnetcore/.dockerignore
// ../../../../packs/dotnetcore/Dockerfile
// ../../../../packs/dotnetcore/NOTICE
// ../../../../packs/dotnetcore/chart/.helmignore
// ../../../../packs/dotnetcore/chart/Chart.yaml
// ../../../../packs/dotnetcore/chart/templates/NOTES.txt
// ../../../../packs/dotnetcore/chart/templates/_helpers.tpl
// ../../../../packs/dotnetcore/chart/templates/deployment.yaml
// ../../../../packs/dotnetcore/chart/templates/ingress.yaml
// ../../../../packs/dotnetcore/chart/templates/service.yaml
// ../../../../packs/dotnetcore/chart/values.yaml
// ../../../../packs/dotnetcore/detect
// ../../../../packs/golang/.dockerignore
// ../../../../packs/golang/Dockerfile
// ../../../../packs/golang/NOTICE
// ../../../../packs/golang/chart/.helmignore
// ../../../../packs/golang/chart/Chart.yaml
// ../../../../packs/golang/chart/templates/NOTES.txt
// ../../../../packs/golang/chart/templates/_helpers.tpl
// ../../../../packs/golang/chart/templates/deployment.yaml
// ../../../../packs/golang/chart/templates/ingress.yaml
// ../../../../packs/golang/chart/templates/service.yaml
// ../../../../packs/golang/chart/values.yaml
// ../../../../packs/golang/detect
// ../../../../packs/gradle/.dockerignore
// ../../../../packs/gradle/Dockerfile
// ../../../../packs/gradle/NOTICE
// ../../../../packs/gradle/chart/.helmignore
// ../../../../packs/gradle/chart/Chart.yaml
// ../../../../packs/gradle/chart/templates/NOTES.txt
// ../../../../packs/gradle/chart/templates/_helpers.tpl
// ../../../../packs/gradle/chart/templates/deployment.yaml
// ../../../../packs/gradle/chart/templates/ingress.yaml
// ../../../../packs/gradle/chart/templates/service.yaml
// ../../../../packs/gradle/chart/values.yaml
// ../../../../packs/gradle/detect
// ../../../../packs/maven/.dockerignore
// ../../../../packs/maven/Dockerfile
// ../../../../packs/maven/NOTICE
// ../../../../packs/maven/chart/.helmignore
// ../../../../packs/maven/chart/Chart.yaml
// ../../../../packs/maven/chart/templates/NOTES.txt
// ../../../../packs/maven/chart/templates/_helpers.tpl
// ../../../../packs/maven/chart/templates/deployment.yaml
// ../../../../packs/maven/chart/templates/ingress.yaml
// ../../../../packs/maven/chart/templates/service.yaml
// ../../../../packs/maven/chart/values.yaml
// ../../../../packs/maven/detect
// ../../../../packs/node/.dockerignore
// ../../../../packs/node/Dockerfile
// ../../../../packs/node/NOTICE
// ../../../../packs/node/chart/.helmignore
// ../../../../packs/node/chart/Chart.yaml
// ../../../../packs/node/chart/templates/NOTES.txt
// ../../../../packs/node/chart/templates/_helpers.tpl
// ../../../../packs/node/chart/templates/deployment.yaml
// ../../../../packs/node/chart/templates/ingress.yaml
// ../../../../packs/node/chart/templates/service.yaml
// ../../../../packs/node/chart/values.yaml
// ../../../../packs/node/detect
// ../../../../packs/php/.dockerignore
// ../../../../packs/php/Dockerfile
// ../../../../packs/php/NOTICE
// ../../../../packs/php/chart/.helmignore
// ../../../../packs/php/chart/Chart.yaml
// ../../../../packs/php/chart/templates/NOTES.txt
// ../../../../packs/php/chart/templates/_helpers.tpl
// ../../../../packs/php/chart/templates/deployment.yaml
// ../../../../packs/php/chart/templates/ingress.yaml
// ../../../../packs/php/chart/templates/service.yaml
// ../../../../packs/php/chart/values.yaml
// ../../../../packs/php/detect
// ../../../../packs/python/.dockerignore
// ../../../../packs/python/Dockerfile
// ../../../../packs/python/NOTICE
// ../../../../packs/python/chart/.helmignore
// ../../../../packs/python/chart/Chart.yaml
// ../../../../packs/python/chart/templates/NOTES.txt
// ../../../../packs/python/chart/templates/_helpers.tpl
// ../../../../packs/python/chart/templates/deployment.yaml
// ../../../../packs/python/chart/templates/ingress.yaml
// ../../../../packs/python/chart/templates/service.yaml
// ../../../../packs/python/chart/values.yaml
// ../../../../packs/python/detect
// ../../../../packs/ruby/.dockerignore
// ../../../../packs/ruby/Dockerfile
// ../../../../packs/ruby/NOTICE
// ../../../../packs/ruby/chart/.helmignore
// ../../../../packs/ruby/chart/Chart.yaml
// ../../../../packs/ruby/chart/templates/NOTES.txt
// ../../../../packs/ruby/chart/templates/_helpers.tpl
// ../../../../packs/ruby/chart/templates/deployment.yaml
// ../../../../packs/ruby/chart/templates/ingress.yaml
// ../../../../packs/ruby/chart/templates/service.yaml
// ../../../../packs/ruby/chart/values.yaml
// ../../../../packs/ruby/detect
// DO NOT EDIT!

package generated

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _readmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x51\xc1\x8a\xdb\x30\x14\xbc\xeb\x2b\x06\xda\x43\x0b\x1b\x1b\x7a\xec\x6d\xbb\xdb\x43\x29\x2d\x39\xec\x7d\xf5\x22\x3f\x47\x8f\xc8\x92\x91\x9e\x09\x86\x7c\x7c\x91\x92\xe0\xb4\x15\x18\xec\x79\x33\x7a\xe3\x99\x0f\xf8\xb6\x48\xd0\x9d\x44\xec\xc9\x9d\x8a\x31\x6f\x5e\x0a\x06\xc9\xec\x34\xe5\x15\x2e\x45\x25\x89\x05\x87\x3b\xef\x35\xd3\xa8\x98\x2b\xbb\x33\xe6\xfd\xc7\x88\x35\x2d\xa0\xcc\x90\xa8\x9c\xb9\x28\x0f\x90\x08\x97\x99\x54\xe2\xb1\x8e\x33\xd2\x39\x5e\x35\xef\x4f\x8d\xef\x28\xa2\xc8\x34\x87\xf5\x4a\x64\xa8\x4f\x85\x4d\xe3\x54\x79\x53\x85\xe4\x28\xc0\x7e\xfc\x34\xb4\xa5\x3e\x4d\xfc\xb9\x6f\x14\xbb\x79\xec\x8c\xd9\xdf\x55\xfa\xb7\xfb\xea\x8a\x16\x4d\x13\xa9\x38\x0a\x61\x6d\x1e\xe8\xd8\x1c\x6a\x82\x7a\x06\xcd\x73\x10\x47\x2a\x29\x76\x78\xf3\x6c\xc6\x94\x27\x52\xa4\xf1\xdf\xdb\xa4\x7c\x35\xc6\x5a\x7b\x35\xd9\x1b\xe0\x52\x9f\x1d\xf6\xcf\x2f\x3f\x7f\x3f\xff\xfa\x5e\xbf\x50\xcf\x65\x7b\xdb\xc1\x79\xca\xda\x6f\xc8\x0d\x7e\xa9\x70\xb7\xd2\x14\xfe\x1b\x75\x5d\xf7\x78\xc1\x6b\x72\x27\xce\xa3\x04\x7e\x44\x07\x56\x76\xfa\x88\xdc\x64\x9b\xa7\x2f\x06\xb7\x73\xd9\xd5\x61\xf5\x7e\xcb\xaa\x26\x73\x58\xe2\x10\x78\xc0\x52\x6a\x4d\x76\xa2\x13\xe3\xc8\x91\x33\x29\xdb\x27\x9c\xbd\x38\x8f\xb3\x84\x70\xaf\x88\x70\x90\x48\x79\x45\xe6\x39\x73\xe1\xa8\x2d\x36\xd3\xa2\xe2\xeb\x8f\x82\xe2\x80\xa2\x29\xd7\x46\x49\x6b\x29\x76\x3e\x1d\xfb\xd6\x60\xeb\xae\xbf\xef\x18\x6c\x67\xfe\x04\x00\x00\xff\xff\x90\xe3\xbf\x5b\x81\x02\x00\x00")

func readmeMdBytes() ([]byte, error) {
	return bindataRead(
		_readmeMd,
		"README.md",
	)
}

func readmeMd() (*asset, error) {
	bytes, err := readmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "README.md", size: 641, mode: os.FileMode(420), modTime: time.Unix(1497983755, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dotnetcoreDockerignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xc9\x4f\xce\x4e\x2d\x4a\xcb\xcc\x49\xe5\x4a\x29\x4a\x4c\x2b\xd1\x2b\xc9\xcf\xcd\xe1\x4a\xce\x48\x2c\x2a\xd1\xe7\xf2\xf3\x0f\xf1\x74\x76\xe5\x4a\xca\xcc\xd3\xe7\xca\x4f\xca\xd2\xe7\x02\x04\x00\x00\xff\xff\x56\x7a\x40\x27\x2e\x00\x00\x00")

func dotnetcoreDockerignoreBytes() ([]byte, error) {
	return bindataRead(
		_dotnetcoreDockerignore,
		"dotnetcore/.dockerignore",
	)
}

func dotnetcoreDockerignore() (*asset, error) {
	bytes, err := dotnetcoreDockerignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "dotnetcore/.dockerignore", size: 46, mode: os.FileMode(420), modTime: time.Unix(1498077074, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dotnetcoreDockerfile = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x90\x51\x4b\xc3\x30\x14\x46\xdf\xfb\x2b\xae\x30\xd9\x56\x48\xe2\xde\xa4\x9b\x03\xd1\x09\x43\x6c\x47\x9d\xe8\x70\x32\xb2\xf4\xd6\x45\xd2\x24\x34\x37\xa0\x88\xff\x5d\x9c\x4e\x9d\xbe\x9e\x2f\x9c\x5c\xce\x45\x59\x5c\x41\xa3\x55\xeb\x82\xab\x49\xc8\xe0\x2d\x92\x72\x2d\xb2\x75\xd4\xa6\xca\x06\x7c\x90\xdc\x16\xe5\xe5\xf9\xb4\x04\x21\xbd\x4f\x26\x77\xb3\xe2\x7a\x02\xc7\x47\xc9\x59\x31\x5b\x00\x07\x9e\x94\x37\x39\x54\x8e\x2c\x12\xb4\x18\xc8\xb5\xf8\x1b\xf9\xb8\x36\x3a\x6c\x80\x31\x17\xc9\x47\x02\xe1\x22\x09\x60\x4c\x39\x5b\xeb\xc7\xd8\x4a\xd2\xce\x42\x89\x06\x65\x40\x10\x8d\x7c\x56\x3e\x2a\x17\x2d\x6d\x35\x01\x2b\x60\x16\xba\x21\xe3\xe9\xe8\x34\x04\x6c\xd6\xe6\x25\x97\x0d\x8e\x97\x3d\x9e\x2e\xfb\x23\xb1\x07\x79\x9a\x2d\x07\x99\xef\x42\xca\x55\xf0\xad\x7b\x82\x31\xac\x56\xf2\xeb\x89\x95\xcd\xe7\x71\xba\x86\x7b\x38\x00\x16\xfe\x8c\xf0\x30\x04\xda\xa0\x85\x5a\x1b\xfc\x00\x27\x9d\x9e\x09\xdf\xb2\xfe\x10\x50\x6d\x1c\x74\x5e\x77\xfb\x21\x4f\xdf\xfe\x7d\x31\x84\x5a\xff\x64\x73\x91\x92\x49\x3e\x2f\x17\xb3\x62\x9a\xcf\x77\x5d\xb6\x19\x3a\x3d\x25\x69\x1b\x56\xec\x1b\xfa\xbc\x32\x26\x79\x0f\x00\x00\xff\xff\xca\x74\x96\x2b\x9e\x01\x00\x00")

func dotnetcoreDockerfileBytes() ([]byte, error) {
	return bindataRead(
		_dotnetcoreDockerfile,
		"dotnetcore/Dockerfile",
	)
}

func dotnetcoreDockerfile() (*asset, error) {
	bytes, err := dotnetcoreDockerfileBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "dotnetcore/Dockerfile", size: 414, mode: os.FileMode(420), modTime: time.Unix(1498077074, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dotnetcoreNotice = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x51\x4d\x8f\xe3\x26\x18\xbe\xfb\x57\x3c\x9a\xd3\xae\x84\xa6\x1f\x97\x4a\x7b\x63\x6c\x12\xa3\x3a\x10\x01\xd9\x34\x47\x62\x93\x31\x95\x63\x22\x83\x3b\x9a\x7f\x5f\x41\xb2\x9d\x9d\x9e\x2c\xf3\xbe\xcf\xe7\xbb\xe3\x06\x9d\xef\xdd\x1c\xdd\xb7\xaa\xaa\xc3\xed\x7d\xf1\xaf\x63\xc2\x97\xfa\x2b\x7e\xff\xf5\xb7\x3f\x50\x4f\x61\x1d\xce\x36\x3a\xe8\x30\xad\xc9\x87\x39\x12\xe8\x65\xaa\xaa\xbd\x5b\xae\x3e\x46\x1f\x66\xf8\x88\xd1\x2d\xee\xfc\x8e\xd7\xc5\xce\xc9\x0d\x04\x97\xc5\x39\x84\x0b\xfa\xd1\x2e\xaf\x8e\x20\x05\xd8\xf9\x1d\x37\xb7\xc4\x30\x23\x9c\x93\xf5\xb3\x9f\x5f\x61\xd1\x87\xdb\x7b\xde\x4c\xa3\x8f\x88\xe1\x92\xde\xec\xe2\x60\xe7\x01\x36\xc6\xd0\x7b\x9b\xdc\x80\x21\xf4\xeb\xd5\xcd\xc9\x66\x07\xb8\xf8\xc9\x45\x7c\x49\xa3\xc3\x93\x7e\x20\x9e\xbe\x16\x91\xc1\xd9\x09\x7e\x46\x9e\xfd\x18\xe1\xcd\xa7\x31\xac\x09\x8b\x8b\x69\xf1\x7d\xe6\x20\xf0\x73\x3f\xad\x43\xf6\xf0\x63\x3c\xf9\xab\x7f\x28\x64\x78\x69\x22\x66\xd2\x35\x3a\x52\x7c\x12\x5c\xc3\xe0\x2f\xf9\xeb\x4a\xac\xdb\x7a\x9e\x7c\x1c\x09\x06\x9f\xa9\xcf\x6b\x72\x04\x31\x3f\x96\x4e\x49\xce\xf1\x4b\x58\x10\xdd\x34\x65\x06\xef\xe2\x3d\xeb\x87\xbb\xb2\x93\x55\x6e\xb9\xd0\xf4\xa8\xa8\xe8\xbe\x8d\xe1\xfa\x39\x89\x8f\xb8\xac\xcb\xec\xe3\xe8\x0a\x66\x08\x88\xa1\x28\xfe\xed\xfa\x94\x5f\xf2\xfa\x25\x4c\x53\x78\xcb\xd1\xfa\x30\x0f\xbe\x5c\xed\x5b\x55\x99\xd1\xc1\x9e\xc3\x3f\xae\x64\xb9\x1f\x7a\x0e\xc9\xf7\xf7\xba\xcb\x01\x6e\x1f\x57\x7d\x8c\xe2\x68\xa7\x09\x67\xf7\x28\xcc\x0d\xb9\x5e\xfb\x53\x9c\x25\xcb\xc7\x64\xe7\xe4\xed\x84\x5b\x58\x8a\xde\xff\x63\x3e\x57\x95\x69\x19\xb4\xdc\x98\x23\x55\x0c\x5c\x63\xaf\xe4\x77\xde\xb0\x06\x4f\x54\x83\xeb\x27\x82\x23\x37\xad\x3c\x18\x1c\xa9\x52\x54\x98\x13\xe4\x06\x54\x9c\xf0\x27\x17\x0d\x01\xfb\x6b\xaf\x98\xd6\x90\x0a\x7c\xb7\xef\x38\x6b\x08\xb8\xa8\xbb\x43\xc3\xc5\x16\x2f\x07\x03\x21\x0d\x3a\xbe\xe3\x86\x35\x30\x12\x59\xf0\x41\xc5\x99\xce\x64\x3b\xa6\xea\x96\x0a\x43\x5f\x78\xc7\xcd\x89\x60\xc3\x8d\xc8\x9c\x1b\xa9\x40\xb1\xa7\xca\xf0\xfa\xd0\x51\x85\xfd\x41\xed\xa5\x66\xa0\xa2\x81\x90\x82\x8b\x8d\xe2\x62\xcb\x76\x4c\x98\x67\x70\x01\x21\xc1\xbe\x33\x61\xa0\x5b\xda\x75\x45\x8a\x1e\x4c\x2b\x55\xf1\x57\xcb\xfd\x49\xf1\x6d\x6b\xd0\xca\xae\x61\x4a\xe3\x85\xa1\xe3\xf4\xa5\x63\x77\x29\x71\x42\xdd\x51\xbe\x23\x68\xe8\x8e\x6e\x59\x41\x49\xd3\x32\x55\xd6\x1e\xee\x8e\x2d\x2b\x4f\x5c\x80\x0a\xd0\xda\x70\x29\x72\x8c\x5a\x0a\xa3\x68\x6d\x08\x8c\x54\xe6\x3f\xe8\x91\x6b\x46\x40\x15\xd7\xb9\x90\x8d\x92\x3b\x82\x5c\xa7\xdc\x94\xce\x44\xc6\x09\x76\x67\xc9\x55\xe3\xd3\x45\xa4\x2a\xff\x07\xcd\x3e\xbc\x34\x8c\x76\x5c\x6c\x75\x06\xff\xbc\xfc\x5c\xfd\x1b\x00\x00\xff\xff\x5a\xfb\xde\x69\x3a\x04\x00\x00")

func dotnetcoreNoticeBytes() ([]byte, error) {
	return bindataRead(
		_dotnetcoreNotice,
		"dotnetcore/NOTICE",
	)
}

func dotnetcoreNotice() (*asset, error) {
	bytes, err := dotnetcoreNoticeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "dotnetcore/NOTICE", size: 1082, mode: os.FileMode(420), modTime: time.Unix(1498077074, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dotnetcoreChartHelmignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x8e\xc1\x6a\x23\x31\x0c\x86\xef\x7a\x8a\x7f\x99\xcb\xee\xb0\x78\x1e\x22\xd9\xc3\x9e\x5a\x48\xc9\xb5\x78\x66\x14\x5b\x89\x47\x36\xb6\x26\x69\x7b\xe8\xb3\x97\x24\x84\xf6\xf2\x81\x3e\x24\xf1\x75\x78\xf6\x66\x5c\xb5\xc1\x32\x24\x68\xae\x8c\x4b\x64\xc5\xb8\x4a\x9a\x45\x03\x8a\x9f\x4e\x3e\x70\x73\xd4\xe1\x25\x4a\x43\x5b\x4b\xc9\xd5\x1a\x5a\xe4\x94\x10\x52\x1e\xb1\x78\x9b\xa2\x68\xf8\x8b\xca\xc9\x9b\x9c\x19\xc5\x5b\xfc\xe1\xbd\xce\xd4\x41\x39\x78\x93\xac\xf8\x5d\x2a\x1f\xe4\x8d\x67\x5c\xc4\x22\x7e\xfd\x71\x78\xd2\xf4\x8e\xac\xb7\xcb\x6b\x12\x0a\x57\x24\x51\x76\xe4\xb6\xbb\xd7\x9d\xe5\xca\xd4\x61\x93\x97\x25\x2b\xf6\x9b\x1d\x66\xa9\x8d\x5c\x10\x1b\x6e\xbc\xe7\x93\x1b\x3f\xea\x70\xe3\x43\xc4\x30\x5c\xf1\x18\xdb\x59\x87\xef\x47\xa3\x9f\x4e\x6b\xc1\x41\x12\x37\xea\x5d\xbb\x14\xea\xdd\xe8\x4f\xd4\x3b\x5b\x0a\xf5\x9f\xd4\x61\xef\xab\xe4\xb5\xe1\xff\xf6\x5f\x23\x57\x6a\x3e\xf2\x64\xe4\x64\x66\x3f\xdc\xf7\x6a\x3e\xd2\x57\x00\x00\x00\xff\xff\xbc\x5b\x94\x77\x4d\x01\x00\x00")

func dotnetcoreChartHelmignoreBytes() ([]byte, error) {
	return bindataRead(
		_dotnetcoreChartHelmignore,
		"dotnetcore/chart/.helmignore",
	)
}

func dotnetcoreChartHelmignore() (*asset, error) {
	bytes, err := dotnetcoreChartHelmignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "dotnetcore/chart/.helmignore", size: 333, mode: os.FileMode(420), modTime: time.Unix(1498077074, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dotnetcoreChartChartYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xca\x4b\xcc\x4d\xb5\x52\x48\xc9\x2f\xc9\x4b\x2d\x49\xce\x2f\x4a\xe5\x02\x04\x00\x00\xff\xff\xe1\x52\x51\x0c\x11\x00\x00\x00")

func dotnetcoreChartChartYamlBytes() ([]byte, error) {
	return bindataRead(
		_dotnetcoreChartChartYaml,
		"dotnetcore/chart/Chart.yaml",
	)
}

func dotnetcoreChartChartYaml() (*asset, error) {
	bytes, err := dotnetcoreChartChartYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "dotnetcore/chart/Chart.yaml", size: 17, mode: os.FileMode(420), modTime: time.Unix(1498077074, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dotnetcoreChartTemplatesNotesTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x92\x51\x8b\xda\x4e\x14\x47\xdf\xf7\x53\xfc\x08\x82\xff\xff\x83\x63\x9f\x85\x7d\x69\x2b\x45\x58\x54\xec\x76\xa1\x94\x52\xae\x93\xab\x4e\x77\x32\x13\x72\x6f\x74\x25\xe4\xbb\x97\x89\xd6\xcd\xda\xb2\x94\xd2\xbc\x65\x42\xce\x1c\xee\xb9\x37\x4d\x33\x82\xdb\xc0\xc6\xa0\xe4\x82\x20\x9b\xc7\x9c\x97\xb1\xd2\x0c\xe6\x81\x7c\xcd\x62\x84\xab\xbd\xb3\x6c\xf4\x58\x32\xda\xf6\x06\xf8\xc0\x0a\xdd\x31\xa8\x2c\xbd\xb3\xa4\x2e\x06\x7c\x5a\xdd\x61\x7d\x44\x55\x87\xe0\xc2\x36\x7d\x16\x86\x8d\x45\x41\x21\x97\xc9\x0d\xc0\x4f\x65\xac\x14\xf3\xc5\xfb\xe9\xb7\xe5\x62\x75\x7f\x3b\xf8\xef\xb1\x5e\xb3\x55\x8f\x2d\x2b\x46\xa3\x40\x05\x4b\x49\x96\xd1\x34\x30\x2b\xf6\x4c\xc2\x66\x7e\x39\x6d\x5b\x8c\x22\xbe\x4b\x0c\x25\xe9\xee\x36\x6b\x8c\x94\x6c\x4d\xa2\xca\x97\x37\x5f\x4d\x38\x9b\xb7\x19\xce\xca\x92\x48\xca\x45\xe9\x49\x19\xd9\xa6\xf6\x3e\x5d\x92\xc1\xa0\x6d\xff\xbf\x72\x9a\x2d\xaf\x8c\x12\x4f\xfe\xca\xcb\x29\x17\x9d\x92\x28\x69\x2d\x86\xf2\xbc\x62\x11\xee\xce\xce\x2f\x6d\xd6\x09\xd8\x5d\xc4\x4e\xb5\x9c\x8c\xc7\x83\xb3\xc6\x64\x70\x99\xd1\xd8\xc7\xad\x0b\x5d\x24\xf6\xc2\x2f\x4b\xdd\x45\xca\xdf\x92\xa7\x60\xb9\xfa\xe7\xb5\x00\xcc\x17\xf7\xd3\x09\x66\x8a\x82\x8e\x50\x7a\x64\x10\x36\x7c\x40\xe1\x42\xad\x2c\xd8\xc4\xaa\xe3\xf6\x3d\x30\x5b\x42\x23\xd6\x0c\xda\x93\xf3\xb4\xf6\x6c\x4e\xb4\xd3\xf3\x39\xd6\xb0\x14\x70\x20\xb5\xbb\xee\xef\xd3\x88\x10\x37\x7d\x9f\x61\xbf\x83\xec\x2d\x46\x87\xd7\x52\x0e\x9f\x53\x7e\x9c\xae\x1e\x66\xef\x7e\x53\xb3\xa3\xfc\x49\xcb\x57\xee\x79\xd1\x79\xd8\xfc\xcc\xeb\x7b\x03\x30\x2e\x6c\x53\xde\x54\xda\x95\xed\xf0\x97\xc8\xcf\x82\x93\xa4\x70\x55\x8d\x9f\x94\xab\x40\x3e\xed\x71\xaa\x77\x29\xdf\x95\x3c\x33\xae\xd5\xd1\xb6\xa6\xc7\x5a\x93\x70\x1e\x0b\x72\x21\x29\x6b\x04\x59\xcb\x22\x38\xc6\xba\xea\x2f\xc1\x09\x1e\xf2\xc4\xfe\x11\x00\x00\xff\xff\x95\xfb\xb4\x1f\x08\x04\x00\x00")

func dotnetcoreChartTemplatesNotesTxtBytes() ([]byte, error) {
	return bindataRead(
		_dotnetcoreChartTemplatesNotesTxt,
		"dotnetcore/chart/templates/NOTES.txt",
	)
}

func dotnetcoreChartTemplatesNotesTxt() (*asset, error) {
	bytes, err := dotnetcoreChartTemplatesNotesTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "dotnetcore/chart/templates/NOTES.txt", size: 1032, mode: os.FileMode(420), modTime: time.Unix(1498077074, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dotnetcoreChartTemplates_helpersTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x90\x41\x6b\xe3\x30\x10\x85\xef\xfe\x15\x0f\xb3\x81\xdd\x80\x9d\xc3\xc2\x1e\x02\x39\x65\x7b\x2a\xa4\xd0\x40\x7b\x56\xac\xa7\x5a\x20\x2b\xae\x34\x0a\x09\x69\xfe\x7b\x91\xdc\x36\x14\x7a\x68\x6f\x83\xf8\xe6\xcd\xd3\x77\x3e\x2f\xe6\x38\xd8\x61\x89\x48\x81\xb1\x8e\x72\x1a\xb9\x1a\x52\x14\xd5\xf5\x5c\x62\xbe\xb8\x5c\xaa\x4c\x55\x37\xc7\x51\x79\x0d\xe9\x09\xaf\x06\x62\x6f\xca\xdc\xf5\x2a\x48\x5b\xbd\x71\x0d\x34\x8d\xf5\x44\x9d\x99\x1a\xcd\xf5\x55\x25\x27\x68\xd7\x05\xdf\xe4\x80\xf6\x41\xb9\xc4\xd8\x66\xf2\xee\xc0\x10\xac\x26\x5e\x20\x21\xf9\x0e\xff\xfe\x96\xd1\x0e\xdb\x64\x8c\x3d\xa2\x6e\xae\x61\xf4\xba\xcc\x53\xaf\x75\xa0\x12\x42\x7d\xdc\x30\xc9\xb9\x13\x9e\x93\x72\xd6\x58\x6a\xa8\x71\x2c\x8d\xdb\xea\x91\x53\x7a\xe1\x25\xdf\xc8\xed\x23\x76\xec\x54\x8a\x44\xdc\x0f\xc4\x6d\xda\x31\x78\x0a\xe3\xf4\x4f\x63\xe9\x74\x84\x0a\x84\xb3\x83\x15\x6a\xc8\x1e\xd2\xdb\x88\xdf\xbb\x53\x71\xf0\x7f\xb3\xcd\xac\xf5\x4f\x88\x23\xbb\x3f\x5f\xe8\xc8\xa5\x3e\x2b\xf9\x55\xd2\x97\xab\xef\xbb\x79\xdf\x1c\x83\xf5\x62\x50\xcf\x62\x33\x8b\x35\xda\x7b\x3a\xaa\xc8\x69\x73\x8a\xfd\x89\xc6\xd7\x00\x00\x00\xff\xff\x34\x01\xd0\x17\x04\x02\x00\x00")

func dotnetcoreChartTemplates_helpersTplBytes() ([]byte, error) {
	return bindataRead(
		_dotnetcoreChartTemplates_helpersTpl,
		"dotnetcore/chart/templates/_helpers.tpl",
	)
}

func dotnetcoreChartTemplates_helpersTpl() (*asset, error) {
	bytes, err := dotnetcoreChartTemplates_helpersTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "dotnetcore/chart/templates/_helpers.tpl", size: 516, mode: os.FileMode(420), modTime: time.Unix(1498077074, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dotnetcoreChartTemplatesDeploymentYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x52\xc1\x8a\xdb\x30\x14\xbc\xfb\x2b\x06\x5f\x4b\x9c\xa6\x87\x1e\x74\xdd\x85\xde\x4a\xa0\xb0\xd0\x53\x79\xb1\xa7\x89\xa8\x2c\x09\xe9\x39\x34\x64\xfd\xef\x45\x89\x37\xb1\x49\xa1\xf4\xb2\x3e\x89\x99\xa7\x99\x79\x63\x49\xb4\x2f\x4c\xd9\x06\x6f\xc0\xdf\x4a\x5f\x8e\x79\x7d\xdc\xec\xa8\xb2\xa9\x7e\x59\xdf\x19\x3c\x33\xba\x70\xea\xe9\xb5\xea\xa9\xd2\x89\x8a\xa9\x00\x2f\x3d\x0d\xce\x67\x28\xfb\xe8\x44\x89\xfa\xe7\xe0\x5c\x81\x6b\x34\x18\xc7\x0a\x70\xb2\xa3\xcb\x65\x1a\x68\x0f\x92\xd4\xa0\x3e\x9f\xd1\x3c\x95\x73\xf3\x55\x7a\x62\x1c\x57\x77\x64\x0a\x83\x57\x24\x46\x27\x2d\x51\x7f\xa8\x51\xff\xa8\x31\x8e\x75\x95\x23\xdb\xa2\x55\x38\xdb\x4a\xbe\xb8\x37\x2f\xe2\x06\xe6\x66\x02\x9f\xc2\xe0\xf5\x6a\xfe\x96\xeb\x6a\x3f\x8f\x5e\xbe\x79\xb4\xf2\x49\x8c\xff\xda\x06\x78\x4b\x70\xd9\x27\x78\x15\xeb\x99\x6e\x22\xab\x7b\x27\xcb\x0d\x6f\x26\xb6\x97\x3d\xa7\x0e\xa6\xdc\x17\xa8\x49\xdc\xdb\xac\xe9\x84\x71\x5c\x3f\x90\x21\xed\xff\x8a\xfb\xab\xba\x79\x20\x54\xf6\x97\xc2\x16\xb6\xdb\xc1\xb9\x6d\x70\xb6\x3d\x2d\x7a\xbb\xde\x88\x37\x72\x1e\x37\x86\xa4\xb3\x8a\x56\xf7\x9d\xb7\xa1\xfc\xcb\x99\x4c\x66\x3a\xda\x96\x8d\xf5\xca\xe4\xc5\x95\x81\xb9\x94\xb3\x47\x7a\xe6\xbc\x4d\x61\xc7\xbb\x24\x70\x50\x8d\x5f\xa8\x73\x08\x88\xa2\x07\x83\xf5\x12\xfb\x5f\x4b\xc0\x7a\xab\x56\xdc\x33\x9d\x9c\xbe\xb1\x0d\xbe\xcb\x06\x9f\x3f\xde\x26\x12\xa5\xb3\xef\x9c\x2a\x31\x87\x21\xb5\xcc\xa6\x2a\xaf\x2d\x7c\x97\xde\xcd\x1e\xf1\x44\xe2\x15\xd6\x77\xf4\x8a\xcd\xa7\x72\xfb\x4f\x00\x00\x00\xff\xff\x9c\xcf\xce\x9b\xa9\x03\x00\x00")

func dotnetcoreChartTemplatesDeploymentYamlBytes() ([]byte, error) {
	return bindataRead(
		_dotnetcoreChartTemplatesDeploymentYaml,
		"dotnetcore/chart/templates/deployment.yaml",
	)
}

func dotnetcoreChartTemplatesDeploymentYaml() (*asset, error) {
	bytes, err := dotnetcoreChartTemplatesDeploymentYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "dotnetcore/chart/templates/deployment.yaml", size: 937, mode: os.FileMode(420), modTime: time.Unix(1498077074, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dotnetcoreChartTemplatesIngressYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x90\xb1\x6a\xf4\x30\x10\x84\x7b\x3f\xc5\xa0\xf6\xe7\x74\x5c\xab\xf6\xaf\xd2\x1c\x21\xc5\xb5\x61\x6d\x4f\x62\x73\xb2\x2c\xb4\xf2\x11\x70\xf4\xee\x41\x3e\x5f\x02\xa9\xd2\xed\x7c\xec\x0e\x1f\x2b\x71\xbc\x30\xe9\x38\x07\x07\x7e\x64\x86\x3a\xea\xf1\x76\x6a\x99\xe5\xd4\x5c\xc7\xd0\x3b\x3c\x85\xf7\x44\xd5\x66\x62\x96\x5e\xb2\xb8\x06\x08\x32\xd1\x61\x5d\x91\x39\x45\x2f\x99\x30\x6f\x8b\xf7\x15\x1b\x58\x94\xd2\x00\x5e\x5a\x7a\xad\xdb\x40\x37\x48\xca\x0e\x66\x5d\x61\xff\xd7\xd9\x9e\x65\x22\x4a\x39\xfc\x90\xdd\x04\x9f\x48\x8c\x5e\x3a\xc2\xfc\x33\x30\xaf\x06\xa5\x98\x46\x23\xbb\xda\x95\x16\xcf\xad\xf4\x80\x61\xd6\xbc\x49\xd8\x17\x7a\x8a\xf2\x51\x6a\x2b\xbb\x88\x5f\xa8\xb6\x15\x65\x3f\x4f\x32\x86\xbb\x15\x30\xe4\x1c\xef\x56\x40\x94\x3c\xe8\x23\x1c\xb6\xe8\x70\xdc\x33\xd0\x4a\x77\x65\xe8\xdd\x37\x00\x94\xe9\x36\x76\x3c\xff\xe1\x01\xbf\x4e\x9e\xe7\xb4\xeb\xee\x6a\x3b\xb7\xf5\xf3\x29\x88\xaf\x0b\xf5\xf2\x2b\x00\x00\xff\xff\x54\x0e\x39\x31\x96\x01\x00\x00")

func dotnetcoreChartTemplatesIngressYamlBytes() ([]byte, error) {
	return bindataRead(
		_dotnetcoreChartTemplatesIngressYaml,
		"dotnetcore/chart/templates/ingress.yaml",
	)
}

func dotnetcoreChartTemplatesIngressYaml() (*asset, error) {
	bytes, err := dotnetcoreChartTemplatesIngressYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "dotnetcore/chart/templates/ingress.yaml", size: 406, mode: os.FileMode(420), modTime: time.Unix(1498077074, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dotnetcoreChartTemplatesServiceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\xcd\x4a\x04\x31\x10\x84\xef\x79\x8a\x22\x57\xd9\x80\xd7\x5c\xf7\x2e\x03\xca\x5e\xa5\xcd\xb6\x3a\x98\x49\x42\xa7\x77\x51\xc6\xbc\xbb\x64\x22\x0a\xfe\xec\xad\xa9\xf4\x97\x2f\x29\x2a\xf3\x81\xa5\xce\x39\x79\x9c\xaf\xcd\xcb\x9c\x8e\x1e\xb7\x2c\xe7\x39\xb0\x59\x58\xe9\x48\x4a\xde\x00\x89\x16\xf6\x58\x57\x28\x2f\x25\x92\x32\xec\xe3\x29\xc6\x1e\x5b\x38\xb4\x66\x80\x48\x0f\x1c\x6b\xdf\x06\xc2\x33\x89\x7a\xd8\x75\x85\xdb\xf7\xd9\xdd\xd0\xc2\x68\x6d\xf7\x9d\x7c\x9a\xf1\x0e\xe1\x12\x29\x30\xec\x95\x85\xbd\xb7\x68\xcd\x9a\x5a\x38\xf4\xbb\xf4\xad\x0c\xb3\x3b\x50\x3c\x71\x75\x75\x3c\xcf\xf5\x83\x21\x2e\x59\x74\xf3\xee\xb6\xf1\xcf\x6d\x7e\x55\x96\x44\x71\xca\xa2\x83\x02\x94\xe4\x89\x75\xfa\x0f\x99\xd3\x6f\xa4\x48\xd6\x1c\x72\xf4\xb8\xdb\x4f\x5b\xf2\xd5\xcc\x4f\x3c\x8d\x0f\x1b\xa0\x72\xe4\xa0\x59\x46\x35\x54\xca\xe5\x26\x3f\x02\x00\x00\xff\xff\xce\x5a\xb0\xc7\x95\x01\x00\x00")

func dotnetcoreChartTemplatesServiceYamlBytes() ([]byte, error) {
	return bindataRead(
		_dotnetcoreChartTemplatesServiceYaml,
		"dotnetcore/chart/templates/service.yaml",
	)
}

func dotnetcoreChartTemplatesServiceYaml() (*asset, error) {
	bytes, err := dotnetcoreChartTemplatesServiceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "dotnetcore/chart/templates/service.yaml", size: 405, mode: os.FileMode(420), modTime: time.Unix(1498077074, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dotnetcoreChartValuesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8f\x31\x6b\xdc\x40\x10\x46\xfb\xfd\x15\x1f\xb8\xb6\xb8\x3b\x70\x30\xdb\x05\xbb\x31\xc4\x41\x45\x9a\x94\x7b\xab\x91\x3c\x64\x57\xb3\x99\x99\x3d\xa2\x7f\x1f\xa4\xa4\x39\x70\xf7\x31\x3c\xde\xf0\x1e\xf0\x4a\x73\xea\xc5\x71\x4b\xa5\x93\x61\x16\x45\xdb\xfc\x43\xd6\x21\x3c\xe0\xc7\x07\x1b\xd8\x90\xf0\xf3\xeb\xfb\xb7\xc7\x59\xb4\x26\x77\x9a\x30\x73\xa1\x1d\x78\xa5\x5c\x92\x12\x6e\x49\x39\x5d\x0b\x19\x5c\x70\x25\xb4\x64\x46\x13\x78\x75\xc1\x26\x5d\xe1\x54\x5b\x49\x4e\x36\x04\xa5\x56\x38\xa7\x17\xe9\xab\x47\x5c\x02\xd7\xb4\x50\x0c\x80\xd2\xc2\xe6\xba\x45\x4c\x92\x7f\x91\x0e\x2c\x01\x10\x5d\x22\x2a\x67\x15\x93\xd9\x03\xb0\xa6\x4a\x11\xc9\xda\x4a\x9e\x45\xe9\xf1\xda\xb9\x4c\x01\xf0\xb4\x44\x9c\x87\x73\x00\x5a\x2f\x65\x94\xc2\x79\x8b\x78\x9b\xbf\x8b\x8f\x4a\x46\xab\x07\x23\xbd\x71\x3e\xde\xfd\xf3\x4c\xe2\xff\x3d\xbb\x61\x6b\x14\xf1\x52\xba\x39\xe9\xdb\x18\x00\xfa\xe3\xa4\x6b\x2a\xa3\xa8\x47\x3c\x9f\x9e\x4f\x01\x7b\xd6\xdd\x31\x28\x99\x74\xcd\x64\xbb\xb7\x70\x65\x3f\x16\x90\x5b\x8f\x38\x1f\xb3\x52\x95\xbd\xed\xf2\xf4\xe5\x9d\x8f\xda\xdf\x9d\xec\x0e\xbc\x3c\x9d\xea\x27\xec\xdf\x00\x00\x00\xff\xff\xec\xe4\x45\x12\xa5\x01\x00\x00")

func dotnetcoreChartValuesYamlBytes() ([]byte, error) {
	return bindataRead(
		_dotnetcoreChartValuesYaml,
		"dotnetcore/chart/values.yaml",
	)
}

func dotnetcoreChartValuesYaml() (*asset, error) {
	bytes, err := dotnetcoreChartValuesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "dotnetcore/chart/values.yaml", size: 421, mode: os.FileMode(420), modTime: time.Unix(1498077074, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dotnetcoreDetect = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcb\x41\x8b\x82\x40\x18\x06\xe0\xfb\xf7\x2b\x5e\x5d\xc1\xdd\x05\x47\x3c\x97\x05\x65\x07\xa1\x22\xb2\xe8\x22\x44\x8e\x9f\x39\x0a\x8e\xcd\x8c\xd1\xcf\x8f\x2e\x5d\x1f\x78\x7e\xbc\x78\xb2\x26\xae\xd4\x10\xf3\xf0\x44\x75\xb3\x2d\xd1\xea\x9c\x6f\xb3\x6b\x96\x1f\xd3\x20\x21\x92\x35\x82\xaf\x10\xa9\x06\x1e\xee\x86\x47\x44\xd1\x63\x52\xec\x10\xce\x0f\x46\x77\x2c\x1d\x8a\xba\x4f\xfd\x9d\x92\x46\x5b\xdd\x38\xb1\xdf\x9c\x44\x51\xf7\xe5\xaf\xb8\x70\x55\xfe\x95\x4b\x7f\x11\xe2\x5f\x48\x3b\x1a\xdd\xcd\xe0\x5a\x1e\x08\x00\xf8\xa5\x1c\x12\x6a\x14\x11\xcb\x56\xe3\x13\xb1\xd6\x86\xe9\x1d\x00\x00\xff\xff\xaf\xac\xb7\xb6\x9f\x00\x00\x00")

func dotnetcoreDetectBytes() ([]byte, error) {
	return bindataRead(
		_dotnetcoreDetect,
		"dotnetcore/detect",
	)
}

func dotnetcoreDetect() (*asset, error) {
	bytes, err := dotnetcoreDetectBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "dotnetcore/detect", size: 159, mode: os.FileMode(420), modTime: time.Unix(1498077074, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangDockerignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xc9\x4f\xce\x4e\x2d\x4a\xcb\xcc\x49\xe5\x4a\x29\x4a\x4c\x2b\xd1\x2b\xc9\xcf\xcd\xe1\x4a\xce\x48\x2c\x2a\xd1\xe7\xf2\xf3\x0f\xf1\x74\x76\xe5\x02\x04\x00\x00\xff\xff\x18\xba\x47\x9a\x24\x00\x00\x00")

func golangDockerignoreBytes() ([]byte, error) {
	return bindataRead(
		_golangDockerignore,
		"golang/.dockerignore",
	)
}

func golangDockerignore() (*asset, error) {
	bytes, err := golangDockerignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang/.dockerignore", size: 36, mode: os.FileMode(420), modTime: time.Unix(1496874162, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangDockerfile = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x0b\xf2\xf7\x55\x48\xcf\xcf\x49\xcc\x4b\xb7\xca\xcf\x4b\x2a\xcd\xcc\x49\xe1\x72\x8d\x08\xf0\x0f\x76\x55\xb0\x30\xb0\x30\xe0\x02\x04\x00\x00\xff\xff\x28\x05\x9c\x37\x20\x00\x00\x00")

func golangDockerfileBytes() ([]byte, error) {
	return bindataRead(
		_golangDockerfile,
		"golang/Dockerfile",
	)
}

func golangDockerfile() (*asset, error) {
	bytes, err := golangDockerfileBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang/Dockerfile", size: 32, mode: os.FileMode(420), modTime: time.Unix(1496874162, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangNotice = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x51\x4f\x8f\xe3\x26\x14\xbf\xfb\x53\xfc\x34\xa7\x5d\x89\x4e\x77\x56\xea\x65\x6f\x8c\x4d\x62\x54\x07\x22\x4c\x36\xcd\x91\xd8\x64\x4c\xeb\x40\x64\x48\x47\xf3\xed\x2b\x48\xb6\xb3\xb3\x27\xcb\xbc\xf7\xfb\xfb\x36\x5c\xa3\x73\x83\xf5\xd1\x7e\xab\xaa\x3a\x5c\xde\x16\xf7\x32\x25\x7c\xaa\x3f\xe3\xeb\x97\xa7\xa7\xdf\xbe\x7e\x79\xfa\x03\xad\x5d\xc2\x3f\x57\x02\xee\x87\xc7\xaa\xda\xda\xe5\xec\x62\x74\xc1\xc3\x45\x4c\x76\xb1\xc7\x37\xbc\x2c\xc6\x27\x3b\x12\x9c\x16\x6b\x11\x4e\x18\x26\xb3\xbc\x58\x82\x14\x60\xfc\x1b\x2e\x76\x89\xc1\x23\x1c\x93\x71\xde\xf9\x17\x18\x0c\xe1\xf2\x96\x37\xd3\xe4\x22\x62\x38\xa5\x57\xb3\x58\x18\x3f\xc2\xc4\x18\x06\x67\x92\x1d\x31\x86\xe1\x7a\xb6\x3e\x99\x94\xf5\x4e\x6e\xb6\x11\x9f\xd2\x64\xf1\xd0\xdf\x11\x0f\x9f\x8b\xc8\x68\xcd\x0c\xe7\x91\x67\x3f\x46\x78\x75\x69\x0a\xd7\x84\xc5\xc6\xb4\xb8\x21\x73\x10\x38\x3f\xcc\xd7\x31\x7b\xf8\x31\x9e\xdd\xd9\xdd\x15\x32\xbc\x54\x10\x33\xe9\x35\x5a\x52\x7c\x12\x9c\xc3\xe8\x4e\xf9\x6b\x4b\xac\xcb\xf5\x38\xbb\x38\x11\x8c\x2e\x53\x1f\xaf\xc9\x12\xc4\xfc\x58\xca\x24\x39\xc7\xef\x61\x41\xb4\xf3\x9c\x19\x9c\x8d\xb7\xac\xef\xee\xca\x4e\x56\xb9\xe4\x42\xd3\xbd\xa2\xa2\xfb\x3a\x85\xf3\xc7\x24\x2e\xe2\x74\x5d\xbc\x8b\x93\x2d\x98\x31\x20\x86\xa2\xf8\xb7\x1d\x52\x7e\xc9\xeb\xa7\x30\xcf\xe1\x35\x47\x1b\x82\x1f\x5d\x4e\x14\xbf\x55\x95\x9e\x2c\xcc\x31\xfc\x6b\x4b\x96\xdb\x85\x7d\x48\x6e\xb8\xd5\x5d\x0e\x70\x79\xbf\xea\x7d\x14\x27\x33\xcf\x38\xda\x7b\x61\x76\xcc\xf5\x9a\x9f\xe2\x2c\x59\x3e\x26\xe3\x93\x33\x33\x2e\x61\x29\x7a\xbf\xc6\x7c\xac\x2a\xdd\x32\xf4\x72\xa5\xf7\x54\x31\xf0\x1e\x5b\x25\xbf\xf3\x86\x35\x78\xa0\x3d\x78\xff\x40\xb0\xe7\xba\x95\x3b\x8d\x3d\x55\x8a\x0a\x7d\x80\x5c\x81\x8a\x03\xfe\xe4\xa2\x21\x60\x7f\x6d\x15\xeb\x7b\x48\x05\xbe\xd9\x76\x9c\x35\x04\x5c\xd4\xdd\xae\xe1\x62\x8d\xe7\x9d\x86\x90\x1a\x1d\xdf\x70\xcd\x1a\x68\x89\x2c\x78\xa7\xe2\xac\xcf\x64\x1b\xa6\xea\x96\x0a\x4d\x9f\x79\xc7\xf5\x81\x60\xc5\xb5\xc8\x9c\x2b\xa9\x40\xb1\xa5\x4a\xf3\x7a\xd7\x51\x85\xed\x4e\x6d\x65\xcf\x40\x45\x03\x21\x05\x17\x2b\xc5\xc5\x9a\x6d\x98\xd0\x8f\xe0\x02\x42\x82\x7d\x67\x42\xa3\x6f\x69\xd7\x15\x29\xba\xd3\xad\x54\xc5\x5f\x2d\xb7\x07\xc5\xd7\xad\x46\x2b\xbb\x86\xa9\x1e\xcf\x0c\x1d\xa7\xcf\x1d\xbb\x49\x89\x03\xea\x8e\xf2\x0d\x41\x43\x37\x74\xcd\x0a\x4a\xea\x96\xa9\xb2\x76\x77\xb7\x6f\x59\x79\xe2\x02\x54\x80\xd6\x9a\x4b\x91\x63\xd4\x52\x68\x45\x6b\x4d\xa0\xa5\xd2\xff\x43\xf7\xbc\x67\x04\x54\xf1\x3e\x17\xb2\x52\x72\x43\x90\xeb\x94\xab\xd2\x99\xc8\x38\xc1\x6e\x2c\xb9\x6a\x7c\xb8\x88\x54\xe5\x7f\xd7\xb3\x77\x2f\x0d\xa3\x1d\x17\xeb\x3e\x83\x7f\x5e\x7e\xac\xfe\x0b\x00\x00\xff\xff\x3e\x88\xe6\xeb\x33\x04\x00\x00")

func golangNoticeBytes() ([]byte, error) {
	return bindataRead(
		_golangNotice,
		"golang/NOTICE",
	)
}

func golangNotice() (*asset, error) {
	bytes, err := golangNoticeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang/NOTICE", size: 1075, mode: os.FileMode(420), modTime: time.Unix(1496874162, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangChartHelmignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x8e\xc1\x6a\x23\x31\x0c\x86\xef\x7a\x8a\x7f\x99\xcb\xee\xb0\x78\x1e\x22\xd9\xc3\x9e\x5a\x48\xc9\xb5\x78\x66\x14\x5b\x89\x47\x36\xb6\x26\x69\x7b\xe8\xb3\x97\x24\x84\xf6\xf2\x81\x3e\x24\xf1\x75\x78\xf6\x66\x5c\xb5\xc1\x32\x24\x68\xae\x8c\x4b\x64\xc5\xb8\x4a\x9a\x45\x03\x8a\x9f\x4e\x3e\x70\x73\xd4\xe1\x25\x4a\x43\x5b\x4b\xc9\xd5\x1a\x5a\xe4\x94\x10\x52\x1e\xb1\x78\x9b\xa2\x68\xf8\x8b\xca\xc9\x9b\x9c\x19\xc5\x5b\xfc\xe1\xbd\xce\xd4\x41\x39\x78\x93\xac\xf8\x5d\x2a\x1f\xe4\x8d\x67\x5c\xc4\x22\x7e\xfd\x71\x78\xd2\xf4\x8e\xac\xb7\xcb\x6b\x12\x0a\x57\x24\x51\x76\xe4\xb6\xbb\xd7\x9d\xe5\xca\xd4\x61\x93\x97\x25\x2b\xf6\x9b\x1d\x66\xa9\x8d\x5c\x10\x1b\x6e\xbc\xe7\x93\x1b\x3f\xea\x70\xe3\x43\xc4\x30\x5c\xf1\x18\xdb\x59\x87\xef\x47\xa3\x9f\x4e\x6b\xc1\x41\x12\x37\xea\x5d\xbb\x14\xea\xdd\xe8\x4f\xd4\x3b\x5b\x0a\xf5\x9f\xd4\x61\xef\xab\xe4\xb5\xe1\xff\xf6\x5f\x23\x57\x6a\x3e\xf2\x64\xe4\x64\x66\x3f\xdc\xf7\x6a\x3e\xd2\x57\x00\x00\x00\xff\xff\xbc\x5b\x94\x77\x4d\x01\x00\x00")

func golangChartHelmignoreBytes() ([]byte, error) {
	return bindataRead(
		_golangChartHelmignore,
		"golang/chart/.helmignore",
	)
}

func golangChartHelmignore() (*asset, error) {
	bytes, err := golangChartHelmignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang/chart/.helmignore", size: 333, mode: os.FileMode(420), modTime: time.Unix(1496874162, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangChartChartYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xca\x4b\xcc\x4d\xb5\x52\x48\xcf\xcf\x49\xcc\x4b\xe7\x02\x04\x00\x00\xff\xff\x80\xbb\xba\x46\x0d\x00\x00\x00")

func golangChartChartYamlBytes() ([]byte, error) {
	return bindataRead(
		_golangChartChartYaml,
		"golang/chart/Chart.yaml",
	)
}

func golangChartChartYaml() (*asset, error) {
	bytes, err := golangChartChartYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang/chart/Chart.yaml", size: 13, mode: os.FileMode(420), modTime: time.Unix(1496874162, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangChartTemplatesNotesTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x92\x51\x8b\xda\x4e\x14\x47\xdf\xf7\x53\xfc\x08\x82\xff\xff\x83\x63\x9f\x85\x7d\x69\x2b\x45\x58\x54\xec\x76\xa1\x94\x52\xae\x93\xab\x4e\x77\x32\x13\x72\x6f\x74\x25\xe4\xbb\x97\x89\xd6\xcd\xda\xb2\x94\xd2\xbc\x65\x42\xce\x1c\xee\xb9\x37\x4d\x33\x82\xdb\xc0\xc6\xa0\xe4\x82\x20\x9b\xc7\x9c\x97\xb1\xd2\x0c\xe6\x81\x7c\xcd\x62\x84\xab\xbd\xb3\x6c\xf4\x58\x32\xda\xf6\x06\xf8\xc0\x0a\xdd\x31\xa8\x2c\xbd\xb3\xa4\x2e\x06\x7c\x5a\xdd\x61\x7d\x44\x55\x87\xe0\xc2\x36\x7d\x16\x86\x8d\x45\x41\x21\x97\xc9\x0d\xc0\x4f\x65\xac\x14\xf3\xc5\xfb\xe9\xb7\xe5\x62\x75\x7f\x3b\xf8\xef\xb1\x5e\xb3\x55\x8f\x2d\x2b\x46\xa3\x40\x05\x4b\x49\x96\xd1\x34\x30\x2b\xf6\x4c\xc2\x66\x7e\x39\x6d\x5b\x8c\x22\xbe\x4b\x0c\x25\xe9\xee\x36\x6b\x8c\x94\x6c\x4d\xa2\xca\x97\x37\x5f\x4d\x38\x9b\xb7\x19\xce\xca\x92\x48\xca\x45\xe9\x49\x19\xd9\xa6\xf6\x3e\x5d\x92\xc1\xa0\x6d\xff\xbf\x72\x9a\x2d\xaf\x8c\x12\x4f\xfe\xca\xcb\x29\x17\x9d\x92\x28\x69\x2d\x86\xf2\xbc\x62\x11\xee\xce\xce\x2f\x6d\xd6\x09\xd8\x5d\xc4\x4e\xb5\x9c\x8c\xc7\x83\xb3\xc6\x64\x70\x99\xd1\xd8\xc7\xad\x0b\x5d\x24\xf6\xc2\x2f\x4b\xdd\x45\xca\xdf\x92\xa7\x60\xb9\xfa\xe7\xb5\x00\xcc\x17\xf7\xd3\x09\x66\x8a\x82\x8e\x50\x7a\x64\x10\x36\x7c\x40\xe1\x42\xad\x2c\xd8\xc4\xaa\xe3\xf6\x3d\x30\x5b\x42\x23\xd6\x0c\xda\x93\xf3\xb4\xf6\x6c\x4e\xb4\xd3\xf3\x39\xd6\xb0\x14\x70\x20\xb5\xbb\xee\xef\xd3\x88\x10\x37\x7d\x9f\x61\xbf\x83\xec\x2d\x46\x87\xd7\x52\x0e\x9f\x53\x7e\x9c\xae\x1e\x66\xef\x7e\x53\xb3\xa3\xfc\x49\xcb\x57\xee\x79\xd1\x79\xd8\xfc\xcc\xeb\x7b\x03\x30\x2e\x6c\x53\xde\x54\xda\x95\xed\xf0\x97\xc8\xcf\x82\x93\xa4\x70\x55\x8d\x9f\x94\xab\x40\x3e\xed\x71\xaa\x77\x29\xdf\x95\x3c\x33\xae\xd5\xd1\xb6\xa6\xc7\x5a\x93\x70\x1e\x0b\x72\x21\x29\x6b\x04\x59\xcb\x22\x38\xc6\xba\xea\x2f\xc1\x09\x1e\xf2\xc4\xfe\x11\x00\x00\xff\xff\x95\xfb\xb4\x1f\x08\x04\x00\x00")

func golangChartTemplatesNotesTxtBytes() ([]byte, error) {
	return bindataRead(
		_golangChartTemplatesNotesTxt,
		"golang/chart/templates/NOTES.txt",
	)
}

func golangChartTemplatesNotesTxt() (*asset, error) {
	bytes, err := golangChartTemplatesNotesTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang/chart/templates/NOTES.txt", size: 1032, mode: os.FileMode(420), modTime: time.Unix(1496874162, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangChartTemplates_helpersTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x90\x41\x6b\xe3\x30\x10\x85\xef\xfe\x15\x0f\xb3\x81\xdd\x80\x9d\xc3\xc2\x1e\x02\x39\x65\x7b\x2a\xa4\xd0\x40\x7b\x56\xac\xa7\x5a\x20\x2b\xae\x34\x0a\x09\x69\xfe\x7b\x91\xdc\x36\x14\x7a\x68\x6f\x83\xf8\xe6\xcd\xd3\x77\x3e\x2f\xe6\x38\xd8\x61\x89\x48\x81\xb1\x8e\x72\x1a\xb9\x1a\x52\x14\xd5\xf5\x5c\x62\xbe\xb8\x5c\xaa\x4c\x55\x37\xc7\x51\x79\x0d\xe9\x09\xaf\x06\x62\x6f\xca\xdc\xf5\x2a\x48\x5b\xbd\x71\x0d\x34\x8d\xf5\x44\x9d\x99\x1a\xcd\xf5\x55\x25\x27\x68\xd7\x05\xdf\xe4\x80\xf6\x41\xb9\xc4\xd8\x66\xf2\xee\xc0\x10\xac\x26\x5e\x20\x21\xf9\x0e\xff\xfe\x96\xd1\x0e\xdb\x64\x8c\x3d\xa2\x6e\xae\x61\xf4\xba\xcc\x53\xaf\x75\xa0\x12\x42\x7d\xdc\x30\xc9\xb9\x13\x9e\x93\x72\xd6\x58\x6a\xa8\x71\x2c\x8d\xdb\xea\x91\x53\x7a\xe1\x25\xdf\xc8\xed\x23\x76\xec\x54\x8a\x44\xdc\x0f\xc4\x6d\xda\x31\x78\x0a\xe3\xf4\x4f\x63\xe9\x74\x84\x0a\x84\xb3\x83\x15\x6a\xc8\x1e\xd2\xdb\x88\xdf\xbb\x53\x71\xf0\x7f\xb3\xcd\xac\xf5\x4f\x88\x23\xbb\x3f\x5f\xe8\xc8\xa5\x3e\x2b\xf9\x55\xd2\x97\xab\xef\xbb\x79\xdf\x1c\x83\xf5\x62\x50\xcf\x62\x33\x8b\x35\xda\x7b\x3a\xaa\xc8\x69\x73\x8a\xfd\x89\xc6\xd7\x00\x00\x00\xff\xff\x34\x01\xd0\x17\x04\x02\x00\x00")

func golangChartTemplates_helpersTplBytes() ([]byte, error) {
	return bindataRead(
		_golangChartTemplates_helpersTpl,
		"golang/chart/templates/_helpers.tpl",
	)
}

func golangChartTemplates_helpersTpl() (*asset, error) {
	bytes, err := golangChartTemplates_helpersTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang/chart/templates/_helpers.tpl", size: 516, mode: os.FileMode(420), modTime: time.Unix(1496874162, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangChartTemplatesDeploymentYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x52\xc1\x8a\xdb\x30\x14\xbc\xfb\x2b\x06\x5d\x4b\x1c\xd2\xa3\xae\x5b\xe8\xad\xe4\xb4\xd0\x53\x79\x71\x5e\x13\x51\x59\x12\xd2\x73\x68\xf0\xea\xdf\x8b\x6c\x6f\x2c\x93\x42\xe9\x65\x75\x12\x33\xd2\xcc\xbc\x91\x28\x98\x57\x8e\xc9\x78\xa7\xc1\xbf\x85\x5d\xd9\xa6\xfd\xed\x70\x62\xa1\x43\xf3\xcb\xb8\xb3\xc6\x17\x0e\xd6\xdf\x7b\x76\xd2\xf4\x2c\x74\x26\x21\xdd\x00\x8e\x7a\xd6\x18\x47\x08\xf7\xc1\x92\x30\xd4\xcf\xc1\xda\x02\x2b\xb4\xc8\xb9\x01\x2c\x9d\xd8\xa6\x72\x1a\xe8\xae\x14\x45\x43\x8d\x23\xda\x97\xb2\x6f\xbf\x51\xcf\xc8\x79\xb7\x22\x4b\x18\xbc\x21\x72\xb0\xd4\x31\xd4\x27\x05\xf5\x43\x21\x67\xd5\xa4\xc0\x5d\xd1\x2a\x9c\xe9\x28\x4d\xee\xed\x2b\xd9\x81\x53\xbb\x80\x2f\x7e\x70\x32\x9b\xbf\xe7\x9a\xed\xeb\xe8\x65\xd5\xd1\xca\xa2\x10\xfe\x35\x0d\xf0\x9e\x60\x9a\xc7\x3b\x21\xe3\x38\x3e\x44\x76\x6b\x27\xdb\x09\x1f\x26\xa6\xa7\x0b\x2f\x1d\x2c\xb9\x27\xa8\x8d\x7c\x31\x49\xe2\x1d\x39\xef\x9f\x48\x1f\x2f\x7f\xc5\xdd\xac\xae\x9f\x08\xa1\xcb\x54\xd8\xc6\xf6\x38\x58\x7b\xf4\xd6\x74\xf7\x4d\x6f\xf3\x8d\xf0\x20\xeb\xb8\xc1\x47\xa9\x2a\xda\xad\x33\x1f\x7d\x79\xcb\x4a\x26\x71\xbc\x99\x8e\x5b\xe3\x84\xa3\x23\x5b\x0e\xd4\x52\xd6\xdc\xd8\x71\x4a\xc7\xe8\x4f\xbc\x4a\x02\x57\x91\xf0\x95\xa5\x86\x80\x40\x72\xd5\xd8\x6f\xb1\xff\xb5\x8c\x4c\x67\xf3\xe1\x9e\xc9\x0f\xb1\xe3\xa4\x9b\xf2\x97\xfc\x77\xea\x6d\xf5\x45\x17\x12\x6f\x30\xee\xcc\x4e\x70\xf8\x5c\x6e\xff\x09\x00\x00\xff\xff\x52\x7b\x20\xc6\x87\x03\x00\x00")

func golangChartTemplatesDeploymentYamlBytes() ([]byte, error) {
	return bindataRead(
		_golangChartTemplatesDeploymentYaml,
		"golang/chart/templates/deployment.yaml",
	)
}

func golangChartTemplatesDeploymentYaml() (*asset, error) {
	bytes, err := golangChartTemplatesDeploymentYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang/chart/templates/deployment.yaml", size: 903, mode: os.FileMode(420), modTime: time.Unix(1496874162, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangChartTemplatesIngressYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x90\xb1\x6a\xf4\x30\x10\x84\x7b\x3f\xc5\xa0\xf6\xe7\x74\x5c\xab\xf6\xaf\xd2\x1c\x21\xc5\xb5\x61\x6d\x4f\x62\x73\xb2\x2c\xb4\xf2\x11\x70\xf4\xee\x41\x3e\x5f\x02\xa9\xd2\xed\x7c\xec\x0e\x1f\x2b\x71\xbc\x30\xe9\x38\x07\x07\x7e\x64\x86\x3a\xea\xf1\x76\x6a\x99\xe5\xd4\x5c\xc7\xd0\x3b\x3c\x85\xf7\x44\xd5\x66\x62\x96\x5e\xb2\xb8\x06\x08\x32\xd1\x61\x5d\x91\x39\x45\x2f\x99\x30\x6f\x8b\xf7\x15\x1b\x58\x94\xd2\x00\x5e\x5a\x7a\xad\xdb\x40\x37\x48\xca\x0e\x66\x5d\x61\xff\xd7\xd9\x9e\x65\x22\x4a\x39\xfc\x90\xdd\x04\x9f\x48\x8c\x5e\x3a\xc2\xfc\x33\x30\xaf\x06\xa5\x98\x46\x23\xbb\xda\x95\x16\xcf\xad\xf4\x80\x61\xd6\xbc\x49\xd8\x17\x7a\x8a\xf2\x51\x6a\x2b\xbb\x88\x5f\xa8\xb6\x15\x65\x3f\x4f\x32\x86\xbb\x15\x30\xe4\x1c\xef\x56\x40\x94\x3c\xe8\x23\x1c\xb6\xe8\x70\xdc\x33\xd0\x4a\x77\x65\xe8\xdd\x37\x00\x94\xe9\x36\x76\x3c\xff\xe1\x01\xbf\x4e\x9e\xe7\xb4\xeb\xee\x6a\x3b\xb7\xf5\xf3\x29\x88\xaf\x0b\xf5\xf2\x2b\x00\x00\xff\xff\x54\x0e\x39\x31\x96\x01\x00\x00")

func golangChartTemplatesIngressYamlBytes() ([]byte, error) {
	return bindataRead(
		_golangChartTemplatesIngressYaml,
		"golang/chart/templates/ingress.yaml",
	)
}

func golangChartTemplatesIngressYaml() (*asset, error) {
	bytes, err := golangChartTemplatesIngressYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang/chart/templates/ingress.yaml", size: 406, mode: os.FileMode(420), modTime: time.Unix(1496874162, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangChartTemplatesServiceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\xcd\x4a\x04\x31\x10\x84\xef\x79\x8a\x22\x57\xd9\x80\xd7\x5c\xf7\x2e\x03\xca\x5e\xa5\xcd\xb6\x3a\x98\x49\x42\xa7\x77\x51\xc6\xbc\xbb\x64\x22\x0a\xfe\xec\xad\xa9\xf4\x97\x2f\x29\x2a\xf3\x81\xa5\xce\x39\x79\x9c\xaf\xcd\xcb\x9c\x8e\x1e\xb7\x2c\xe7\x39\xb0\x59\x58\xe9\x48\x4a\xde\x00\x89\x16\xf6\x58\x57\x28\x2f\x25\x92\x32\xec\xe3\x29\xc6\x1e\x5b\x38\xb4\x66\x80\x48\x0f\x1c\x6b\xdf\x06\xc2\x33\x89\x7a\xd8\x75\x85\xdb\xf7\xd9\xdd\xd0\xc2\x68\x6d\xf7\x9d\x7c\x9a\xf1\x0e\xe1\x12\x29\x30\xec\x95\x85\xbd\xb7\x68\xcd\x9a\x5a\x38\xf4\xbb\xf4\xad\x0c\xb3\x3b\x50\x3c\x71\x75\x75\x3c\xcf\xf5\x83\x21\x2e\x59\x74\xf3\xee\xb6\xf1\xcf\x6d\x7e\x55\x96\x44\x71\xca\xa2\x83\x02\x94\xe4\x89\x75\xfa\x0f\x99\xd3\x6f\xa4\x48\xd6\x1c\x72\xf4\xb8\xdb\x4f\x5b\xf2\xd5\xcc\x4f\x3c\x8d\x0f\x1b\xa0\x72\xe4\xa0\x59\x46\x35\x54\xca\xe5\x26\x3f\x02\x00\x00\xff\xff\xce\x5a\xb0\xc7\x95\x01\x00\x00")

func golangChartTemplatesServiceYamlBytes() ([]byte, error) {
	return bindataRead(
		_golangChartTemplatesServiceYaml,
		"golang/chart/templates/service.yaml",
	)
}

func golangChartTemplatesServiceYaml() (*asset, error) {
	bytes, err := golangChartTemplatesServiceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang/chart/templates/service.yaml", size: 405, mode: os.FileMode(420), modTime: time.Unix(1496874162, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangChartValuesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8f\x31\x8f\xd4\x40\x0c\x85\xfb\xf9\x15\x4f\xba\x9a\x55\xee\xaa\xd5\x74\xe8\xb6\x59\x89\x45\x29\x68\x28\x9d\xc4\x09\x16\x9e\x38\x78\x3c\x2b\xf2\xef\x51\x22\x1a\xa8\xae\xb3\xad\xa7\xcf\xef\x7b\xc1\x8d\x67\x6a\x1a\x78\x92\x36\xae\x98\xcd\xb1\x98\xd2\xba\x5c\xd2\x0b\xbe\xfd\x90\x0a\xa9\x20\x7c\xff\xfc\xf8\xf2\x69\x36\x2f\x14\xc1\x13\x66\x51\x3e\x02\x37\x1e\x95\x9c\xf1\x24\x17\x1a\x94\x2b\xc2\x30\x30\x36\xaa\x95\x27\xc8\x1a\x86\xdd\x9a\x23\xb8\x6c\x4a\xc1\xf5\x92\x9c\x37\x95\x91\xde\xad\xad\x91\xf1\x96\xa4\xd0\xc2\x39\x01\xce\x8b\xd4\xf0\x3d\x63\xb2\xf1\x27\xfb\x45\x2c\x01\xe6\x4b\x86\xca\xe0\xe4\x7b\x02\x56\x2a\x9c\xff\x56\x4c\x40\xd0\x92\x61\xeb\xd0\x44\xa7\x04\x6c\x4d\xb5\x37\x95\x71\xcf\xb8\xcf\x5f\x2d\x7a\xe7\xca\x6b\xa4\xca\xfe\x94\xf1\x7c\xf3\x3f\x61\xdf\x38\xe3\x5d\x5b\x0d\xf6\x7b\x9f\x00\xfe\x1d\xec\x2b\x69\x6f\x1e\x19\xd7\x2e\xe1\x10\xf9\xe7\x74\xed\x92\x73\xb5\xe6\x23\xd7\x83\xa9\x52\x24\xce\x09\x18\xb7\x96\xf1\xda\x75\xe5\xdc\x0a\x17\x3b\x94\x5e\xdf\xae\x0f\x39\x25\x7f\x35\xae\x1f\xc9\xfe\x09\x00\x00\xff\xff\x24\x04\x82\x1f\x9c\x01\x00\x00")

func golangChartValuesYamlBytes() ([]byte, error) {
	return bindataRead(
		_golangChartValuesYaml,
		"golang/chart/values.yaml",
	)
}

func golangChartValuesYaml() (*asset, error) {
	bytes, err := golangChartValuesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang/chart/values.yaml", size: 412, mode: os.FileMode(420), modTime: time.Unix(1497118555, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangDetect = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8d\xdd\x6a\x83\x40\x10\x46\xef\xe7\x29\xbe\xae\x92\x9f\x82\x8a\xf7\x6d\x6f\xf3\x1c\xea\xce\xea\x14\x33\x6b\xdd\x35\x3f\xd4\xbe\x7b\xd1\xa6\x84\x40\xae\x3e\xe6\x70\x0e\x43\xc9\x4b\x31\x85\xb1\xa8\x45\x0b\xd6\x13\xea\x2a\x74\x94\x60\x39\x2d\x47\x6e\x22\xde\xea\x49\x7a\x9b\x59\x19\x3f\x28\x70\x44\xc6\x44\x2b\x7a\x4f\x77\x8d\x85\x49\xcb\xc2\x60\xb3\xc1\x70\xb6\x7b\x22\x71\x88\x1c\x22\x32\x07\x93\x7e\xaf\xde\x4f\x71\xf0\x96\x87\x70\x9b\xfc\x33\x78\x35\x98\x67\x24\x68\x57\x42\xc0\x93\xe8\xc4\x6a\xfd\x78\x9b\xc7\xe8\x8f\x3d\xcf\xda\x5e\x2c\xe7\xd7\xea\xd8\xff\xeb\x0b\xb8\xbb\x0a\x93\xee\x9c\xa8\xbd\x37\x06\x59\xbc\x0e\x0c\x87\x4c\xab\x23\x63\xfb\x9a\xb7\x7e\x8b\x19\x81\x2d\xca\xaf\xbd\x41\x02\xe7\x27\xb5\xa8\xe0\xa4\x67\x9c\x25\x76\xa8\x90\xb7\x1e\x7c\x89\xac\x41\xbc\x52\xec\x58\x09\xe0\xa6\xf3\x38\x78\xe2\x3e\x2c\x5f\xf9\x22\x11\x25\x39\xa1\xdf\x00\x00\x00\xff\xff\xb8\xb6\xfd\x76\x6a\x01\x00\x00")

func golangDetectBytes() ([]byte, error) {
	return bindataRead(
		_golangDetect,
		"golang/detect",
	)
}

func golangDetect() (*asset, error) {
	bytes, err := golangDetectBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang/detect", size: 362, mode: os.FileMode(493), modTime: time.Unix(1497118555, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gradleDockerignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xc9\x4f\xce\x4e\x2d\x4a\xcb\xcc\x49\xe5\x4a\x29\x4a\x4c\x2b\xd1\x2b\xc9\xcf\xcd\xe1\x4a\xce\x48\x2c\x2a\xd1\xe7\xf2\xf3\x0f\xf1\x74\x76\xe5\x02\x04\x00\x00\xff\xff\x18\xba\x47\x9a\x24\x00\x00\x00")

func gradleDockerignoreBytes() ([]byte, error) {
	return bindataRead(
		_gradleDockerignore,
		"gradle/.dockerignore",
	)
}

func gradleDockerignore() (*asset, error) {
	bytes, err := gradleDockerignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gradle/.dockerignore", size: 36, mode: os.FileMode(420), modTime: time.Unix(1498144407, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gradleDockerfile = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\xcd\xcd\x4a\xc4\x30\x10\x07\xf0\xfb\x3c\xc5\x90\xb3\x49\x0e\xba\xba\x2c\x78\x71\xbb\xc2\xa2\x6b\x4a\xa4\xa8\x88\x87\x69\x13\x4b\xd3\xd8\x84\x58\x7d\x7e\x69\x0c\xdd\xd3\x30\xff\xf9\xf8\xdd\x6b\x75\xc2\x3e\x91\xf1\x76\x77\x29\x36\xdc\x99\x71\xcb\xc9\xc7\x61\xb2\x48\xdf\x78\xd7\x1c\x1f\x2b\x80\xbd\xaa\xdf\x50\xa0\x8c\x29\x38\xdb\xcd\xa0\x9b\xa7\x72\x84\xbc\x5d\x63\xd9\xfe\x0c\xde\x88\x32\xe8\xbc\xa5\x09\x73\x04\x90\x99\x10\xed\xe4\xcc\xb8\xdb\x2e\x4a\x41\xe0\xf0\x5a\xab\xe7\x03\x5e\x6d\xae\x6f\xfe\x19\xce\x3f\x53\xf8\xba\xcd\xf2\xf9\xf5\x4c\xa9\xb7\xb3\xa4\x18\x85\xa3\x84\x32\xc4\xb5\x81\x17\xa5\x1f\xaa\xa3\xce\x21\xec\x4f\x15\xbe\x33\x47\xbf\xc4\x2e\x90\x71\x47\x69\xa9\x65\x95\x7d\xc0\x5f\x00\x00\x00\xff\xff\x4f\x0a\x51\xb4\xf1\x00\x00\x00")

func gradleDockerfileBytes() ([]byte, error) {
	return bindataRead(
		_gradleDockerfile,
		"gradle/Dockerfile",
	)
}

func gradleDockerfile() (*asset, error) {
	bytes, err := gradleDockerfileBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gradle/Dockerfile", size: 241, mode: os.FileMode(420), modTime: time.Unix(1498144407, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gradleNotice = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x51\x4f\x8f\xe3\x26\x14\xbf\xfb\x53\xfc\x34\xa7\x5d\x89\x4e\x77\x56\xea\x65\x6f\x8c\x4d\x62\x54\x07\x22\x4c\x36\xcd\x91\xd8\x64\x4c\xeb\x40\x64\x48\x47\xf3\xed\x2b\x48\xb6\xb3\xb3\x27\xcb\xbc\xf7\xfb\xfb\x36\x5c\xa3\x73\x83\xf5\xd1\x7e\xab\xaa\x3a\x5c\xde\x16\xf7\x32\x25\x7c\xaa\x3f\xe3\xeb\x97\xa7\xa7\xdf\xbe\x7e\x79\xfa\x03\xad\x5d\xc2\x3f\x57\x02\xee\x87\xc7\xaa\xda\xda\xe5\xec\x62\x74\xc1\xc3\x45\x4c\x76\xb1\xc7\x37\xbc\x2c\xc6\x27\x3b\x12\x9c\x16\x6b\x11\x4e\x18\x26\xb3\xbc\x58\x82\x14\x60\xfc\x1b\x2e\x76\x89\xc1\x23\x1c\x93\x71\xde\xf9\x17\x18\x0c\xe1\xf2\x96\x37\xd3\xe4\x22\x62\x38\xa5\x57\xb3\x58\x18\x3f\xc2\xc4\x18\x06\x67\x92\x1d\x31\x86\xe1\x7a\xb6\x3e\x99\x94\xf5\x4e\x6e\xb6\x11\x9f\xd2\x64\xf1\xd0\xdf\x11\x0f\x9f\x8b\xc8\x68\xcd\x0c\xe7\x91\x67\x3f\x46\x78\x75\x69\x0a\xd7\x84\xc5\xc6\xb4\xb8\x21\x73\x10\x38\x3f\xcc\xd7\x31\x7b\xf8\x31\x9e\xdd\xd9\xdd\x15\x32\xbc\x54\x10\x33\xe9\x35\x5a\x52\x7c\x12\x9c\xc3\xe8\x4e\xf9\x6b\x4b\xac\xcb\xf5\x38\xbb\x38\x11\x8c\x2e\x53\x1f\xaf\xc9\x12\xc4\xfc\x58\xca\x24\x39\xc7\xef\x61\x41\xb4\xf3\x9c\x19\x9c\x8d\xb7\xac\xef\xee\xca\x4e\x56\xb9\xe4\x42\xd3\xbd\xa2\xa2\xfb\x3a\x85\xf3\xc7\x24\x2e\xe2\x74\x5d\xbc\x8b\x93\x2d\x98\x31\x20\x86\xa2\xf8\xb7\x1d\x52\x7e\xc9\xeb\xa7\x30\xcf\xe1\x35\x47\x1b\x82\x1f\x5d\x4e\x14\xbf\x55\x95\x9e\x2c\xcc\x31\xfc\x6b\x4b\x96\xdb\x85\x7d\x48\x6e\xb8\xd5\x5d\x0e\x70\x79\xbf\xea\x7d\x14\x27\x33\xcf\x38\xda\x7b\x61\x76\xcc\xf5\x9a\x9f\xe2\x2c\x59\x3e\x26\xe3\x93\x33\x33\x2e\x61\x29\x7a\xbf\xc6\x7c\xac\x2a\xdd\x32\xf4\x72\xa5\xf7\x54\x31\xf0\x1e\x5b\x25\xbf\xf3\x86\x35\x78\xa0\x3d\x78\xff\x40\xb0\xe7\xba\x95\x3b\x8d\x3d\x55\x8a\x0a\x7d\x80\x5c\x81\x8a\x03\xfe\xe4\xa2\x21\x60\x7f\x6d\x15\xeb\x7b\x48\x05\xbe\xd9\x76\x9c\x35\x04\x5c\xd4\xdd\xae\xe1\x62\x8d\xe7\x9d\x86\x90\x1a\x1d\xdf\x70\xcd\x1a\x68\x89\x2c\x78\xa7\xe2\xac\xcf\x64\x1b\xa6\xea\x96\x0a\x4d\x9f\x79\xc7\xf5\x81\x60\xc5\xb5\xc8\x9c\x2b\xa9\x40\xb1\xa5\x4a\xf3\x7a\xd7\x51\x85\xed\x4e\x6d\x65\xcf\x40\x45\x03\x21\x05\x17\x2b\xc5\xc5\x9a\x6d\x98\xd0\x8f\xe0\x02\x42\x82\x7d\x67\x42\xa3\x6f\x69\xd7\x15\x29\xba\xd3\xad\x54\xc5\x5f\x2d\xb7\x07\xc5\xd7\xad\x46\x2b\xbb\x86\xa9\x1e\xcf\x0c\x1d\xa7\xcf\x1d\xbb\x49\x89\x03\xea\x8e\xf2\x0d\x41\x43\x37\x74\xcd\x0a\x4a\xea\x96\xa9\xb2\x76\x77\xb7\x6f\x59\x79\xe2\x02\x54\x80\xd6\x9a\x4b\x91\x63\xd4\x52\x68\x45\x6b\x4d\xa0\xa5\xd2\xff\x43\xf7\xbc\x67\x04\x54\xf1\x3e\x17\xb2\x52\x72\x43\x90\xeb\x94\xab\xd2\x99\xc8\x38\xc1\x6e\x2c\xb9\x6a\x7c\xb8\x88\x54\xe5\x7f\xd7\xb3\x77\x2f\x0d\xa3\x1d\x17\xeb\x3e\x83\x7f\x5e\x7e\xac\xfe\x0b\x00\x00\xff\xff\x3e\x88\xe6\xeb\x33\x04\x00\x00")

func gradleNoticeBytes() ([]byte, error) {
	return bindataRead(
		_gradleNotice,
		"gradle/NOTICE",
	)
}

func gradleNotice() (*asset, error) {
	bytes, err := gradleNoticeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gradle/NOTICE", size: 1075, mode: os.FileMode(420), modTime: time.Unix(1498144407, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gradleChartHelmignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x8e\xc1\x6a\x23\x31\x0c\x86\xef\x7a\x8a\x7f\x99\xcb\xee\xb0\x78\x1e\x22\xd9\xc3\x9e\x5a\x48\xc9\xb5\x78\x66\x14\x5b\x89\x47\x36\xb6\x26\x69\x7b\xe8\xb3\x97\x24\x84\xf6\xf2\x81\x3e\x24\xf1\x75\x78\xf6\x66\x5c\xb5\xc1\x32\x24\x68\xae\x8c\x4b\x64\xc5\xb8\x4a\x9a\x45\x03\x8a\x9f\x4e\x3e\x70\x73\xd4\xe1\x25\x4a\x43\x5b\x4b\xc9\xd5\x1a\x5a\xe4\x94\x10\x52\x1e\xb1\x78\x9b\xa2\x68\xf8\x8b\xca\xc9\x9b\x9c\x19\xc5\x5b\xfc\xe1\xbd\xce\xd4\x41\x39\x78\x93\xac\xf8\x5d\x2a\x1f\xe4\x8d\x67\x5c\xc4\x22\x7e\xfd\x71\x78\xd2\xf4\x8e\xac\xb7\xcb\x6b\x12\x0a\x57\x24\x51\x76\xe4\xb6\xbb\xd7\x9d\xe5\xca\xd4\x61\x93\x97\x25\x2b\xf6\x9b\x1d\x66\xa9\x8d\x5c\x10\x1b\x6e\xbc\xe7\x93\x1b\x3f\xea\x70\xe3\x43\xc4\x30\x5c\xf1\x18\xdb\x59\x87\xef\x47\xa3\x9f\x4e\x6b\xc1\x41\x12\x37\xea\x5d\xbb\x14\xea\xdd\xe8\x4f\xd4\x3b\x5b\x0a\xf5\x9f\xd4\x61\xef\xab\xe4\xb5\xe1\xff\xf6\x5f\x23\x57\x6a\x3e\xf2\x64\xe4\x64\x66\x3f\xdc\xf7\x6a\x3e\xd2\x57\x00\x00\x00\xff\xff\xbc\x5b\x94\x77\x4d\x01\x00\x00")

func gradleChartHelmignoreBytes() ([]byte, error) {
	return bindataRead(
		_gradleChartHelmignore,
		"gradle/chart/.helmignore",
	)
}

func gradleChartHelmignore() (*asset, error) {
	bytes, err := gradleChartHelmignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gradle/chart/.helmignore", size: 333, mode: os.FileMode(420), modTime: time.Unix(1498144407, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gradleChartChartYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xca\x4b\xcc\x4d\xb5\x52\x48\x2f\x4a\x4c\xc9\x49\xe5\x02\x04\x00\x00\xff\xff\xaa\x28\x0e\x07\x0d\x00\x00\x00")

func gradleChartChartYamlBytes() ([]byte, error) {
	return bindataRead(
		_gradleChartChartYaml,
		"gradle/chart/Chart.yaml",
	)
}

func gradleChartChartYaml() (*asset, error) {
	bytes, err := gradleChartChartYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gradle/chart/Chart.yaml", size: 13, mode: os.FileMode(420), modTime: time.Unix(1498144407, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gradleChartTemplatesNotesTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x92\x51\x8b\xda\x4e\x14\x47\xdf\xf7\x53\xfc\x08\x82\xff\xff\x83\x63\x9f\x85\x7d\x69\x2b\x45\x58\x54\xec\x76\xa1\x94\x52\xae\x93\xab\x4e\x77\x32\x13\x72\x6f\x74\x25\xe4\xbb\x97\x89\xd6\xcd\xda\xb2\x94\xd2\xbc\x65\x42\xce\x1c\xee\xb9\x37\x4d\x33\x82\xdb\xc0\xc6\xa0\xe4\x82\x20\x9b\xc7\x9c\x97\xb1\xd2\x0c\xe6\x81\x7c\xcd\x62\x84\xab\xbd\xb3\x6c\xf4\x58\x32\xda\xf6\x06\xf8\xc0\x0a\xdd\x31\xa8\x2c\xbd\xb3\xa4\x2e\x06\x7c\x5a\xdd\x61\x7d\x44\x55\x87\xe0\xc2\x36\x7d\x16\x86\x8d\x45\x41\x21\x97\xc9\x0d\xc0\x4f\x65\xac\x14\xf3\xc5\xfb\xe9\xb7\xe5\x62\x75\x7f\x3b\xf8\xef\xb1\x5e\xb3\x55\x8f\x2d\x2b\x46\xa3\x40\x05\x4b\x49\x96\xd1\x34\x30\x2b\xf6\x4c\xc2\x66\x7e\x39\x6d\x5b\x8c\x22\xbe\x4b\x0c\x25\xe9\xee\x36\x6b\x8c\x94\x6c\x4d\xa2\xca\x97\x37\x5f\x4d\x38\x9b\xb7\x19\xce\xca\x92\x48\xca\x45\xe9\x49\x19\xd9\xa6\xf6\x3e\x5d\x92\xc1\xa0\x6d\xff\xbf\x72\x9a\x2d\xaf\x8c\x12\x4f\xfe\xca\xcb\x29\x17\x9d\x92\x28\x69\x2d\x86\xf2\xbc\x62\x11\xee\xce\xce\x2f\x6d\xd6\x09\xd8\x5d\xc4\x4e\xb5\x9c\x8c\xc7\x83\xb3\xc6\x64\x70\x99\xd1\xd8\xc7\xad\x0b\x5d\x24\xf6\xc2\x2f\x4b\xdd\x45\xca\xdf\x92\xa7\x60\xb9\xfa\xe7\xb5\x00\xcc\x17\xf7\xd3\x09\x66\x8a\x82\x8e\x50\x7a\x64\x10\x36\x7c\x40\xe1\x42\xad\x2c\xd8\xc4\xaa\xe3\xf6\x3d\x30\x5b\x42\x23\xd6\x0c\xda\x93\xf3\xb4\xf6\x6c\x4e\xb4\xd3\xf3\x39\xd6\xb0\x14\x70\x20\xb5\xbb\xee\xef\xd3\x88\x10\x37\x7d\x9f\x61\xbf\x83\xec\x2d\x46\x87\xd7\x52\x0e\x9f\x53\x7e\x9c\xae\x1e\x66\xef\x7e\x53\xb3\xa3\xfc\x49\xcb\x57\xee\x79\xd1\x79\xd8\xfc\xcc\xeb\x7b\x03\x30\x2e\x6c\x53\xde\x54\xda\x95\xed\xf0\x97\xc8\xcf\x82\x93\xa4\x70\x55\x8d\x9f\x94\xab\x40\x3e\xed\x71\xaa\x77\x29\xdf\x95\x3c\x33\xae\xd5\xd1\xb6\xa6\xc7\x5a\x93\x70\x1e\x0b\x72\x21\x29\x6b\x04\x59\xcb\x22\x38\xc6\xba\xea\x2f\xc1\x09\x1e\xf2\xc4\xfe\x11\x00\x00\xff\xff\x95\xfb\xb4\x1f\x08\x04\x00\x00")

func gradleChartTemplatesNotesTxtBytes() ([]byte, error) {
	return bindataRead(
		_gradleChartTemplatesNotesTxt,
		"gradle/chart/templates/NOTES.txt",
	)
}

func gradleChartTemplatesNotesTxt() (*asset, error) {
	bytes, err := gradleChartTemplatesNotesTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gradle/chart/templates/NOTES.txt", size: 1032, mode: os.FileMode(420), modTime: time.Unix(1498144407, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gradleChartTemplates_helpersTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x90\x41\x6b\xe3\x30\x10\x85\xef\xfe\x15\x0f\xb3\x81\xdd\x80\x9d\xc3\xc2\x1e\x02\x39\x65\x7b\x2a\xa4\xd0\x40\x7b\x56\xac\xa7\x5a\x20\x2b\xae\x34\x0a\x09\x69\xfe\x7b\x91\xdc\x36\x14\x7a\x68\x6f\x83\xf8\xe6\xcd\xd3\x77\x3e\x2f\xe6\x38\xd8\x61\x89\x48\x81\xb1\x8e\x72\x1a\xb9\x1a\x52\x14\xd5\xf5\x5c\x62\xbe\xb8\x5c\xaa\x4c\x55\x37\xc7\x51\x79\x0d\xe9\x09\xaf\x06\x62\x6f\xca\xdc\xf5\x2a\x48\x5b\xbd\x71\x0d\x34\x8d\xf5\x44\x9d\x99\x1a\xcd\xf5\x55\x25\x27\x68\xd7\x05\xdf\xe4\x80\xf6\x41\xb9\xc4\xd8\x66\xf2\xee\xc0\x10\xac\x26\x5e\x20\x21\xf9\x0e\xff\xfe\x96\xd1\x0e\xdb\x64\x8c\x3d\xa2\x6e\xae\x61\xf4\xba\xcc\x53\xaf\x75\xa0\x12\x42\x7d\xdc\x30\xc9\xb9\x13\x9e\x93\x72\xd6\x58\x6a\xa8\x71\x2c\x8d\xdb\xea\x91\x53\x7a\xe1\x25\xdf\xc8\xed\x23\x76\xec\x54\x8a\x44\xdc\x0f\xc4\x6d\xda\x31\x78\x0a\xe3\xf4\x4f\x63\xe9\x74\x84\x0a\x84\xb3\x83\x15\x6a\xc8\x1e\xd2\xdb\x88\xdf\xbb\x53\x71\xf0\x7f\xb3\xcd\xac\xf5\x4f\x88\x23\xbb\x3f\x5f\xe8\xc8\xa5\x3e\x2b\xf9\x55\xd2\x97\xab\xef\xbb\x79\xdf\x1c\x83\xf5\x62\x50\xcf\x62\x33\x8b\x35\xda\x7b\x3a\xaa\xc8\x69\x73\x8a\xfd\x89\xc6\xd7\x00\x00\x00\xff\xff\x34\x01\xd0\x17\x04\x02\x00\x00")

func gradleChartTemplates_helpersTplBytes() ([]byte, error) {
	return bindataRead(
		_gradleChartTemplates_helpersTpl,
		"gradle/chart/templates/_helpers.tpl",
	)
}

func gradleChartTemplates_helpersTpl() (*asset, error) {
	bytes, err := gradleChartTemplates_helpersTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gradle/chart/templates/_helpers.tpl", size: 516, mode: os.FileMode(420), modTime: time.Unix(1498144407, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gradleChartTemplatesDeploymentYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x52\xc1\x8a\xdb\x30\x14\xbc\xfb\x2b\x06\x5d\x4b\x1c\xd2\xa3\xae\x5b\xe8\xad\xe4\xb4\xd0\x53\x79\x71\x5e\x13\x51\x59\x12\xd2\x73\x68\xf0\xea\xdf\x8b\x6c\x6f\x2c\x93\x42\xe9\x65\x75\x12\x33\xd2\xcc\xbc\x91\x28\x98\x57\x8e\xc9\x78\xa7\xc1\xbf\x85\x5d\xd9\xa6\xfd\xed\x70\x62\xa1\x43\xf3\xcb\xb8\xb3\xc6\x17\x0e\xd6\xdf\x7b\x76\xd2\xf4\x2c\x74\x26\x21\xdd\x00\x8e\x7a\xd6\x18\x47\x08\xf7\xc1\x92\x30\xd4\xcf\xc1\xda\x02\x2b\xb4\xc8\xb9\x01\x2c\x9d\xd8\xa6\x72\x1a\xe8\xae\x14\x45\x43\x8d\x23\xda\x97\xb2\x6f\xbf\x51\xcf\xc8\x79\xb7\x22\x4b\x18\xbc\x21\x72\xb0\xd4\x31\xd4\x27\x05\xf5\x43\x21\x67\xd5\xa4\xc0\x5d\xd1\x2a\x9c\xe9\x28\x4d\xee\xed\x2b\xd9\x81\x53\xbb\x80\x2f\x7e\x70\x32\x9b\xbf\xe7\x9a\xed\xeb\xe8\x65\xd5\xd1\xca\xa2\x10\xfe\x35\x0d\xf0\x9e\x60\x9a\xc7\x3b\x21\xe3\x38\x3e\x44\x76\x6b\x27\xdb\x09\x1f\x26\xa6\xa7\x0b\x2f\x1d\x2c\xb9\x27\xa8\x8d\x7c\x31\x49\xe2\x1d\x39\xef\x9f\x48\x1f\x2f\x7f\xc5\xdd\xac\xae\x9f\x08\xa1\xcb\x54\xd8\xc6\xf6\x38\x58\x7b\xf4\xd6\x74\xf7\x4d\x6f\xf3\x8d\xf0\x20\xeb\xb8\xc1\x47\xa9\x2a\xda\xad\x33\x1f\x7d\x79\xcb\x4a\x26\x71\xbc\x99\x8e\x5b\xe3\x84\xa3\x23\x5b\x0e\xd4\x52\xd6\xdc\xd8\x71\x4a\xc7\xe8\x4f\xbc\x4a\x02\x57\x91\xf0\x95\xa5\x86\x80\x40\x72\xd5\xd8\x6f\xb1\xff\xb5\x8c\x4c\x67\xf3\xe1\x9e\xc9\x0f\xb1\xe3\xa4\x9b\xf2\x97\xfc\x77\xea\x6d\xf5\x45\x17\x12\x6f\x30\xee\xcc\x4e\x70\xf8\x5c\x6e\xff\x09\x00\x00\xff\xff\x52\x7b\x20\xc6\x87\x03\x00\x00")

func gradleChartTemplatesDeploymentYamlBytes() ([]byte, error) {
	return bindataRead(
		_gradleChartTemplatesDeploymentYaml,
		"gradle/chart/templates/deployment.yaml",
	)
}

func gradleChartTemplatesDeploymentYaml() (*asset, error) {
	bytes, err := gradleChartTemplatesDeploymentYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gradle/chart/templates/deployment.yaml", size: 903, mode: os.FileMode(420), modTime: time.Unix(1498144407, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gradleChartTemplatesIngressYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x90\xb1\x6a\xf4\x30\x10\x84\x7b\x3f\xc5\xa0\xf6\xe7\x74\x5c\xab\xf6\xaf\xd2\x1c\x21\xc5\xb5\x61\x6d\x4f\x62\x73\xb2\x2c\xb4\xf2\x11\x70\xf4\xee\x41\x3e\x5f\x02\xa9\xd2\xed\x7c\xec\x0e\x1f\x2b\x71\xbc\x30\xe9\x38\x07\x07\x7e\x64\x86\x3a\xea\xf1\x76\x6a\x99\xe5\xd4\x5c\xc7\xd0\x3b\x3c\x85\xf7\x44\xd5\x66\x62\x96\x5e\xb2\xb8\x06\x08\x32\xd1\x61\x5d\x91\x39\x45\x2f\x99\x30\x6f\x8b\xf7\x15\x1b\x58\x94\xd2\x00\x5e\x5a\x7a\xad\xdb\x40\x37\x48\xca\x0e\x66\x5d\x61\xff\xd7\xd9\x9e\x65\x22\x4a\x39\xfc\x90\xdd\x04\x9f\x48\x8c\x5e\x3a\xc2\xfc\x33\x30\xaf\x06\xa5\x98\x46\x23\xbb\xda\x95\x16\xcf\xad\xf4\x80\x61\xd6\xbc\x49\xd8\x17\x7a\x8a\xf2\x51\x6a\x2b\xbb\x88\x5f\xa8\xb6\x15\x65\x3f\x4f\x32\x86\xbb\x15\x30\xe4\x1c\xef\x56\x40\x94\x3c\xe8\x23\x1c\xb6\xe8\x70\xdc\x33\xd0\x4a\x77\x65\xe8\xdd\x37\x00\x94\xe9\x36\x76\x3c\xff\xe1\x01\xbf\x4e\x9e\xe7\xb4\xeb\xee\x6a\x3b\xb7\xf5\xf3\x29\x88\xaf\x0b\xf5\xf2\x2b\x00\x00\xff\xff\x54\x0e\x39\x31\x96\x01\x00\x00")

func gradleChartTemplatesIngressYamlBytes() ([]byte, error) {
	return bindataRead(
		_gradleChartTemplatesIngressYaml,
		"gradle/chart/templates/ingress.yaml",
	)
}

func gradleChartTemplatesIngressYaml() (*asset, error) {
	bytes, err := gradleChartTemplatesIngressYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gradle/chart/templates/ingress.yaml", size: 406, mode: os.FileMode(420), modTime: time.Unix(1498144407, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gradleChartTemplatesServiceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\xcd\x4a\x04\x31\x10\x84\xef\x79\x8a\x22\x57\xd9\x80\xd7\x5c\xf7\x2e\x03\xca\x5e\xa5\xcd\xb6\x3a\x98\x49\x42\xa7\x77\x51\xc6\xbc\xbb\x64\x22\x0a\xfe\xec\xad\xa9\xf4\x97\x2f\x29\x2a\xf3\x81\xa5\xce\x39\x79\x9c\xaf\xcd\xcb\x9c\x8e\x1e\xb7\x2c\xe7\x39\xb0\x59\x58\xe9\x48\x4a\xde\x00\x89\x16\xf6\x58\x57\x28\x2f\x25\x92\x32\xec\xe3\x29\xc6\x1e\x5b\x38\xb4\x66\x80\x48\x0f\x1c\x6b\xdf\x06\xc2\x33\x89\x7a\xd8\x75\x85\xdb\xf7\xd9\xdd\xd0\xc2\x68\x6d\xf7\x9d\x7c\x9a\xf1\x0e\xe1\x12\x29\x30\xec\x95\x85\xbd\xb7\x68\xcd\x9a\x5a\x38\xf4\xbb\xf4\xad\x0c\xb3\x3b\x50\x3c\x71\x75\x75\x3c\xcf\xf5\x83\x21\x2e\x59\x74\xf3\xee\xb6\xf1\xcf\x6d\x7e\x55\x96\x44\x71\xca\xa2\x83\x02\x94\xe4\x89\x75\xfa\x0f\x99\xd3\x6f\xa4\x48\xd6\x1c\x72\xf4\xb8\xdb\x4f\x5b\xf2\xd5\xcc\x4f\x3c\x8d\x0f\x1b\xa0\x72\xe4\xa0\x59\x46\x35\x54\xca\xe5\x26\x3f\x02\x00\x00\xff\xff\xce\x5a\xb0\xc7\x95\x01\x00\x00")

func gradleChartTemplatesServiceYamlBytes() ([]byte, error) {
	return bindataRead(
		_gradleChartTemplatesServiceYaml,
		"gradle/chart/templates/service.yaml",
	)
}

func gradleChartTemplatesServiceYaml() (*asset, error) {
	bytes, err := gradleChartTemplatesServiceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gradle/chart/templates/service.yaml", size: 405, mode: os.FileMode(420), modTime: time.Unix(1498144407, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gradleChartValuesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8f\x3f\x8b\x1b\x41\x0c\x47\xfb\xf9\x14\x3f\xb8\xda\xc6\x77\xe4\x8f\x99\x2e\xdc\x41\x38\xc8\x05\x17\x69\x52\xca\xbb\x5a\x47\xb6\x66\x35\xd1\x68\x4c\xf6\xdb\x87\xdd\x34\x29\xaf\x93\xc4\xe3\x89\xf7\x80\x17\x9e\xa8\x6b\xe0\x4e\xda\xb9\x61\x32\xc7\x57\xa7\x51\x19\xd5\xed\xca\x43\xb4\x7d\x7a\xc0\x8f\x5f\xd2\x20\x0d\x84\x9f\x5f\xde\xbe\xed\x26\xf3\x42\x11\x3c\x62\x12\xe5\x15\x78\xe1\x41\xc9\x19\x77\x72\xa1\xb3\x72\x43\x18\xce\x8c\x4a\xad\xf1\x08\x99\xc3\xb0\x58\x77\x04\x97\xaa\x14\xdc\xf6\xc9\xb9\xaa\x0c\xf4\x6c\x7d\x8e\x8c\xa7\x24\x85\x2e\x9c\x13\xe0\x7c\x91\x16\xbe\x64\x8c\x36\xdc\xd8\xf7\x62\x09\x30\xbf\x64\xa8\x9c\x9d\x7c\x49\xc0\x4c\x85\x33\xac\xf2\x7c\x1d\x6f\x09\x08\xba\x64\x1c\x77\xd7\xf1\xb6\x23\xad\x32\x73\x02\x6a\x57\x3d\x99\xca\xb0\x64\xbc\x4e\xdf\x2d\x4e\xce\x8d\xe7\x48\x8d\xfd\x2e\xc3\xf6\xec\x9f\xe7\x4a\x77\x5a\x25\x4b\xe5\x8c\x67\xed\x2d\xd8\x5f\x4f\x09\xe0\x3f\xc1\x3e\x93\x9e\xcc\x23\xe3\x78\x48\x58\x63\xfe\x3b\x7d\xf8\xf8\xe9\x73\x72\x6e\xd6\x7d\xe0\xb6\x1a\x55\x8a\xc4\x36\x01\x43\xed\x19\x8f\x87\x43\xd9\xb6\xc2\xc5\xd6\xac\xc7\xa7\xe3\x9b\x6c\xa1\xbf\x3b\xb7\xf7\xb0\x7f\x03\x00\x00\xff\xff\x06\x8b\xb1\x45\xa9\x01\x00\x00")

func gradleChartValuesYamlBytes() ([]byte, error) {
	return bindataRead(
		_gradleChartValuesYaml,
		"gradle/chart/values.yaml",
	)
}

func gradleChartValuesYaml() (*asset, error) {
	bytes, err := gradleChartValuesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gradle/chart/values.yaml", size: 425, mode: os.FileMode(420), modTime: time.Unix(1498144407, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gradleDetect = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\xc9\xb1\x0a\xc2\x30\x14\x85\xe1\xfd\x3e\xc5\xb1\x95\x6e\x35\x76\x56\x5c\x7d\x08\x71\x68\xcc\x89\xb9\x10\x52\xc8\x6d\xc4\xc7\x17\x0b\xe2\xf8\xff\x5f\xbf\x73\xcd\xaa\xf3\x5a\x1c\xcb\x0b\x7e\xb6\x24\x3d\xbe\xd9\x8c\x38\xfb\xa6\x39\x8c\x41\xeb\x45\x44\x23\x6e\x18\x23\xf6\x93\xdb\xf6\xe1\x59\xe7\x90\x89\xfb\x09\x6b\x62\x11\x00\x7c\xa4\x05\xdd\x75\xfb\x1d\x86\x01\x7c\xeb\x8a\xa3\x30\x1b\xe5\xc7\x65\xf9\xd3\x24\x51\xe5\x13\x00\x00\xff\xff\x33\x4d\x27\xca\x84\x00\x00\x00")

func gradleDetectBytes() ([]byte, error) {
	return bindataRead(
		_gradleDetect,
		"gradle/detect",
	)
}

func gradleDetect() (*asset, error) {
	bytes, err := gradleDetectBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gradle/detect", size: 132, mode: os.FileMode(493), modTime: time.Unix(1498144407, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mavenDockerignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xc9\x4f\xce\x4e\x2d\x4a\xcb\xcc\x49\xe5\x4a\x29\x4a\x4c\x2b\xd1\x2b\xc9\xcf\xcd\xe1\x4a\xce\x48\x2c\x2a\xd1\xe7\xf2\xf3\x0f\xf1\x74\x76\xe5\x02\x04\x00\x00\xff\xff\x18\xba\x47\x9a\x24\x00\x00\x00")

func mavenDockerignoreBytes() ([]byte, error) {
	return bindataRead(
		_mavenDockerignore,
		"maven/.dockerignore",
	)
}

func mavenDockerignore() (*asset, error) {
	bytes, err := mavenDockerignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "maven/.dockerignore", size: 36, mode: os.FileMode(420), modTime: time.Unix(1498144407, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mavenDockerfile = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\xcd\xcf\x4a\xc4\x30\x10\x06\xf0\xfb\x3c\xc5\x90\xb3\x49\x0e\xba\xba\x2c\x78\x71\xbb\xc2\xa2\x6b\x96\x48\x51\x11\x0f\x43\x9b\x16\xd3\xe6\x0f\x69\x2d\x3e\xbe\x34\x95\x85\x9e\x66\xe6\x63\xf8\x7e\x8f\x5a\x9d\xd0\xd1\x64\xfc\xee\x5a\x6c\xb8\xad\x3b\xbe\xe5\xd4\xc7\x6f\x6f\x90\x06\x7c\x28\x8f\xcf\x05\xc0\x5e\x9d\x3f\x50\xa0\xfc\x19\x92\x1c\x52\x25\x29\x46\xd0\xe5\x0b\xba\xc9\x23\x6f\x56\xb9\x8c\xc1\x89\x5f\xd7\x63\xd5\x1b\xf2\x18\xa9\xea\xa8\x35\x00\x19\x0a\xd1\x78\x5b\x77\xbb\x6d\x86\x16\x06\x0e\xef\x67\xf5\x7a\xc0\x9b\xcd\xed\xdd\x02\x71\xde\xa4\xe0\xee\xb3\xbd\xee\x1e\x29\xb5\x66\x9c\x57\x61\x29\xa1\x0c\xf1\x72\xc0\x9b\xd2\x4f\xc5\x51\xe7\x10\xf6\xa7\x02\x3f\x99\xa5\x89\xd8\x15\x32\x6e\x29\xcd\xf3\xff\x95\x7d\xc1\x5f\x00\x00\x00\xff\xff\xd5\xf8\x06\x75\xf7\x00\x00\x00")

func mavenDockerfileBytes() ([]byte, error) {
	return bindataRead(
		_mavenDockerfile,
		"maven/Dockerfile",
	)
}

func mavenDockerfile() (*asset, error) {
	bytes, err := mavenDockerfileBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "maven/Dockerfile", size: 247, mode: os.FileMode(420), modTime: time.Unix(1498144407, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mavenNotice = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x51\x4f\x8f\xe3\x26\x14\xbf\xfb\x53\xfc\x34\xa7\x5d\x89\x4e\x77\x56\xea\x65\x6f\x8c\x4d\x62\x54\x07\x22\x4c\x36\xcd\x91\xd8\x64\x4c\xeb\x40\x64\x48\x47\xf3\xed\x2b\x48\xb6\xb3\xb3\x27\xcb\xbc\xf7\xfb\xfb\x36\x5c\xa3\x73\x83\xf5\xd1\x7e\xab\xaa\x3a\x5c\xde\x16\xf7\x32\x25\x7c\xaa\x3f\xe3\xeb\x97\xa7\xa7\xdf\xbe\x7e\x79\xfa\x03\xad\x5d\xc2\x3f\x57\x02\xee\x87\xc7\xaa\xda\xda\xe5\xec\x62\x74\xc1\xc3\x45\x4c\x76\xb1\xc7\x37\xbc\x2c\xc6\x27\x3b\x12\x9c\x16\x6b\x11\x4e\x18\x26\xb3\xbc\x58\x82\x14\x60\xfc\x1b\x2e\x76\x89\xc1\x23\x1c\x93\x71\xde\xf9\x17\x18\x0c\xe1\xf2\x96\x37\xd3\xe4\x22\x62\x38\xa5\x57\xb3\x58\x18\x3f\xc2\xc4\x18\x06\x67\x92\x1d\x31\x86\xe1\x7a\xb6\x3e\x99\x94\xf5\x4e\x6e\xb6\x11\x9f\xd2\x64\xf1\xd0\xdf\x11\x0f\x9f\x8b\xc8\x68\xcd\x0c\xe7\x91\x67\x3f\x46\x78\x75\x69\x0a\xd7\x84\xc5\xc6\xb4\xb8\x21\x73\x10\x38\x3f\xcc\xd7\x31\x7b\xf8\x31\x9e\xdd\xd9\xdd\x15\x32\xbc\x54\x10\x33\xe9\x35\x5a\x52\x7c\x12\x9c\xc3\xe8\x4e\xf9\x6b\x4b\xac\xcb\xf5\x38\xbb\x38\x11\x8c\x2e\x53\x1f\xaf\xc9\x12\xc4\xfc\x58\xca\x24\x39\xc7\xef\x61\x41\xb4\xf3\x9c\x19\x9c\x8d\xb7\xac\xef\xee\xca\x4e\x56\xb9\xe4\x42\xd3\xbd\xa2\xa2\xfb\x3a\x85\xf3\xc7\x24\x2e\xe2\x74\x5d\xbc\x8b\x93\x2d\x98\x31\x20\x86\xa2\xf8\xb7\x1d\x52\x7e\xc9\xeb\xa7\x30\xcf\xe1\x35\x47\x1b\x82\x1f\x5d\x4e\x14\xbf\x55\x95\x9e\x2c\xcc\x31\xfc\x6b\x4b\x96\xdb\x85\x7d\x48\x6e\xb8\xd5\x5d\x0e\x70\x79\xbf\xea\x7d\x14\x27\x33\xcf\x38\xda\x7b\x61\x76\xcc\xf5\x9a\x9f\xe2\x2c\x59\x3e\x26\xe3\x93\x33\x33\x2e\x61\x29\x7a\xbf\xc6\x7c\xac\x2a\xdd\x32\xf4\x72\xa5\xf7\x54\x31\xf0\x1e\x5b\x25\xbf\xf3\x86\x35\x78\xa0\x3d\x78\xff\x40\xb0\xe7\xba\x95\x3b\x8d\x3d\x55\x8a\x0a\x7d\x80\x5c\x81\x8a\x03\xfe\xe4\xa2\x21\x60\x7f\x6d\x15\xeb\x7b\x48\x05\xbe\xd9\x76\x9c\x35\x04\x5c\xd4\xdd\xae\xe1\x62\x8d\xe7\x9d\x86\x90\x1a\x1d\xdf\x70\xcd\x1a\x68\x89\x2c\x78\xa7\xe2\xac\xcf\x64\x1b\xa6\xea\x96\x0a\x4d\x9f\x79\xc7\xf5\x81\x60\xc5\xb5\xc8\x9c\x2b\xa9\x40\xb1\xa5\x4a\xf3\x7a\xd7\x51\x85\xed\x4e\x6d\x65\xcf\x40\x45\x03\x21\x05\x17\x2b\xc5\xc5\x9a\x6d\x98\xd0\x8f\xe0\x02\x42\x82\x7d\x67\x42\xa3\x6f\x69\xd7\x15\x29\xba\xd3\xad\x54\xc5\x5f\x2d\xb7\x07\xc5\xd7\xad\x46\x2b\xbb\x86\xa9\x1e\xcf\x0c\x1d\xa7\xcf\x1d\xbb\x49\x89\x03\xea\x8e\xf2\x0d\x41\x43\x37\x74\xcd\x0a\x4a\xea\x96\xa9\xb2\x76\x77\xb7\x6f\x59\x79\xe2\x02\x54\x80\xd6\x9a\x4b\x91\x63\xd4\x52\x68\x45\x6b\x4d\xa0\xa5\xd2\xff\x43\xf7\xbc\x67\x04\x54\xf1\x3e\x17\xb2\x52\x72\x43\x90\xeb\x94\xab\xd2\x99\xc8\x38\xc1\x6e\x2c\xb9\x6a\x7c\xb8\x88\x54\xe5\x7f\xd7\xb3\x77\x2f\x0d\xa3\x1d\x17\xeb\x3e\x83\x7f\x5e\x7e\xac\xfe\x0b\x00\x00\xff\xff\x3e\x88\xe6\xeb\x33\x04\x00\x00")

func mavenNoticeBytes() ([]byte, error) {
	return bindataRead(
		_mavenNotice,
		"maven/NOTICE",
	)
}

func mavenNotice() (*asset, error) {
	bytes, err := mavenNoticeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "maven/NOTICE", size: 1075, mode: os.FileMode(420), modTime: time.Unix(1498144407, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mavenChartHelmignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x8e\xc1\x6a\x23\x31\x0c\x86\xef\x7a\x8a\x7f\x99\xcb\xee\xb0\x78\x1e\x22\xd9\xc3\x9e\x5a\x48\xc9\xb5\x78\x66\x14\x5b\x89\x47\x36\xb6\x26\x69\x7b\xe8\xb3\x97\x24\x84\xf6\xf2\x81\x3e\x24\xf1\x75\x78\xf6\x66\x5c\xb5\xc1\x32\x24\x68\xae\x8c\x4b\x64\xc5\xb8\x4a\x9a\x45\x03\x8a\x9f\x4e\x3e\x70\x73\xd4\xe1\x25\x4a\x43\x5b\x4b\xc9\xd5\x1a\x5a\xe4\x94\x10\x52\x1e\xb1\x78\x9b\xa2\x68\xf8\x8b\xca\xc9\x9b\x9c\x19\xc5\x5b\xfc\xe1\xbd\xce\xd4\x41\x39\x78\x93\xac\xf8\x5d\x2a\x1f\xe4\x8d\x67\x5c\xc4\x22\x7e\xfd\x71\x78\xd2\xf4\x8e\xac\xb7\xcb\x6b\x12\x0a\x57\x24\x51\x76\xe4\xb6\xbb\xd7\x9d\xe5\xca\xd4\x61\x93\x97\x25\x2b\xf6\x9b\x1d\x66\xa9\x8d\x5c\x10\x1b\x6e\xbc\xe7\x93\x1b\x3f\xea\x70\xe3\x43\xc4\x30\x5c\xf1\x18\xdb\x59\x87\xef\x47\xa3\x9f\x4e\x6b\xc1\x41\x12\x37\xea\x5d\xbb\x14\xea\xdd\xe8\x4f\xd4\x3b\x5b\x0a\xf5\x9f\xd4\x61\xef\xab\xe4\xb5\xe1\xff\xf6\x5f\x23\x57\x6a\x3e\xf2\x64\xe4\x64\x66\x3f\xdc\xf7\x6a\x3e\xd2\x57\x00\x00\x00\xff\xff\xbc\x5b\x94\x77\x4d\x01\x00\x00")

func mavenChartHelmignoreBytes() ([]byte, error) {
	return bindataRead(
		_mavenChartHelmignore,
		"maven/chart/.helmignore",
	)
}

func mavenChartHelmignore() (*asset, error) {
	bytes, err := mavenChartHelmignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "maven/chart/.helmignore", size: 333, mode: os.FileMode(420), modTime: time.Unix(1498144407, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mavenChartChartYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xca\x4b\xcc\x4d\xb5\x52\xc8\x4d\x2c\x4b\xcd\xe3\x02\x04\x00\x00\xff\xff\x46\x16\x6a\xc9\x0c\x00\x00\x00")

func mavenChartChartYamlBytes() ([]byte, error) {
	return bindataRead(
		_mavenChartChartYaml,
		"maven/chart/Chart.yaml",
	)
}

func mavenChartChartYaml() (*asset, error) {
	bytes, err := mavenChartChartYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "maven/chart/Chart.yaml", size: 12, mode: os.FileMode(420), modTime: time.Unix(1498144407, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mavenChartTemplatesNotesTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x92\x51\x8b\xda\x4e\x14\x47\xdf\xf7\x53\xfc\x08\x82\xff\xff\x83\x63\x9f\x85\x7d\x69\x2b\x45\x58\x54\xec\x76\xa1\x94\x52\xae\x93\xab\x4e\x77\x32\x13\x72\x6f\x74\x25\xe4\xbb\x97\x89\xd6\xcd\xda\xb2\x94\xd2\xbc\x65\x42\xce\x1c\xee\xb9\x37\x4d\x33\x82\xdb\xc0\xc6\xa0\xe4\x82\x20\x9b\xc7\x9c\x97\xb1\xd2\x0c\xe6\x81\x7c\xcd\x62\x84\xab\xbd\xb3\x6c\xf4\x58\x32\xda\xf6\x06\xf8\xc0\x0a\xdd\x31\xa8\x2c\xbd\xb3\xa4\x2e\x06\x7c\x5a\xdd\x61\x7d\x44\x55\x87\xe0\xc2\x36\x7d\x16\x86\x8d\x45\x41\x21\x97\xc9\x0d\xc0\x4f\x65\xac\x14\xf3\xc5\xfb\xe9\xb7\xe5\x62\x75\x7f\x3b\xf8\xef\xb1\x5e\xb3\x55\x8f\x2d\x2b\x46\xa3\x40\x05\x4b\x49\x96\xd1\x34\x30\x2b\xf6\x4c\xc2\x66\x7e\x39\x6d\x5b\x8c\x22\xbe\x4b\x0c\x25\xe9\xee\x36\x6b\x8c\x94\x6c\x4d\xa2\xca\x97\x37\x5f\x4d\x38\x9b\xb7\x19\xce\xca\x92\x48\xca\x45\xe9\x49\x19\xd9\xa6\xf6\x3e\x5d\x92\xc1\xa0\x6d\xff\xbf\x72\x9a\x2d\xaf\x8c\x12\x4f\xfe\xca\xcb\x29\x17\x9d\x92\x28\x69\x2d\x86\xf2\xbc\x62\x11\xee\xce\xce\x2f\x6d\xd6\x09\xd8\x5d\xc4\x4e\xb5\x9c\x8c\xc7\x83\xb3\xc6\x64\x70\x99\xd1\xd8\xc7\xad\x0b\x5d\x24\xf6\xc2\x2f\x4b\xdd\x45\xca\xdf\x92\xa7\x60\xb9\xfa\xe7\xb5\x00\xcc\x17\xf7\xd3\x09\x66\x8a\x82\x8e\x50\x7a\x64\x10\x36\x7c\x40\xe1\x42\xad\x2c\xd8\xc4\xaa\xe3\xf6\x3d\x30\x5b\x42\x23\xd6\x0c\xda\x93\xf3\xb4\xf6\x6c\x4e\xb4\xd3\xf3\x39\xd6\xb0\x14\x70\x20\xb5\xbb\xee\xef\xd3\x88\x10\x37\x7d\x9f\x61\xbf\x83\xec\x2d\x46\x87\xd7\x52\x0e\x9f\x53\x7e\x9c\xae\x1e\x66\xef\x7e\x53\xb3\xa3\xfc\x49\xcb\x57\xee\x79\xd1\x79\xd8\xfc\xcc\xeb\x7b\x03\x30\x2e\x6c\x53\xde\x54\xda\x95\xed\xf0\x97\xc8\xcf\x82\x93\xa4\x70\x55\x8d\x9f\x94\xab\x40\x3e\xed\x71\xaa\x77\x29\xdf\x95\x3c\x33\xae\xd5\xd1\xb6\xa6\xc7\x5a\x93\x70\x1e\x0b\x72\x21\x29\x6b\x04\x59\xcb\x22\x38\xc6\xba\xea\x2f\xc1\x09\x1e\xf2\xc4\xfe\x11\x00\x00\xff\xff\x95\xfb\xb4\x1f\x08\x04\x00\x00")

func mavenChartTemplatesNotesTxtBytes() ([]byte, error) {
	return bindataRead(
		_mavenChartTemplatesNotesTxt,
		"maven/chart/templates/NOTES.txt",
	)
}

func mavenChartTemplatesNotesTxt() (*asset, error) {
	bytes, err := mavenChartTemplatesNotesTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "maven/chart/templates/NOTES.txt", size: 1032, mode: os.FileMode(420), modTime: time.Unix(1498144407, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mavenChartTemplates_helpersTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x90\x41\x6b\xe3\x30\x10\x85\xef\xfe\x15\x0f\xb3\x81\xdd\x80\x9d\xc3\xc2\x1e\x02\x39\x65\x7b\x2a\xa4\xd0\x40\x7b\x56\xac\xa7\x5a\x20\x2b\xae\x34\x0a\x09\x69\xfe\x7b\x91\xdc\x36\x14\x7a\x68\x6f\x83\xf8\xe6\xcd\xd3\x77\x3e\x2f\xe6\x38\xd8\x61\x89\x48\x81\xb1\x8e\x72\x1a\xb9\x1a\x52\x14\xd5\xf5\x5c\x62\xbe\xb8\x5c\xaa\x4c\x55\x37\xc7\x51\x79\x0d\xe9\x09\xaf\x06\x62\x6f\xca\xdc\xf5\x2a\x48\x5b\xbd\x71\x0d\x34\x8d\xf5\x44\x9d\x99\x1a\xcd\xf5\x55\x25\x27\x68\xd7\x05\xdf\xe4\x80\xf6\x41\xb9\xc4\xd8\x66\xf2\xee\xc0\x10\xac\x26\x5e\x20\x21\xf9\x0e\xff\xfe\x96\xd1\x0e\xdb\x64\x8c\x3d\xa2\x6e\xae\x61\xf4\xba\xcc\x53\xaf\x75\xa0\x12\x42\x7d\xdc\x30\xc9\xb9\x13\x9e\x93\x72\xd6\x58\x6a\xa8\x71\x2c\x8d\xdb\xea\x91\x53\x7a\xe1\x25\xdf\xc8\xed\x23\x76\xec\x54\x8a\x44\xdc\x0f\xc4\x6d\xda\x31\x78\x0a\xe3\xf4\x4f\x63\xe9\x74\x84\x0a\x84\xb3\x83\x15\x6a\xc8\x1e\xd2\xdb\x88\xdf\xbb\x53\x71\xf0\x7f\xb3\xcd\xac\xf5\x4f\x88\x23\xbb\x3f\x5f\xe8\xc8\xa5\x3e\x2b\xf9\x55\xd2\x97\xab\xef\xbb\x79\xdf\x1c\x83\xf5\x62\x50\xcf\x62\x33\x8b\x35\xda\x7b\x3a\xaa\xc8\x69\x73\x8a\xfd\x89\xc6\xd7\x00\x00\x00\xff\xff\x34\x01\xd0\x17\x04\x02\x00\x00")

func mavenChartTemplates_helpersTplBytes() ([]byte, error) {
	return bindataRead(
		_mavenChartTemplates_helpersTpl,
		"maven/chart/templates/_helpers.tpl",
	)
}

func mavenChartTemplates_helpersTpl() (*asset, error) {
	bytes, err := mavenChartTemplates_helpersTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "maven/chart/templates/_helpers.tpl", size: 516, mode: os.FileMode(420), modTime: time.Unix(1498144407, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mavenChartTemplatesDeploymentYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x52\xc1\x8a\xdb\x30\x14\xbc\xfb\x2b\x06\x5d\x4b\x1c\xd2\xa3\xae\x5b\xe8\xad\xe4\xb4\xd0\x53\x79\x71\x5e\x13\x51\x59\x12\xd2\x73\x68\xf0\xea\xdf\x8b\x6c\x6f\x2c\x93\x42\xe9\x65\x75\x12\x33\xd2\xcc\xbc\x91\x28\x98\x57\x8e\xc9\x78\xa7\xc1\xbf\x85\x5d\xd9\xa6\xfd\xed\x70\x62\xa1\x43\xf3\xcb\xb8\xb3\xc6\x17\x0e\xd6\xdf\x7b\x76\xd2\xf4\x2c\x74\x26\x21\xdd\x00\x8e\x7a\xd6\x18\x47\x08\xf7\xc1\x92\x30\xd4\xcf\xc1\xda\x02\x2b\xb4\xc8\xb9\x01\x2c\x9d\xd8\xa6\x72\x1a\xe8\xae\x14\x45\x43\x8d\x23\xda\x97\xb2\x6f\xbf\x51\xcf\xc8\x79\xb7\x22\x4b\x18\xbc\x21\x72\xb0\xd4\x31\xd4\x27\x05\xf5\x43\x21\x67\xd5\xa4\xc0\x5d\xd1\x2a\x9c\xe9\x28\x4d\xee\xed\x2b\xd9\x81\x53\xbb\x80\x2f\x7e\x70\x32\x9b\xbf\xe7\x9a\xed\xeb\xe8\x65\xd5\xd1\xca\xa2\x10\xfe\x35\x0d\xf0\x9e\x60\x9a\xc7\x3b\x21\xe3\x38\x3e\x44\x76\x6b\x27\xdb\x09\x1f\x26\xa6\xa7\x0b\x2f\x1d\x2c\xb9\x27\xa8\x8d\x7c\x31\x49\xe2\x1d\x39\xef\x9f\x48\x1f\x2f\x7f\xc5\xdd\xac\xae\x9f\x08\xa1\xcb\x54\xd8\xc6\xf6\x38\x58\x7b\xf4\xd6\x74\xf7\x4d\x6f\xf3\x8d\xf0\x20\xeb\xb8\xc1\x47\xa9\x2a\xda\xad\x33\x1f\x7d\x79\xcb\x4a\x26\x71\xbc\x99\x8e\x5b\xe3\x84\xa3\x23\x5b\x0e\xd4\x52\xd6\xdc\xd8\x71\x4a\xc7\xe8\x4f\xbc\x4a\x02\x57\x91\xf0\x95\xa5\x86\x80\x40\x72\xd5\xd8\x6f\xb1\xff\xb5\x8c\x4c\x67\xf3\xe1\x9e\xc9\x0f\xb1\xe3\xa4\x9b\xf2\x97\xfc\x77\xea\x6d\xf5\x45\x17\x12\x6f\x30\xee\xcc\x4e\x70\xf8\x5c\x6e\xff\x09\x00\x00\xff\xff\x52\x7b\x20\xc6\x87\x03\x00\x00")

func mavenChartTemplatesDeploymentYamlBytes() ([]byte, error) {
	return bindataRead(
		_mavenChartTemplatesDeploymentYaml,
		"maven/chart/templates/deployment.yaml",
	)
}

func mavenChartTemplatesDeploymentYaml() (*asset, error) {
	bytes, err := mavenChartTemplatesDeploymentYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "maven/chart/templates/deployment.yaml", size: 903, mode: os.FileMode(420), modTime: time.Unix(1498144407, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mavenChartTemplatesIngressYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x90\xb1\x6a\xf4\x30\x10\x84\x7b\x3f\xc5\xa0\xf6\xe7\x74\x5c\xab\xf6\xaf\xd2\x1c\x21\xc5\xb5\x61\x6d\x4f\x62\x73\xb2\x2c\xb4\xf2\x11\x70\xf4\xee\x41\x3e\x5f\x02\xa9\xd2\xed\x7c\xec\x0e\x1f\x2b\x71\xbc\x30\xe9\x38\x07\x07\x7e\x64\x86\x3a\xea\xf1\x76\x6a\x99\xe5\xd4\x5c\xc7\xd0\x3b\x3c\x85\xf7\x44\xd5\x66\x62\x96\x5e\xb2\xb8\x06\x08\x32\xd1\x61\x5d\x91\x39\x45\x2f\x99\x30\x6f\x8b\xf7\x15\x1b\x58\x94\xd2\x00\x5e\x5a\x7a\xad\xdb\x40\x37\x48\xca\x0e\x66\x5d\x61\xff\xd7\xd9\x9e\x65\x22\x4a\x39\xfc\x90\xdd\x04\x9f\x48\x8c\x5e\x3a\xc2\xfc\x33\x30\xaf\x06\xa5\x98\x46\x23\xbb\xda\x95\x16\xcf\xad\xf4\x80\x61\xd6\xbc\x49\xd8\x17\x7a\x8a\xf2\x51\x6a\x2b\xbb\x88\x5f\xa8\xb6\x15\x65\x3f\x4f\x32\x86\xbb\x15\x30\xe4\x1c\xef\x56\x40\x94\x3c\xe8\x23\x1c\xb6\xe8\x70\xdc\x33\xd0\x4a\x77\x65\xe8\xdd\x37\x00\x94\xe9\x36\x76\x3c\xff\xe1\x01\xbf\x4e\x9e\xe7\xb4\xeb\xee\x6a\x3b\xb7\xf5\xf3\x29\x88\xaf\x0b\xf5\xf2\x2b\x00\x00\xff\xff\x54\x0e\x39\x31\x96\x01\x00\x00")

func mavenChartTemplatesIngressYamlBytes() ([]byte, error) {
	return bindataRead(
		_mavenChartTemplatesIngressYaml,
		"maven/chart/templates/ingress.yaml",
	)
}

func mavenChartTemplatesIngressYaml() (*asset, error) {
	bytes, err := mavenChartTemplatesIngressYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "maven/chart/templates/ingress.yaml", size: 406, mode: os.FileMode(420), modTime: time.Unix(1498144407, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mavenChartTemplatesServiceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\xcd\x4a\x04\x31\x10\x84\xef\x79\x8a\x22\x57\xd9\x80\xd7\x5c\xf7\x2e\x03\xca\x5e\xa5\xcd\xb6\x3a\x98\x49\x42\xa7\x77\x51\xc6\xbc\xbb\x64\x22\x0a\xfe\xec\xad\xa9\xf4\x97\x2f\x29\x2a\xf3\x81\xa5\xce\x39\x79\x9c\xaf\xcd\xcb\x9c\x8e\x1e\xb7\x2c\xe7\x39\xb0\x59\x58\xe9\x48\x4a\xde\x00\x89\x16\xf6\x58\x57\x28\x2f\x25\x92\x32\xec\xe3\x29\xc6\x1e\x5b\x38\xb4\x66\x80\x48\x0f\x1c\x6b\xdf\x06\xc2\x33\x89\x7a\xd8\x75\x85\xdb\xf7\xd9\xdd\xd0\xc2\x68\x6d\xf7\x9d\x7c\x9a\xf1\x0e\xe1\x12\x29\x30\xec\x95\x85\xbd\xb7\x68\xcd\x9a\x5a\x38\xf4\xbb\xf4\xad\x0c\xb3\x3b\x50\x3c\x71\x75\x75\x3c\xcf\xf5\x83\x21\x2e\x59\x74\xf3\xee\xb6\xf1\xcf\x6d\x7e\x55\x96\x44\x71\xca\xa2\x83\x02\x94\xe4\x89\x75\xfa\x0f\x99\xd3\x6f\xa4\x48\xd6\x1c\x72\xf4\xb8\xdb\x4f\x5b\xf2\xd5\xcc\x4f\x3c\x8d\x0f\x1b\xa0\x72\xe4\xa0\x59\x46\x35\x54\xca\xe5\x26\x3f\x02\x00\x00\xff\xff\xce\x5a\xb0\xc7\x95\x01\x00\x00")

func mavenChartTemplatesServiceYamlBytes() ([]byte, error) {
	return bindataRead(
		_mavenChartTemplatesServiceYaml,
		"maven/chart/templates/service.yaml",
	)
}

func mavenChartTemplatesServiceYaml() (*asset, error) {
	bytes, err := mavenChartTemplatesServiceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "maven/chart/templates/service.yaml", size: 405, mode: os.FileMode(420), modTime: time.Unix(1498144407, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mavenChartValuesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8f\xbd\x8e\x1b\x31\x0c\x06\x7b\x3d\xc5\x07\x5c\x6d\xc3\x77\xc8\x8f\xa1\x2e\xb8\x6b\x0e\x88\x03\x17\x69\x52\xd2\x5a\xae\x43\x5b\x12\x15\x8a\x5a\x64\xdf\x3e\x58\xa7\x49\x99\x8e\x24\x06\x43\xcc\x13\xde\x78\xa6\x91\x1d\x0b\xe5\xc1\x1d\xb3\x1a\x4e\xb4\x70\x45\x33\xbd\x71\xf2\xbe\x0f\x4f\xf8\xfe\x53\x3a\xa4\x83\xf0\xe3\xcb\xe9\xeb\x6e\x56\x2b\xe4\xce\x13\x66\xc9\xbc\x01\x6f\x9c\x32\x19\x63\x21\x13\xba\x64\xee\x70\xc5\x85\xd1\xa8\x77\x9e\x20\xd5\x15\xab\x0e\x83\x73\x69\x99\x9c\xfb\x3e\x18\xb7\x2c\x89\x5e\x75\x54\x8f\x78\x09\x52\xe8\xca\x31\x00\xc6\x57\xe9\x6e\x6b\xc4\xa4\xe9\xce\xb6\x17\x0d\x80\xda\x35\x22\xcb\xc5\xc8\xd6\x00\x54\x2a\x1c\xa1\x8d\xeb\x6d\xba\x07\xc0\xe9\x1a\x71\xdc\xdd\xa6\xfb\x8e\x72\x93\xca\x01\x68\x23\xe7\xb3\x66\x49\x6b\xc4\xfb\xfc\x4d\xfd\x6c\xdc\xb9\x7a\xe8\x6c\x8b\xa4\xc7\xb3\xbf\x9e\x1b\x2d\xb4\x49\xd6\xc6\x11\xaf\x79\x74\x67\x7b\x3f\x07\x80\x7f\x3b\x5b\xa5\x7c\x56\xf3\x88\xe3\x21\x60\x8b\xf9\xe7\xf4\xe1\xe3\xa7\xcf\xc1\xb8\xeb\xb0\xc4\x7d\x33\x66\x29\xe2\x8f\x09\x48\x6d\x44\x3c\x1f\x0e\xe5\xb1\x15\x2e\xba\x65\x3d\xbf\x1c\x4f\xf2\x08\xfd\x35\xb8\xff\x0f\xfb\x27\x00\x00\xff\xff\x06\xdb\x2d\x17\xa8\x01\x00\x00")

func mavenChartValuesYamlBytes() ([]byte, error) {
	return bindataRead(
		_mavenChartValuesYaml,
		"maven/chart/values.yaml",
	)
}

func mavenChartValuesYaml() (*asset, error) {
	bytes, err := mavenChartValuesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "maven/chart/values.yaml", size: 424, mode: os.FileMode(420), modTime: time.Unix(1498144407, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mavenDetect = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\xc9\x41\x0e\x82\x30\x10\x05\xd0\xfd\x9c\xe2\x0b\x86\x1d\x56\xd6\x1a\x6f\xe0\x09\x8c\x0b\x2a\xbf\xe9\x24\x65\x6a\x28\x25\x1c\xdf\xb8\x30\x2e\x5f\x5e\x7b\x70\xb5\x2c\xce\xab\x39\xda\x06\x3f\x96\x28\x2d\xbe\xac\x85\xb8\xfa\xaa\x69\xea\x27\x5d\x6e\x22\x1a\xf0\x40\x1f\x70\x1c\xdc\x3b\xcf\xa7\x7d\x4e\x78\x5e\xb0\x46\x9a\x00\xe0\x2b\x66\x34\xf7\x71\xa3\x35\xe8\x3a\x70\xd7\x15\x67\x61\x2a\x94\xdf\x5a\xfe\xd7\x20\x41\xe5\x13\x00\x00\xff\xff\x86\x2d\xae\x51\x7e\x00\x00\x00")

func mavenDetectBytes() ([]byte, error) {
	return bindataRead(
		_mavenDetect,
		"maven/detect",
	)
}

func mavenDetect() (*asset, error) {
	bytes, err := mavenDetectBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "maven/detect", size: 126, mode: os.FileMode(493), modTime: time.Unix(1498144407, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeDockerignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xc9\x4f\xce\x4e\x2d\x4a\xcb\xcc\x49\xe5\x4a\x29\x4a\x4c\x2b\xd1\x2b\xc9\xcf\xcd\xe1\x4a\xce\x48\x2c\x2a\xd1\xe7\xf2\xf3\x0f\xf1\x74\x76\xe5\x02\x04\x00\x00\xff\xff\x18\xba\x47\x9a\x24\x00\x00\x00")

func nodeDockerignoreBytes() ([]byte, error) {
	return bindataRead(
		_nodeDockerignore,
		"node/.dockerignore",
	)
}

func nodeDockerignore() (*asset, error) {
	bytes, err := nodeDockerignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "node/.dockerignore", size: 36, mode: os.FileMode(420), modTime: time.Unix(1496874162, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeDockerfile = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x0b\xf2\xf7\x55\xc8\xcb\x4f\x49\xb5\x32\xd3\xcd\xcf\x4b\x2a\xcd\xcc\x49\xe1\x72\x8d\x08\xf0\x0f\x76\x55\xb0\x30\xb0\x30\xe0\x0a\x0a\xf5\x53\xc8\x2b\xc8\x55\xc8\xcc\x2b\x2e\x49\xcc\xc9\xe1\x72\xf6\x75\x51\x88\x56\xca\x2b\xc8\x55\xd2\x51\x50\x2a\x2e\x49\x2c\x2a\x51\x8a\xe5\x02\x04\x00\x00\xff\xff\xb4\x7e\x78\x65\x45\x00\x00\x00")

func nodeDockerfileBytes() ([]byte, error) {
	return bindataRead(
		_nodeDockerfile,
		"node/Dockerfile",
	)
}

func nodeDockerfile() (*asset, error) {
	bytes, err := nodeDockerfileBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "node/Dockerfile", size: 69, mode: os.FileMode(420), modTime: time.Unix(1496874162, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeNotice = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x51\x4f\x8f\xe3\x26\x14\xbf\xfb\x53\xfc\x34\xa7\x5d\x89\x4e\x77\x56\xea\x65\x6f\x8c\x4d\x62\x54\x07\x22\x4c\x36\xcd\x91\xd8\x64\x4c\xeb\x40\x64\x48\x47\xf3\xed\x2b\x48\xb6\xb3\xb3\x27\xcb\xbc\xf7\xfb\xfb\x36\x5c\xa3\x73\x83\xf5\xd1\x7e\xab\xaa\x3a\x5c\xde\x16\xf7\x32\x25\x7c\xaa\x3f\xe3\xeb\x97\xa7\xa7\xdf\xbe\x7e\x79\xfa\x03\xad\x5d\xc2\x3f\x57\x02\xee\x87\xc7\xaa\xda\xda\xe5\xec\x62\x74\xc1\xc3\x45\x4c\x76\xb1\xc7\x37\xbc\x2c\xc6\x27\x3b\x12\x9c\x16\x6b\x11\x4e\x18\x26\xb3\xbc\x58\x82\x14\x60\xfc\x1b\x2e\x76\x89\xc1\x23\x1c\x93\x71\xde\xf9\x17\x18\x0c\xe1\xf2\x96\x37\xd3\xe4\x22\x62\x38\xa5\x57\xb3\x58\x18\x3f\xc2\xc4\x18\x06\x67\x92\x1d\x31\x86\xe1\x7a\xb6\x3e\x99\x94\xf5\x4e\x6e\xb6\x11\x9f\xd2\x64\xf1\xd0\xdf\x11\x0f\x9f\x8b\xc8\x68\xcd\x0c\xe7\x91\x67\x3f\x46\x78\x75\x69\x0a\xd7\x84\xc5\xc6\xb4\xb8\x21\x73\x10\x38\x3f\xcc\xd7\x31\x7b\xf8\x31\x9e\xdd\xd9\xdd\x15\x32\xbc\x54\x10\x33\xe9\x35\x5a\x52\x7c\x12\x9c\xc3\xe8\x4e\xf9\x6b\x4b\xac\xcb\xf5\x38\xbb\x38\x11\x8c\x2e\x53\x1f\xaf\xc9\x12\xc4\xfc\x58\xca\x24\x39\xc7\xef\x61\x41\xb4\xf3\x9c\x19\x9c\x8d\xb7\xac\xef\xee\xca\x4e\x56\xb9\xe4\x42\xd3\xbd\xa2\xa2\xfb\x3a\x85\xf3\xc7\x24\x2e\xe2\x74\x5d\xbc\x8b\x93\x2d\x98\x31\x20\x86\xa2\xf8\xb7\x1d\x52\x7e\xc9\xeb\xa7\x30\xcf\xe1\x35\x47\x1b\x82\x1f\x5d\x4e\x14\xbf\x55\x95\x9e\x2c\xcc\x31\xfc\x6b\x4b\x96\xdb\x85\x7d\x48\x6e\xb8\xd5\x5d\x0e\x70\x79\xbf\xea\x7d\x14\x27\x33\xcf\x38\xda\x7b\x61\x76\xcc\xf5\x9a\x9f\xe2\x2c\x59\x3e\x26\xe3\x93\x33\x33\x2e\x61\x29\x7a\xbf\xc6\x7c\xac\x2a\xdd\x32\xf4\x72\xa5\xf7\x54\x31\xf0\x1e\x5b\x25\xbf\xf3\x86\x35\x78\xa0\x3d\x78\xff\x40\xb0\xe7\xba\x95\x3b\x8d\x3d\x55\x8a\x0a\x7d\x80\x5c\x81\x8a\x03\xfe\xe4\xa2\x21\x60\x7f\x6d\x15\xeb\x7b\x48\x05\xbe\xd9\x76\x9c\x35\x04\x5c\xd4\xdd\xae\xe1\x62\x8d\xe7\x9d\x86\x90\x1a\x1d\xdf\x70\xcd\x1a\x68\x89\x2c\x78\xa7\xe2\xac\xcf\x64\x1b\xa6\xea\x96\x0a\x4d\x9f\x79\xc7\xf5\x81\x60\xc5\xb5\xc8\x9c\x2b\xa9\x40\xb1\xa5\x4a\xf3\x7a\xd7\x51\x85\xed\x4e\x6d\x65\xcf\x40\x45\x03\x21\x05\x17\x2b\xc5\xc5\x9a\x6d\x98\xd0\x8f\xe0\x02\x42\x82\x7d\x67\x42\xa3\x6f\x69\xd7\x15\x29\xba\xd3\xad\x54\xc5\x5f\x2d\xb7\x07\xc5\xd7\xad\x46\x2b\xbb\x86\xa9\x1e\xcf\x0c\x1d\xa7\xcf\x1d\xbb\x49\x89\x03\xea\x8e\xf2\x0d\x41\x43\x37\x74\xcd\x0a\x4a\xea\x96\xa9\xb2\x76\x77\xb7\x6f\x59\x79\xe2\x02\x54\x80\xd6\x9a\x4b\x91\x63\xd4\x52\x68\x45\x6b\x4d\xa0\xa5\xd2\xff\x43\xf7\xbc\x67\x04\x54\xf1\x3e\x17\xb2\x52\x72\x43\x90\xeb\x94\xab\xd2\x99\xc8\x38\xc1\x6e\x2c\xb9\x6a\x7c\xb8\x88\x54\xe5\x7f\xd7\xb3\x77\x2f\x0d\xa3\x1d\x17\xeb\x3e\x83\x7f\x5e\x7e\xac\xfe\x0b\x00\x00\xff\xff\x3e\x88\xe6\xeb\x33\x04\x00\x00")

func nodeNoticeBytes() ([]byte, error) {
	return bindataRead(
		_nodeNotice,
		"node/NOTICE",
	)
}

func nodeNotice() (*asset, error) {
	bytes, err := nodeNoticeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "node/NOTICE", size: 1075, mode: os.FileMode(420), modTime: time.Unix(1496874162, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeChartHelmignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x8e\xc1\x6a\x23\x31\x0c\x86\xef\x7a\x8a\x7f\x99\xcb\xee\xb0\x78\x1e\x22\xd9\xc3\x9e\x5a\x48\xc9\xb5\x78\x66\x14\x5b\x89\x47\x36\xb6\x26\x69\x7b\xe8\xb3\x97\x24\x84\xf6\xf2\x81\x3e\x24\xf1\x75\x78\xf6\x66\x5c\xb5\xc1\x32\x24\x68\xae\x8c\x4b\x64\xc5\xb8\x4a\x9a\x45\x03\x8a\x9f\x4e\x3e\x70\x73\xd4\xe1\x25\x4a\x43\x5b\x4b\xc9\xd5\x1a\x5a\xe4\x94\x10\x52\x1e\xb1\x78\x9b\xa2\x68\xf8\x8b\xca\xc9\x9b\x9c\x19\xc5\x5b\xfc\xe1\xbd\xce\xd4\x41\x39\x78\x93\xac\xf8\x5d\x2a\x1f\xe4\x8d\x67\x5c\xc4\x22\x7e\xfd\x71\x78\xd2\xf4\x8e\xac\xb7\xcb\x6b\x12\x0a\x57\x24\x51\x76\xe4\xb6\xbb\xd7\x9d\xe5\xca\xd4\x61\x93\x97\x25\x2b\xf6\x9b\x1d\x66\xa9\x8d\x5c\x10\x1b\x6e\xbc\xe7\x93\x1b\x3f\xea\x70\xe3\x43\xc4\x30\x5c\xf1\x18\xdb\x59\x87\xef\x47\xa3\x9f\x4e\x6b\xc1\x41\x12\x37\xea\x5d\xbb\x14\xea\xdd\xe8\x4f\xd4\x3b\x5b\x0a\xf5\x9f\xd4\x61\xef\xab\xe4\xb5\xe1\xff\xf6\x5f\x23\x57\x6a\x3e\xf2\x64\xe4\x64\x66\x3f\xdc\xf7\x6a\x3e\xd2\x57\x00\x00\x00\xff\xff\xbc\x5b\x94\x77\x4d\x01\x00\x00")

func nodeChartHelmignoreBytes() ([]byte, error) {
	return bindataRead(
		_nodeChartHelmignore,
		"node/chart/.helmignore",
	)
}

func nodeChartHelmignore() (*asset, error) {
	bytes, err := nodeChartHelmignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "node/chart/.helmignore", size: 333, mode: os.FileMode(420), modTime: time.Unix(1496874162, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeChartChartYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xca\x4b\xcc\x4d\xb5\x52\xc8\xcb\x4f\x49\xe5\x02\x04\x00\x00\xff\xff\xe3\x6f\x5e\x9b\x0b\x00\x00\x00")

func nodeChartChartYamlBytes() ([]byte, error) {
	return bindataRead(
		_nodeChartChartYaml,
		"node/chart/Chart.yaml",
	)
}

func nodeChartChartYaml() (*asset, error) {
	bytes, err := nodeChartChartYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "node/chart/Chart.yaml", size: 11, mode: os.FileMode(420), modTime: time.Unix(1496874162, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeChartTemplatesNotesTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x92\x51\x8b\xda\x4e\x14\x47\xdf\xf7\x53\xfc\x08\x82\xff\xff\x83\x63\x9f\x85\x7d\x69\x2b\x45\x58\x54\xec\x76\xa1\x94\x52\xae\x93\xab\x4e\x77\x32\x13\x72\x6f\x74\x25\xe4\xbb\x97\x89\xd6\xcd\xda\xb2\x94\xd2\xbc\x65\x42\xce\x1c\xee\xb9\x37\x4d\x33\x82\xdb\xc0\xc6\xa0\xe4\x82\x20\x9b\xc7\x9c\x97\xb1\xd2\x0c\xe6\x81\x7c\xcd\x62\x84\xab\xbd\xb3\x6c\xf4\x58\x32\xda\xf6\x06\xf8\xc0\x0a\xdd\x31\xa8\x2c\xbd\xb3\xa4\x2e\x06\x7c\x5a\xdd\x61\x7d\x44\x55\x87\xe0\xc2\x36\x7d\x16\x86\x8d\x45\x41\x21\x97\xc9\x0d\xc0\x4f\x65\xac\x14\xf3\xc5\xfb\xe9\xb7\xe5\x62\x75\x7f\x3b\xf8\xef\xb1\x5e\xb3\x55\x8f\x2d\x2b\x46\xa3\x40\x05\x4b\x49\x96\xd1\x34\x30\x2b\xf6\x4c\xc2\x66\x7e\x39\x6d\x5b\x8c\x22\xbe\x4b\x0c\x25\xe9\xee\x36\x6b\x8c\x94\x6c\x4d\xa2\xca\x97\x37\x5f\x4d\x38\x9b\xb7\x19\xce\xca\x92\x48\xca\x45\xe9\x49\x19\xd9\xa6\xf6\x3e\x5d\x92\xc1\xa0\x6d\xff\xbf\x72\x9a\x2d\xaf\x8c\x12\x4f\xfe\xca\xcb\x29\x17\x9d\x92\x28\x69\x2d\x86\xf2\xbc\x62\x11\xee\xce\xce\x2f\x6d\xd6\x09\xd8\x5d\xc4\x4e\xb5\x9c\x8c\xc7\x83\xb3\xc6\x64\x70\x99\xd1\xd8\xc7\xad\x0b\x5d\x24\xf6\xc2\x2f\x4b\xdd\x45\xca\xdf\x92\xa7\x60\xb9\xfa\xe7\xb5\x00\xcc\x17\xf7\xd3\x09\x66\x8a\x82\x8e\x50\x7a\x64\x10\x36\x7c\x40\xe1\x42\xad\x2c\xd8\xc4\xaa\xe3\xf6\x3d\x30\x5b\x42\x23\xd6\x0c\xda\x93\xf3\xb4\xf6\x6c\x4e\xb4\xd3\xf3\x39\xd6\xb0\x14\x70\x20\xb5\xbb\xee\xef\xd3\x88\x10\x37\x7d\x9f\x61\xbf\x83\xec\x2d\x46\x87\xd7\x52\x0e\x9f\x53\x7e\x9c\xae\x1e\x66\xef\x7e\x53\xb3\xa3\xfc\x49\xcb\x57\xee\x79\xd1\x79\xd8\xfc\xcc\xeb\x7b\x03\x30\x2e\x6c\x53\xde\x54\xda\x95\xed\xf0\x97\xc8\xcf\x82\x93\xa4\x70\x55\x8d\x9f\x94\xab\x40\x3e\xed\x71\xaa\x77\x29\xdf\x95\x3c\x33\xae\xd5\xd1\xb6\xa6\xc7\x5a\x93\x70\x1e\x0b\x72\x21\x29\x6b\x04\x59\xcb\x22\x38\xc6\xba\xea\x2f\xc1\x09\x1e\xf2\xc4\xfe\x11\x00\x00\xff\xff\x95\xfb\xb4\x1f\x08\x04\x00\x00")

func nodeChartTemplatesNotesTxtBytes() ([]byte, error) {
	return bindataRead(
		_nodeChartTemplatesNotesTxt,
		"node/chart/templates/NOTES.txt",
	)
}

func nodeChartTemplatesNotesTxt() (*asset, error) {
	bytes, err := nodeChartTemplatesNotesTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "node/chart/templates/NOTES.txt", size: 1032, mode: os.FileMode(420), modTime: time.Unix(1496874162, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeChartTemplates_helpersTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x90\x41\x6b\xe3\x30\x10\x85\xef\xfe\x15\x0f\xb3\x81\xdd\x80\x9d\xc3\xc2\x1e\x02\x39\x65\x7b\x2a\xa4\xd0\x40\x7b\x56\xac\xa7\x5a\x20\x2b\xae\x34\x0a\x09\x69\xfe\x7b\x91\xdc\x36\x14\x7a\x68\x6f\x83\xf8\xe6\xcd\xd3\x77\x3e\x2f\xe6\x38\xd8\x61\x89\x48\x81\xb1\x8e\x72\x1a\xb9\x1a\x52\x14\xd5\xf5\x5c\x62\xbe\xb8\x5c\xaa\x4c\x55\x37\xc7\x51\x79\x0d\xe9\x09\xaf\x06\x62\x6f\xca\xdc\xf5\x2a\x48\x5b\xbd\x71\x0d\x34\x8d\xf5\x44\x9d\x99\x1a\xcd\xf5\x55\x25\x27\x68\xd7\x05\xdf\xe4\x80\xf6\x41\xb9\xc4\xd8\x66\xf2\xee\xc0\x10\xac\x26\x5e\x20\x21\xf9\x0e\xff\xfe\x96\xd1\x0e\xdb\x64\x8c\x3d\xa2\x6e\xae\x61\xf4\xba\xcc\x53\xaf\x75\xa0\x12\x42\x7d\xdc\x30\xc9\xb9\x13\x9e\x93\x72\xd6\x58\x6a\xa8\x71\x2c\x8d\xdb\xea\x91\x53\x7a\xe1\x25\xdf\xc8\xed\x23\x76\xec\x54\x8a\x44\xdc\x0f\xc4\x6d\xda\x31\x78\x0a\xe3\xf4\x4f\x63\xe9\x74\x84\x0a\x84\xb3\x83\x15\x6a\xc8\x1e\xd2\xdb\x88\xdf\xbb\x53\x71\xf0\x7f\xb3\xcd\xac\xf5\x4f\x88\x23\xbb\x3f\x5f\xe8\xc8\xa5\x3e\x2b\xf9\x55\xd2\x97\xab\xef\xbb\x79\xdf\x1c\x83\xf5\x62\x50\xcf\x62\x33\x8b\x35\xda\x7b\x3a\xaa\xc8\x69\x73\x8a\xfd\x89\xc6\xd7\x00\x00\x00\xff\xff\x34\x01\xd0\x17\x04\x02\x00\x00")

func nodeChartTemplates_helpersTplBytes() ([]byte, error) {
	return bindataRead(
		_nodeChartTemplates_helpersTpl,
		"node/chart/templates/_helpers.tpl",
	)
}

func nodeChartTemplates_helpersTpl() (*asset, error) {
	bytes, err := nodeChartTemplates_helpersTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "node/chart/templates/_helpers.tpl", size: 516, mode: os.FileMode(420), modTime: time.Unix(1496874162, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeChartTemplatesDeploymentYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x52\xc1\x8a\xdb\x30\x14\xbc\xfb\x2b\x06\x5d\x4b\x1c\xd2\xa3\xae\x5b\xe8\xad\xe4\xb4\xd0\x53\x79\x71\x5e\x13\x51\x59\x12\xd2\x73\x68\xf0\xea\xdf\x8b\x6c\x6f\x2c\x93\x42\xe9\x65\x75\x12\x33\xd2\xcc\xbc\x91\x28\x98\x57\x8e\xc9\x78\xa7\xc1\xbf\x85\x5d\xd9\xa6\xfd\xed\x70\x62\xa1\x43\xf3\xcb\xb8\xb3\xc6\x17\x0e\xd6\xdf\x7b\x76\xd2\xf4\x2c\x74\x26\x21\xdd\x00\x8e\x7a\xd6\x18\x47\x08\xf7\xc1\x92\x30\xd4\xcf\xc1\xda\x02\x2b\xb4\xc8\xb9\x01\x2c\x9d\xd8\xa6\x72\x1a\xe8\xae\x14\x45\x43\x8d\x23\xda\x97\xb2\x6f\xbf\x51\xcf\xc8\x79\xb7\x22\x4b\x18\xbc\x21\x72\xb0\xd4\x31\xd4\x27\x05\xf5\x43\x21\x67\xd5\xa4\xc0\x5d\xd1\x2a\x9c\xe9\x28\x4d\xee\xed\x2b\xd9\x81\x53\xbb\x80\x2f\x7e\x70\x32\x9b\xbf\xe7\x9a\xed\xeb\xe8\x65\xd5\xd1\xca\xa2\x10\xfe\x35\x0d\xf0\x9e\x60\x9a\xc7\x3b\x21\xe3\x38\x3e\x44\x76\x6b\x27\xdb\x09\x1f\x26\xa6\xa7\x0b\x2f\x1d\x2c\xb9\x27\xa8\x8d\x7c\x31\x49\xe2\x1d\x39\xef\x9f\x48\x1f\x2f\x7f\xc5\xdd\xac\xae\x9f\x08\xa1\xcb\x54\xd8\xc6\xf6\x38\x58\x7b\xf4\xd6\x74\xf7\x4d\x6f\xf3\x8d\xf0\x20\xeb\xb8\xc1\x47\xa9\x2a\xda\xad\x33\x1f\x7d\x79\xcb\x4a\x26\x71\xbc\x99\x8e\x5b\xe3\x84\xa3\x23\x5b\x0e\xd4\x52\xd6\xdc\xd8\x71\x4a\xc7\xe8\x4f\xbc\x4a\x02\x57\x91\xf0\x95\xa5\x86\x80\x40\x72\xd5\xd8\x6f\xb1\xff\xb5\x8c\x4c\x67\xf3\xe1\x9e\xc9\x0f\xb1\xe3\xa4\x9b\xf2\x97\xfc\x77\xea\x6d\xf5\x45\x17\x12\x6f\x30\xee\xcc\x4e\x70\xf8\x5c\x6e\xff\x09\x00\x00\xff\xff\x52\x7b\x20\xc6\x87\x03\x00\x00")

func nodeChartTemplatesDeploymentYamlBytes() ([]byte, error) {
	return bindataRead(
		_nodeChartTemplatesDeploymentYaml,
		"node/chart/templates/deployment.yaml",
	)
}

func nodeChartTemplatesDeploymentYaml() (*asset, error) {
	bytes, err := nodeChartTemplatesDeploymentYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "node/chart/templates/deployment.yaml", size: 903, mode: os.FileMode(420), modTime: time.Unix(1496874162, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeChartTemplatesIngressYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x90\xb1\x6a\xf4\x30\x10\x84\x7b\x3f\xc5\xa0\xf6\xe7\x74\x5c\xab\xf6\xaf\xd2\x1c\x21\xc5\xb5\x61\x6d\x4f\x62\x73\xb2\x2c\xb4\xf2\x11\x70\xf4\xee\x41\x3e\x5f\x02\xa9\xd2\xed\x7c\xec\x0e\x1f\x2b\x71\xbc\x30\xe9\x38\x07\x07\x7e\x64\x86\x3a\xea\xf1\x76\x6a\x99\xe5\xd4\x5c\xc7\xd0\x3b\x3c\x85\xf7\x44\xd5\x66\x62\x96\x5e\xb2\xb8\x06\x08\x32\xd1\x61\x5d\x91\x39\x45\x2f\x99\x30\x6f\x8b\xf7\x15\x1b\x58\x94\xd2\x00\x5e\x5a\x7a\xad\xdb\x40\x37\x48\xca\x0e\x66\x5d\x61\xff\xd7\xd9\x9e\x65\x22\x4a\x39\xfc\x90\xdd\x04\x9f\x48\x8c\x5e\x3a\xc2\xfc\x33\x30\xaf\x06\xa5\x98\x46\x23\xbb\xda\x95\x16\xcf\xad\xf4\x80\x61\xd6\xbc\x49\xd8\x17\x7a\x8a\xf2\x51\x6a\x2b\xbb\x88\x5f\xa8\xb6\x15\x65\x3f\x4f\x32\x86\xbb\x15\x30\xe4\x1c\xef\x56\x40\x94\x3c\xe8\x23\x1c\xb6\xe8\x70\xdc\x33\xd0\x4a\x77\x65\xe8\xdd\x37\x00\x94\xe9\x36\x76\x3c\xff\xe1\x01\xbf\x4e\x9e\xe7\xb4\xeb\xee\x6a\x3b\xb7\xf5\xf3\x29\x88\xaf\x0b\xf5\xf2\x2b\x00\x00\xff\xff\x54\x0e\x39\x31\x96\x01\x00\x00")

func nodeChartTemplatesIngressYamlBytes() ([]byte, error) {
	return bindataRead(
		_nodeChartTemplatesIngressYaml,
		"node/chart/templates/ingress.yaml",
	)
}

func nodeChartTemplatesIngressYaml() (*asset, error) {
	bytes, err := nodeChartTemplatesIngressYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "node/chart/templates/ingress.yaml", size: 406, mode: os.FileMode(420), modTime: time.Unix(1496874162, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeChartTemplatesServiceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\xcd\x4a\x04\x31\x10\x84\xef\x79\x8a\x22\x57\xd9\x80\xd7\x5c\xf7\x2e\x03\xca\x5e\xa5\xcd\xb6\x3a\x98\x49\x42\xa7\x77\x51\xc6\xbc\xbb\x64\x22\x0a\xfe\xec\xad\xa9\xf4\x97\x2f\x29\x2a\xf3\x81\xa5\xce\x39\x79\x9c\xaf\xcd\xcb\x9c\x8e\x1e\xb7\x2c\xe7\x39\xb0\x59\x58\xe9\x48\x4a\xde\x00\x89\x16\xf6\x58\x57\x28\x2f\x25\x92\x32\xec\xe3\x29\xc6\x1e\x5b\x38\xb4\x66\x80\x48\x0f\x1c\x6b\xdf\x06\xc2\x33\x89\x7a\xd8\x75\x85\xdb\xf7\xd9\xdd\xd0\xc2\x68\x6d\xf7\x9d\x7c\x9a\xf1\x0e\xe1\x12\x29\x30\xec\x95\x85\xbd\xb7\x68\xcd\x9a\x5a\x38\xf4\xbb\xf4\xad\x0c\xb3\x3b\x50\x3c\x71\x75\x75\x3c\xcf\xf5\x83\x21\x2e\x59\x74\xf3\xee\xb6\xf1\xcf\x6d\x7e\x55\x96\x44\x71\xca\xa2\x83\x02\x94\xe4\x89\x75\xfa\x0f\x99\xd3\x6f\xa4\x48\xd6\x1c\x72\xf4\xb8\xdb\x4f\x5b\xf2\xd5\xcc\x4f\x3c\x8d\x0f\x1b\xa0\x72\xe4\xa0\x59\x46\x35\x54\xca\xe5\x26\x3f\x02\x00\x00\xff\xff\xce\x5a\xb0\xc7\x95\x01\x00\x00")

func nodeChartTemplatesServiceYamlBytes() ([]byte, error) {
	return bindataRead(
		_nodeChartTemplatesServiceYaml,
		"node/chart/templates/service.yaml",
	)
}

func nodeChartTemplatesServiceYaml() (*asset, error) {
	bytes, err := nodeChartTemplatesServiceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "node/chart/templates/service.yaml", size: 405, mode: os.FileMode(420), modTime: time.Unix(1496874162, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeChartValuesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8f\xb1\x4e\xc3\x40\x0c\x86\xf7\x7b\x8a\x5f\xea\x4c\x95\x76\xaa\x6e\x43\xed\x52\x89\xa2\x0c\x2c\x8c\x97\xc4\x09\x16\xbe\x38\xf8\x7c\x15\x79\x7b\xd4\x6c\x30\xb1\xd9\xd6\x67\xfb\xff\x76\xb8\xd0\x98\xaa\x38\xee\x49\x2a\x15\x8c\x6a\x98\x75\xa0\x7d\xd8\xe1\xed\x83\x0b\xb8\x20\xe1\xfd\xf9\xf6\xf2\x34\xaa\xe5\xe4\x4e\x03\x46\x96\x0d\xb8\x50\x2f\xc9\x08\xf7\x64\x9c\x3a\xa1\x02\x57\x74\x84\x25\x95\x42\x03\x78\x76\xc5\xaa\xd5\xe0\x94\x17\x49\x4e\x65\x1f\x8c\x16\xe1\x3e\x9d\xb5\xce\x1e\x71\x0c\x9c\xd3\x44\x31\x00\x46\x13\x17\xb7\x35\x62\xd0\xfe\x93\x6c\xcf\x1a\x00\xb5\x29\x42\xb8\xb3\x64\x6b\x00\xe6\x94\x29\x6e\x01\x03\xe0\x69\x8a\xd0\xb9\xab\x2c\x43\x00\x96\x2a\xd2\xaa\x70\xbf\x46\x5c\xc7\x57\xf5\xd6\xa8\xd0\xec\xa1\x90\xdd\xb9\xdf\x9e\xfc\xde\x5f\x17\x8a\x38\x4b\x2d\x4e\x76\x6d\x03\x40\xdf\x4e\x36\x27\x69\xd5\x3c\xe2\xd4\x9c\x9a\x80\x87\xc6\xdf\xa1\x51\xd1\x6a\x3d\x95\xc7\x4d\xe1\xcc\xbe\x55\x40\xbf\xd4\x88\x43\xd3\xe4\xad\xcb\x94\xf5\x21\x74\x38\x9e\x6e\xbc\x29\x7e\x55\x2a\xff\x61\x7f\x02\x00\x00\xff\xff\x0b\xf7\x95\x54\x98\x01\x00\x00")

func nodeChartValuesYamlBytes() ([]byte, error) {
	return bindataRead(
		_nodeChartValuesYaml,
		"node/chart/values.yaml",
	)
}

func nodeChartValuesYaml() (*asset, error) {
	bytes, err := nodeChartValuesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "node/chart/values.yaml", size: 408, mode: os.FileMode(420), modTime: time.Unix(1497118555, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeDetect = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcc\xb1\x0a\xc2\x30\x10\x87\xf1\xfd\x9e\xe2\x5f\xda\xd5\x86\xce\xe2\x22\x75\x28\x88\x83\xe0\x24\x22\x69\xbd\x98\xd3\x72\x09\x4d\x14\x7d\x7b\x29\xa2\xeb\xc7\xc7\xaf\x2c\xcc\x23\x4d\xa6\x17\x35\xac\x4f\xf4\x36\x79\xa2\xf5\xa1\xdb\xb6\xe7\xb6\xdb\xaf\xaa\x86\xa8\xc4\xe6\x25\x19\x6c\xa7\xf1\x0d\x71\xb0\x31\x42\x12\x86\xf1\x5b\x34\x64\xec\xc2\x85\xeb\x5b\xaa\x49\x1c\x8e\x28\xb0\x70\xa8\xfe\x88\x89\x76\xb8\xdb\xeb\x3c\x04\xc5\x69\x89\xec\x59\x09\xe0\x59\x6d\xc8\x09\x11\x0f\x3e\xfc\x10\xfa\x04\x00\x00\xff\xff\xb6\x32\x4f\x9a\x93\x00\x00\x00")

func nodeDetectBytes() ([]byte, error) {
	return bindataRead(
		_nodeDetect,
		"node/detect",
	)
}

func nodeDetect() (*asset, error) {
	bytes, err := nodeDetectBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "node/detect", size: 147, mode: os.FileMode(493), modTime: time.Unix(1496874162, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _phpDockerignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xc9\x4f\xce\x4e\x2d\x4a\xcb\xcc\x49\xe5\x4a\x29\x4a\x4c\x2b\xd1\x2b\xc9\xcf\xcd\xe1\x4a\xce\x48\x2c\x2a\xd1\xe7\xf2\xf3\x0f\xf1\x74\x76\xe5\x02\x04\x00\x00\xff\xff\x18\xba\x47\x9a\x24\x00\x00\x00")

func phpDockerignoreBytes() ([]byte, error) {
	return bindataRead(
		_phpDockerignore,
		"php/.dockerignore",
	)
}

func phpDockerignore() (*asset, error) {
	bytes, err := phpDockerignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "php/.dockerignore", size: 36, mode: os.FileMode(420), modTime: time.Unix(1496874162, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _phpDockerfile = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8d\xbd\x4e\xc3\x30\x14\x46\x77\x3f\xc5\x37\x75\x73\xed\xb0\x80\x82\x18\x10\x2a\x1b\xa4\x4a\x85\x04\x12\xcb\xc5\x36\x72\x24\xff\xc9\x71\x7a\x5f\x1f\x91\xaa\x19\xba\x1d\xdd\x9f\x73\x5e\xc7\xe1\x0d\x26\xc7\x92\x67\x57\xfb\x0e\xcf\x27\xfc\x2c\x53\xb0\xd2\xa5\xb3\x78\x19\x8e\x5f\xd8\x43\x51\x29\x62\xfc\x78\x87\xb1\x2b\x63\xb7\xdb\x5e\x30\xa5\xb9\x51\x08\x42\xac\xa6\xe2\x4b\x7f\xbf\xef\x24\x15\x32\xde\x89\xc3\xe7\x71\x38\x1d\xf0\xa0\x2f\x2a\x29\x7f\x6b\x8e\x4f\x5b\xe0\x62\x53\x67\xaa\x8a\x99\x95\x6f\x31\xac\x9d\x65\x76\x35\x66\x0b\xb9\xa0\xd3\x5a\x83\x99\xa5\xa5\x46\x8f\xf8\x16\x00\x40\x77\x2e\xfd\xef\xab\xe3\x3a\x35\x77\x1d\x1b\x9f\x39\x41\x8e\xdb\x7d\x7f\x85\x9b\xc6\x5f\x00\x00\x00\xff\xff\x87\xb1\x00\xe6\xf5\x00\x00\x00")

func phpDockerfileBytes() ([]byte, error) {
	return bindataRead(
		_phpDockerfile,
		"php/Dockerfile",
	)
}

func phpDockerfile() (*asset, error) {
	bytes, err := phpDockerfileBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "php/Dockerfile", size: 245, mode: os.FileMode(420), modTime: time.Unix(1498144407, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _phpNotice = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x51\x4f\x8f\xe3\x26\x14\xbf\xfb\x53\xfc\x34\xa7\x5d\x89\x4e\x77\x56\xea\x65\x6f\x8c\x4d\x62\x54\x07\x22\x4c\x36\xcd\x91\xd8\x64\x4c\xeb\x40\x64\x48\x47\xf3\xed\x2b\x48\xb6\xb3\xb3\x27\xcb\xbc\xf7\xfb\xfb\x36\x5c\xa3\x73\x83\xf5\xd1\x7e\xab\xaa\x3a\x5c\xde\x16\xf7\x32\x25\x7c\xaa\x3f\xe3\xeb\x97\xa7\xa7\xdf\xbe\x7e\x79\xfa\x03\xad\x5d\xc2\x3f\x57\x02\xee\x87\xc7\xaa\xda\xda\xe5\xec\x62\x74\xc1\xc3\x45\x4c\x76\xb1\xc7\x37\xbc\x2c\xc6\x27\x3b\x12\x9c\x16\x6b\x11\x4e\x18\x26\xb3\xbc\x58\x82\x14\x60\xfc\x1b\x2e\x76\x89\xc1\x23\x1c\x93\x71\xde\xf9\x17\x18\x0c\xe1\xf2\x96\x37\xd3\xe4\x22\x62\x38\xa5\x57\xb3\x58\x18\x3f\xc2\xc4\x18\x06\x67\x92\x1d\x31\x86\xe1\x7a\xb6\x3e\x99\x94\xf5\x4e\x6e\xb6\x11\x9f\xd2\x64\xf1\xd0\xdf\x11\x0f\x9f\x8b\xc8\x68\xcd\x0c\xe7\x91\x67\x3f\x46\x78\x75\x69\x0a\xd7\x84\xc5\xc6\xb4\xb8\x21\x73\x10\x38\x3f\xcc\xd7\x31\x7b\xf8\x31\x9e\xdd\xd9\xdd\x15\x32\xbc\x54\x10\x33\xe9\x35\x5a\x52\x7c\x12\x9c\xc3\xe8\x4e\xf9\x6b\x4b\xac\xcb\xf5\x38\xbb\x38\x11\x8c\x2e\x53\x1f\xaf\xc9\x12\xc4\xfc\x58\xca\x24\x39\xc7\xef\x61\x41\xb4\xf3\x9c\x19\x9c\x8d\xb7\xac\xef\xee\xca\x4e\x56\xb9\xe4\x42\xd3\xbd\xa2\xa2\xfb\x3a\x85\xf3\xc7\x24\x2e\xe2\x74\x5d\xbc\x8b\x93\x2d\x98\x31\x20\x86\xa2\xf8\xb7\x1d\x52\x7e\xc9\xeb\xa7\x30\xcf\xe1\x35\x47\x1b\x82\x1f\x5d\x4e\x14\xbf\x55\x95\x9e\x2c\xcc\x31\xfc\x6b\x4b\x96\xdb\x85\x7d\x48\x6e\xb8\xd5\x5d\x0e\x70\x79\xbf\xea\x7d\x14\x27\x33\xcf\x38\xda\x7b\x61\x76\xcc\xf5\x9a\x9f\xe2\x2c\x59\x3e\x26\xe3\x93\x33\x33\x2e\x61\x29\x7a\xbf\xc6\x7c\xac\x2a\xdd\x32\xf4\x72\xa5\xf7\x54\x31\xf0\x1e\x5b\x25\xbf\xf3\x86\x35\x78\xa0\x3d\x78\xff\x40\xb0\xe7\xba\x95\x3b\x8d\x3d\x55\x8a\x0a\x7d\x80\x5c\x81\x8a\x03\xfe\xe4\xa2\x21\x60\x7f\x6d\x15\xeb\x7b\x48\x05\xbe\xd9\x76\x9c\x35\x04\x5c\xd4\xdd\xae\xe1\x62\x8d\xe7\x9d\x86\x90\x1a\x1d\xdf\x70\xcd\x1a\x68\x89\x2c\x78\xa7\xe2\xac\xcf\x64\x1b\xa6\xea\x96\x0a\x4d\x9f\x79\xc7\xf5\x81\x60\xc5\xb5\xc8\x9c\x2b\xa9\x40\xb1\xa5\x4a\xf3\x7a\xd7\x51\x85\xed\x4e\x6d\x65\xcf\x40\x45\x03\x21\x05\x17\x2b\xc5\xc5\x9a\x6d\x98\xd0\x8f\xe0\x02\x42\x82\x7d\x67\x42\xa3\x6f\x69\xd7\x15\x29\xba\xd3\xad\x54\xc5\x5f\x2d\xb7\x07\xc5\xd7\xad\x46\x2b\xbb\x86\xa9\x1e\xcf\x0c\x1d\xa7\xcf\x1d\xbb\x49\x89\x03\xea\x8e\xf2\x0d\x41\x43\x37\x74\xcd\x0a\x4a\xea\x96\xa9\xb2\x76\x77\xb7\x6f\x59\x79\xe2\x02\x54\x80\xd6\x9a\x4b\x91\x63\xd4\x52\x68\x45\x6b\x4d\xa0\xa5\xd2\xff\x43\xf7\xbc\x67\x04\x54\xf1\x3e\x17\xb2\x52\x72\x43\x90\xeb\x94\xab\xd2\x99\xc8\x38\xc1\x6e\x2c\xb9\x6a\x7c\xb8\x88\x54\xe5\x7f\xd7\xb3\x77\x2f\x0d\xa3\x1d\x17\xeb\x3e\x83\x7f\x5e\x7e\xac\xfe\x0b\x00\x00\xff\xff\x3e\x88\xe6\xeb\x33\x04\x00\x00")

func phpNoticeBytes() ([]byte, error) {
	return bindataRead(
		_phpNotice,
		"php/NOTICE",
	)
}

func phpNotice() (*asset, error) {
	bytes, err := phpNoticeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "php/NOTICE", size: 1075, mode: os.FileMode(420), modTime: time.Unix(1496874162, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _phpChartHelmignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x8e\xc1\x6a\x23\x31\x0c\x86\xef\x7a\x8a\x7f\x99\xcb\xee\xb0\x78\x1e\x22\xd9\xc3\x9e\x5a\x48\xc9\xb5\x78\x66\x14\x5b\x89\x47\x36\xb6\x26\x69\x7b\xe8\xb3\x97\x24\x84\xf6\xf2\x81\x3e\x24\xf1\x75\x78\xf6\x66\x5c\xb5\xc1\x32\x24\x68\xae\x8c\x4b\x64\xc5\xb8\x4a\x9a\x45\x03\x8a\x9f\x4e\x3e\x70\x73\xd4\xe1\x25\x4a\x43\x5b\x4b\xc9\xd5\x1a\x5a\xe4\x94\x10\x52\x1e\xb1\x78\x9b\xa2\x68\xf8\x8b\xca\xc9\x9b\x9c\x19\xc5\x5b\xfc\xe1\xbd\xce\xd4\x41\x39\x78\x93\xac\xf8\x5d\x2a\x1f\xe4\x8d\x67\x5c\xc4\x22\x7e\xfd\x71\x78\xd2\xf4\x8e\xac\xb7\xcb\x6b\x12\x0a\x57\x24\x51\x76\xe4\xb6\xbb\xd7\x9d\xe5\xca\xd4\x61\x93\x97\x25\x2b\xf6\x9b\x1d\x66\xa9\x8d\x5c\x10\x1b\x6e\xbc\xe7\x93\x1b\x3f\xea\x70\xe3\x43\xc4\x30\x5c\xf1\x18\xdb\x59\x87\xef\x47\xa3\x9f\x4e\x6b\xc1\x41\x12\x37\xea\x5d\xbb\x14\xea\xdd\xe8\x4f\xd4\x3b\x5b\x0a\xf5\x9f\xd4\x61\xef\xab\xe4\xb5\xe1\xff\xf6\x5f\x23\x57\x6a\x3e\xf2\x64\xe4\x64\x66\x3f\xdc\xf7\x6a\x3e\xd2\x57\x00\x00\x00\xff\xff\xbc\x5b\x94\x77\x4d\x01\x00\x00")

func phpChartHelmignoreBytes() ([]byte, error) {
	return bindataRead(
		_phpChartHelmignore,
		"php/chart/.helmignore",
	)
}

func phpChartHelmignore() (*asset, error) {
	bytes, err := phpChartHelmignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "php/chart/.helmignore", size: 333, mode: os.FileMode(420), modTime: time.Unix(1496874162, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _phpChartChartYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xca\x4b\xcc\x4d\xb5\x52\x28\xc8\x28\xe0\x02\x04\x00\x00\xff\xff\x59\xbe\xed\x73\x0a\x00\x00\x00")

func phpChartChartYamlBytes() ([]byte, error) {
	return bindataRead(
		_phpChartChartYaml,
		"php/chart/Chart.yaml",
	)
}

func phpChartChartYaml() (*asset, error) {
	bytes, err := phpChartChartYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "php/chart/Chart.yaml", size: 10, mode: os.FileMode(420), modTime: time.Unix(1496874162, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _phpChartTemplatesNotesTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x92\x51\x8b\xda\x4e\x14\x47\xdf\xf7\x53\xfc\x08\x82\xff\xff\x83\x63\x9f\x85\x7d\x69\x2b\x45\x58\x54\xec\x76\xa1\x94\x52\xae\x93\xab\x4e\x77\x32\x13\x72\x6f\x74\x25\xe4\xbb\x97\x89\xd6\xcd\xda\xb2\x94\xd2\xbc\x65\x42\xce\x1c\xee\xb9\x37\x4d\x33\x82\xdb\xc0\xc6\xa0\xe4\x82\x20\x9b\xc7\x9c\x97\xb1\xd2\x0c\xe6\x81\x7c\xcd\x62\x84\xab\xbd\xb3\x6c\xf4\x58\x32\xda\xf6\x06\xf8\xc0\x0a\xdd\x31\xa8\x2c\xbd\xb3\xa4\x2e\x06\x7c\x5a\xdd\x61\x7d\x44\x55\x87\xe0\xc2\x36\x7d\x16\x86\x8d\x45\x41\x21\x97\xc9\x0d\xc0\x4f\x65\xac\x14\xf3\xc5\xfb\xe9\xb7\xe5\x62\x75\x7f\x3b\xf8\xef\xb1\x5e\xb3\x55\x8f\x2d\x2b\x46\xa3\x40\x05\x4b\x49\x96\xd1\x34\x30\x2b\xf6\x4c\xc2\x66\x7e\x39\x6d\x5b\x8c\x22\xbe\x4b\x0c\x25\xe9\xee\x36\x6b\x8c\x94\x6c\x4d\xa2\xca\x97\x37\x5f\x4d\x38\x9b\xb7\x19\xce\xca\x92\x48\xca\x45\xe9\x49\x19\xd9\xa6\xf6\x3e\x5d\x92\xc1\xa0\x6d\xff\xbf\x72\x9a\x2d\xaf\x8c\x12\x4f\xfe\xca\xcb\x29\x17\x9d\x92\x28\x69\x2d\x86\xf2\xbc\x62\x11\xee\xce\xce\x2f\x6d\xd6\x09\xd8\x5d\xc4\x4e\xb5\x9c\x8c\xc7\x83\xb3\xc6\x64\x70\x99\xd1\xd8\xc7\xad\x0b\x5d\x24\xf6\xc2\x2f\x4b\xdd\x45\xca\xdf\x92\xa7\x60\xb9\xfa\xe7\xb5\x00\xcc\x17\xf7\xd3\x09\x66\x8a\x82\x8e\x50\x7a\x64\x10\x36\x7c\x40\xe1\x42\xad\x2c\xd8\xc4\xaa\xe3\xf6\x3d\x30\x5b\x42\x23\xd6\x0c\xda\x93\xf3\xb4\xf6\x6c\x4e\xb4\xd3\xf3\x39\xd6\xb0\x14\x70\x20\xb5\xbb\xee\xef\xd3\x88\x10\x37\x7d\x9f\x61\xbf\x83\xec\x2d\x46\x87\xd7\x52\x0e\x9f\x53\x7e\x9c\xae\x1e\x66\xef\x7e\x53\xb3\xa3\xfc\x49\xcb\x57\xee\x79\xd1\x79\xd8\xfc\xcc\xeb\x7b\x03\x30\x2e\x6c\x53\xde\x54\xda\x95\xed\xf0\x97\xc8\xcf\x82\x93\xa4\x70\x55\x8d\x9f\x94\xab\x40\x3e\xed\x71\xaa\x77\x29\xdf\x95\x3c\x33\xae\xd5\xd1\xb6\xa6\xc7\x5a\x93\x70\x1e\x0b\x72\x21\x29\x6b\x04\x59\xcb\x22\x38\xc6\xba\xea\x2f\xc1\x09\x1e\xf2\xc4\xfe\x11\x00\x00\xff\xff\x95\xfb\xb4\x1f\x08\x04\x00\x00")

func phpChartTemplatesNotesTxtBytes() ([]byte, error) {
	return bindataRead(
		_phpChartTemplatesNotesTxt,
		"php/chart/templates/NOTES.txt",
	)
}

func phpChartTemplatesNotesTxt() (*asset, error) {
	bytes, err := phpChartTemplatesNotesTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "php/chart/templates/NOTES.txt", size: 1032, mode: os.FileMode(420), modTime: time.Unix(1496874162, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _phpChartTemplates_helpersTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x90\x41\x6b\xe3\x30\x10\x85\xef\xfe\x15\x0f\xb3\x81\xdd\x80\x9d\xc3\xc2\x1e\x02\x39\x65\x7b\x2a\xa4\xd0\x40\x7b\x56\xac\xa7\x5a\x20\x2b\xae\x34\x0a\x09\x69\xfe\x7b\x91\xdc\x36\x14\x7a\x68\x6f\x83\xf8\xe6\xcd\xd3\x77\x3e\x2f\xe6\x38\xd8\x61\x89\x48\x81\xb1\x8e\x72\x1a\xb9\x1a\x52\x14\xd5\xf5\x5c\x62\xbe\xb8\x5c\xaa\x4c\x55\x37\xc7\x51\x79\x0d\xe9\x09\xaf\x06\x62\x6f\xca\xdc\xf5\x2a\x48\x5b\xbd\x71\x0d\x34\x8d\xf5\x44\x9d\x99\x1a\xcd\xf5\x55\x25\x27\x68\xd7\x05\xdf\xe4\x80\xf6\x41\xb9\xc4\xd8\x66\xf2\xee\xc0\x10\xac\x26\x5e\x20\x21\xf9\x0e\xff\xfe\x96\xd1\x0e\xdb\x64\x8c\x3d\xa2\x6e\xae\x61\xf4\xba\xcc\x53\xaf\x75\xa0\x12\x42\x7d\xdc\x30\xc9\xb9\x13\x9e\x93\x72\xd6\x58\x6a\xa8\x71\x2c\x8d\xdb\xea\x91\x53\x7a\xe1\x25\xdf\xc8\xed\x23\x76\xec\x54\x8a\x44\xdc\x0f\xc4\x6d\xda\x31\x78\x0a\xe3\xf4\x4f\x63\xe9\x74\x84\x0a\x84\xb3\x83\x15\x6a\xc8\x1e\xd2\xdb\x88\xdf\xbb\x53\x71\xf0\x7f\xb3\xcd\xac\xf5\x4f\x88\x23\xbb\x3f\x5f\xe8\xc8\xa5\x3e\x2b\xf9\x55\xd2\x97\xab\xef\xbb\x79\xdf\x1c\x83\xf5\x62\x50\xcf\x62\x33\x8b\x35\xda\x7b\x3a\xaa\xc8\x69\x73\x8a\xfd\x89\xc6\xd7\x00\x00\x00\xff\xff\x34\x01\xd0\x17\x04\x02\x00\x00")

func phpChartTemplates_helpersTplBytes() ([]byte, error) {
	return bindataRead(
		_phpChartTemplates_helpersTpl,
		"php/chart/templates/_helpers.tpl",
	)
}

func phpChartTemplates_helpersTpl() (*asset, error) {
	bytes, err := phpChartTemplates_helpersTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "php/chart/templates/_helpers.tpl", size: 516, mode: os.FileMode(420), modTime: time.Unix(1496874162, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _phpChartTemplatesDeploymentYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x52\xc1\x8a\xdb\x30\x14\xbc\xfb\x2b\x06\x5d\x4b\x1c\xd2\xa3\xae\x5b\xe8\xad\xe4\xb4\xd0\x53\x79\x71\x5e\x13\x51\x59\x12\xd2\x73\x68\xf0\xea\xdf\x8b\x6c\x6f\x2c\x93\x42\xe9\x65\x75\x12\x33\xd2\xcc\xbc\x91\x28\x98\x57\x8e\xc9\x78\xa7\xc1\xbf\x85\x5d\xd9\xa6\xfd\xed\x70\x62\xa1\x43\xf3\xcb\xb8\xb3\xc6\x17\x0e\xd6\xdf\x7b\x76\xd2\xf4\x2c\x74\x26\x21\xdd\x00\x8e\x7a\xd6\x18\x47\x08\xf7\xc1\x92\x30\xd4\xcf\xc1\xda\x02\x2b\xb4\xc8\xb9\x01\x2c\x9d\xd8\xa6\x72\x1a\xe8\xae\x14\x45\x43\x8d\x23\xda\x97\xb2\x6f\xbf\x51\xcf\xc8\x79\xb7\x22\x4b\x18\xbc\x21\x72\xb0\xd4\x31\xd4\x27\x05\xf5\x43\x21\x67\xd5\xa4\xc0\x5d\xd1\x2a\x9c\xe9\x28\x4d\xee\xed\x2b\xd9\x81\x53\xbb\x80\x2f\x7e\x70\x32\x9b\xbf\xe7\x9a\xed\xeb\xe8\x65\xd5\xd1\xca\xa2\x10\xfe\x35\x0d\xf0\x9e\x60\x9a\xc7\x3b\x21\xe3\x38\x3e\x44\x76\x6b\x27\xdb\x09\x1f\x26\xa6\xa7\x0b\x2f\x1d\x2c\xb9\x27\xa8\x8d\x7c\x31\x49\xe2\x1d\x39\xef\x9f\x48\x1f\x2f\x7f\xc5\xdd\xac\xae\x9f\x08\xa1\xcb\x54\xd8\xc6\xf6\x38\x58\x7b\xf4\xd6\x74\xf7\x4d\x6f\xf3\x8d\xf0\x20\xeb\xb8\xc1\x47\xa9\x2a\xda\xad\x33\x1f\x7d\x79\xcb\x4a\x26\x71\xbc\x99\x8e\x5b\xe3\x84\xa3\x23\x5b\x0e\xd4\x52\xd6\xdc\xd8\x71\x4a\xc7\xe8\x4f\xbc\x4a\x02\x57\x91\xf0\x95\xa5\x86\x80\x40\x72\xd5\xd8\x6f\xb1\xff\xb5\x8c\x4c\x67\xf3\xe1\x9e\xc9\x0f\xb1\xe3\xa4\x9b\xf2\x97\xfc\x77\xea\x6d\xf5\x45\x17\x12\x6f\x30\xee\xcc\x4e\x70\xf8\x5c\x6e\xff\x09\x00\x00\xff\xff\x52\x7b\x20\xc6\x87\x03\x00\x00")

func phpChartTemplatesDeploymentYamlBytes() ([]byte, error) {
	return bindataRead(
		_phpChartTemplatesDeploymentYaml,
		"php/chart/templates/deployment.yaml",
	)
}

func phpChartTemplatesDeploymentYaml() (*asset, error) {
	bytes, err := phpChartTemplatesDeploymentYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "php/chart/templates/deployment.yaml", size: 903, mode: os.FileMode(420), modTime: time.Unix(1496874162, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _phpChartTemplatesIngressYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x90\xb1\x6a\xf4\x30\x10\x84\x7b\x3f\xc5\xa0\xf6\xe7\x74\x5c\xab\xf6\xaf\xd2\x1c\x21\xc5\xb5\x61\x6d\x4f\x62\x73\xb2\x2c\xb4\xf2\x11\x70\xf4\xee\x41\x3e\x5f\x02\xa9\xd2\xed\x7c\xec\x0e\x1f\x2b\x71\xbc\x30\xe9\x38\x07\x07\x7e\x64\x86\x3a\xea\xf1\x76\x6a\x99\xe5\xd4\x5c\xc7\xd0\x3b\x3c\x85\xf7\x44\xd5\x66\x62\x96\x5e\xb2\xb8\x06\x08\x32\xd1\x61\x5d\x91\x39\x45\x2f\x99\x30\x6f\x8b\xf7\x15\x1b\x58\x94\xd2\x00\x5e\x5a\x7a\xad\xdb\x40\x37\x48\xca\x0e\x66\x5d\x61\xff\xd7\xd9\x9e\x65\x22\x4a\x39\xfc\x90\xdd\x04\x9f\x48\x8c\x5e\x3a\xc2\xfc\x33\x30\xaf\x06\xa5\x98\x46\x23\xbb\xda\x95\x16\xcf\xad\xf4\x80\x61\xd6\xbc\x49\xd8\x17\x7a\x8a\xf2\x51\x6a\x2b\xbb\x88\x5f\xa8\xb6\x15\x65\x3f\x4f\x32\x86\xbb\x15\x30\xe4\x1c\xef\x56\x40\x94\x3c\xe8\x23\x1c\xb6\xe8\x70\xdc\x33\xd0\x4a\x77\x65\xe8\xdd\x37\x00\x94\xe9\x36\x76\x3c\xff\xe1\x01\xbf\x4e\x9e\xe7\xb4\xeb\xee\x6a\x3b\xb7\xf5\xf3\x29\x88\xaf\x0b\xf5\xf2\x2b\x00\x00\xff\xff\x54\x0e\x39\x31\x96\x01\x00\x00")

func phpChartTemplatesIngressYamlBytes() ([]byte, error) {
	return bindataRead(
		_phpChartTemplatesIngressYaml,
		"php/chart/templates/ingress.yaml",
	)
}

func phpChartTemplatesIngressYaml() (*asset, error) {
	bytes, err := phpChartTemplatesIngressYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "php/chart/templates/ingress.yaml", size: 406, mode: os.FileMode(420), modTime: time.Unix(1496874162, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _phpChartTemplatesServiceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\xcd\x4a\x04\x31\x10\x84\xef\x79\x8a\x22\x57\xd9\x80\xd7\x5c\xf7\x2e\x03\xca\x5e\xa5\xcd\xb6\x3a\x98\x49\x42\xa7\x77\x51\xc6\xbc\xbb\x64\x22\x0a\xfe\xec\xad\xa9\xf4\x97\x2f\x29\x2a\xf3\x81\xa5\xce\x39\x79\x9c\xaf\xcd\xcb\x9c\x8e\x1e\xb7\x2c\xe7\x39\xb0\x59\x58\xe9\x48\x4a\xde\x00\x89\x16\xf6\x58\x57\x28\x2f\x25\x92\x32\xec\xe3\x29\xc6\x1e\x5b\x38\xb4\x66\x80\x48\x0f\x1c\x6b\xdf\x06\xc2\x33\x89\x7a\xd8\x75\x85\xdb\xf7\xd9\xdd\xd0\xc2\x68\x6d\xf7\x9d\x7c\x9a\xf1\x0e\xe1\x12\x29\x30\xec\x95\x85\xbd\xb7\x68\xcd\x9a\x5a\x38\xf4\xbb\xf4\xad\x0c\xb3\x3b\x50\x3c\x71\x75\x75\x3c\xcf\xf5\x83\x21\x2e\x59\x74\xf3\xee\xb6\xf1\xcf\x6d\x7e\x55\x96\x44\x71\xca\xa2\x83\x02\x94\xe4\x89\x75\xfa\x0f\x99\xd3\x6f\xa4\x48\xd6\x1c\x72\xf4\xb8\xdb\x4f\x5b\xf2\xd5\xcc\x4f\x3c\x8d\x0f\x1b\xa0\x72\xe4\xa0\x59\x46\x35\x54\xca\xe5\x26\x3f\x02\x00\x00\xff\xff\xce\x5a\xb0\xc7\x95\x01\x00\x00")

func phpChartTemplatesServiceYamlBytes() ([]byte, error) {
	return bindataRead(
		_phpChartTemplatesServiceYaml,
		"php/chart/templates/service.yaml",
	)
}

func phpChartTemplatesServiceYaml() (*asset, error) {
	bytes, err := phpChartTemplatesServiceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "php/chart/templates/service.yaml", size: 405, mode: os.FileMode(420), modTime: time.Unix(1496874162, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _phpChartValuesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8f\x31\x6f\xe3\x30\x0c\x46\x77\xfd\x8a\x0f\xc8\x1c\x23\xc9\x72\x81\xb6\x43\x32\x5c\x80\x4b\xe1\xa1\x4b\x47\x46\xa1\x1d\xa2\x92\xa5\x52\x54\x50\xff\xfb\xc2\xde\xb2\x75\x23\x89\x87\x47\xbc\x0d\xce\x3c\x50\x8b\x86\x27\xc5\xc6\x15\x43\x56\xf4\xff\xfa\xce\x6d\xf0\xfe\x90\x0a\xa9\x20\x7c\xfc\xbd\xfe\xdf\x0e\x59\x13\x99\xf1\x1d\x83\x44\x5e\x80\x33\x87\x48\xca\x78\x92\x0a\xdd\x22\x57\x58\xc6\x8d\x51\xa8\x56\xbe\x43\x26\xcb\x98\x73\x53\x18\xa7\x12\xc9\xb8\x76\x4e\xb9\x44\x09\x74\xca\x6d\x32\x8f\x83\x93\x44\x23\x7b\x07\x28\x8f\x52\x4d\x67\x8f\x7b\x0e\x9f\xac\x9d\x64\x07\x64\x1d\x3d\xa2\xdc\x94\x74\x76\xc0\x44\x89\x3d\xca\xa3\x38\xc0\x68\xf4\xf8\xd3\xed\xb7\x54\x28\x3c\xd8\x01\xa5\xc5\xd8\xe7\x28\x61\xf6\xb8\x0c\x6f\xd9\x7a\xe5\xca\x93\xb9\xca\xfa\x94\xb0\xbe\x79\x31\xcc\x85\x3d\x4e\xb1\x55\x63\xbd\xf4\x0e\xe0\x6f\x63\x9d\x28\xf6\x59\xcd\xe3\xb8\x73\x58\x2a\x5e\x4f\xca\x35\x37\x0d\x5c\x17\x5d\x94\x24\xb6\x4e\x40\x28\xcd\x63\xbf\xdb\xa5\x75\x4b\x9c\xf2\x52\xb3\x3f\x1c\xaf\xb2\xf6\x7d\x35\xae\xbf\x61\x7f\x02\x00\x00\xff\xff\xe0\xf6\x98\xbd\x94\x01\x00\x00")

func phpChartValuesYamlBytes() ([]byte, error) {
	return bindataRead(
		_phpChartValuesYaml,
		"php/chart/values.yaml",
	)
}

func phpChartValuesYaml() (*asset, error) {
	bytes, err := phpChartValuesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "php/chart/values.yaml", size: 404, mode: os.FileMode(420), modTime: time.Unix(1497118555, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _phpDetect = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\xc9\xb1\x0e\x82\x30\x10\x06\xe0\xfd\x9e\xe2\xf7\x34\x6c\x52\x99\x7d\x01\x47\x76\xc2\x20\x78\x4d\xcf\xe8\xb5\xe1\xd0\x30\xf0\xf0\xa6\x83\xe3\x97\xef\x78\x08\x1f\x5f\xc2\xa4\x16\xc4\xbe\x98\xee\x9e\x88\x34\x62\x18\x70\x8e\xe0\x53\x17\xe6\xfc\x2e\xd9\x65\x69\x9f\x9e\x8d\xb1\xef\xff\x50\x7b\xc8\xd6\x96\x54\x18\xe3\x78\xc5\x9a\xc4\x08\x90\x39\x65\x70\x7f\xeb\x19\x4d\x03\xd9\x74\xc5\x85\xe4\xe5\x52\xaf\xaa\xa3\xa8\x44\xbf\x00\x00\x00\xff\xff\xbc\x83\x55\xb5\x78\x00\x00\x00")

func phpDetectBytes() ([]byte, error) {
	return bindataRead(
		_phpDetect,
		"php/detect",
	)
}

func phpDetect() (*asset, error) {
	bytes, err := phpDetectBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "php/detect", size: 120, mode: os.FileMode(493), modTime: time.Unix(1496874162, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _pythonDockerignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xc9\x4f\xce\x4e\x2d\x4a\xcb\xcc\x49\xe5\x4a\x29\x4a\x4c\x2b\xd1\x2b\xc9\xcf\xcd\xe1\x4a\xce\x48\x2c\x2a\xd1\xe7\xf2\xf3\x0f\xf1\x74\x76\xe5\x02\x04\x00\x00\xff\xff\x18\xba\x47\x9a\x24\x00\x00\x00")

func pythonDockerignoreBytes() ([]byte, error) {
	return bindataRead(
		_pythonDockerignore,
		"python/.dockerignore",
	)
}

func pythonDockerignore() (*asset, error) {
	bytes, err := pythonDockerignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "python/.dockerignore", size: 36, mode: os.FileMode(420), modTime: time.Unix(1496874162, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _pythonDockerfile = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x0b\xf2\xf7\x55\x28\xa8\x2c\xc9\xc8\xcf\xb3\xca\xcf\x4b\x2a\xcd\xcc\x49\xe1\x72\x8d\x08\xf0\x0f\x76\x55\xb0\x30\xb0\x30\xe0\x72\xf5\x0b\x09\x8a\x0c\xf0\xf7\xf4\x0b\x51\x88\x56\x82\xa8\x53\x8a\xe5\x72\xf6\x75\x51\x88\x56\x4a\x2c\x28\xd0\x2b\xa8\x54\x8a\xe5\x02\x04\x00\x00\xff\xff\x9d\x8c\x34\xeb\x45\x00\x00\x00")

func pythonDockerfileBytes() ([]byte, error) {
	return bindataRead(
		_pythonDockerfile,
		"python/Dockerfile",
	)
}

func pythonDockerfile() (*asset, error) {
	bytes, err := pythonDockerfileBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "python/Dockerfile", size: 69, mode: os.FileMode(420), modTime: time.Unix(1496874162, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _pythonNotice = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x51\x4f\x8f\xe3\x26\x14\xbf\xfb\x53\xfc\x34\xa7\x5d\x89\x4e\x77\x56\xea\x65\x6f\x8c\x4d\x62\x54\x07\x22\x4c\x36\xcd\x91\xd8\x64\x4c\xeb\x40\x64\x48\x47\xf3\xed\x2b\x48\xb6\xb3\xb3\x27\xcb\xbc\xf7\xfb\xfb\x36\x5c\xa3\x73\x83\xf5\xd1\x7e\xab\xaa\x3a\x5c\xde\x16\xf7\x32\x25\x7c\xaa\x3f\xe3\xeb\x97\xa7\xa7\xdf\xbe\x7e\x79\xfa\x03\xad\x5d\xc2\x3f\x57\x02\xee\x87\xc7\xaa\xda\xda\xe5\xec\x62\x74\xc1\xc3\x45\x4c\x76\xb1\xc7\x37\xbc\x2c\xc6\x27\x3b\x12\x9c\x16\x6b\x11\x4e\x18\x26\xb3\xbc\x58\x82\x14\x60\xfc\x1b\x2e\x76\x89\xc1\x23\x1c\x93\x71\xde\xf9\x17\x18\x0c\xe1\xf2\x96\x37\xd3\xe4\x22\x62\x38\xa5\x57\xb3\x58\x18\x3f\xc2\xc4\x18\x06\x67\x92\x1d\x31\x86\xe1\x7a\xb6\x3e\x99\x94\xf5\x4e\x6e\xb6\x11\x9f\xd2\x64\xf1\xd0\xdf\x11\x0f\x9f\x8b\xc8\x68\xcd\x0c\xe7\x91\x67\x3f\x46\x78\x75\x69\x0a\xd7\x84\xc5\xc6\xb4\xb8\x21\x73\x10\x38\x3f\xcc\xd7\x31\x7b\xf8\x31\x9e\xdd\xd9\xdd\x15\x32\xbc\x54\x10\x33\xe9\x35\x5a\x52\x7c\x12\x9c\xc3\xe8\x4e\xf9\x6b\x4b\xac\xcb\xf5\x38\xbb\x38\x11\x8c\x2e\x53\x1f\xaf\xc9\x12\xc4\xfc\x58\xca\x24\x39\xc7\xef\x61\x41\xb4\xf3\x9c\x19\x9c\x8d\xb7\xac\xef\xee\xca\x4e\x56\xb9\xe4\x42\xd3\xbd\xa2\xa2\xfb\x3a\x85\xf3\xc7\x24\x2e\xe2\x74\x5d\xbc\x8b\x93\x2d\x98\x31\x20\x86\xa2\xf8\xb7\x1d\x52\x7e\xc9\xeb\xa7\x30\xcf\xe1\x35\x47\x1b\x82\x1f\x5d\x4e\x14\xbf\x55\x95\x9e\x2c\xcc\x31\xfc\x6b\x4b\x96\xdb\x85\x7d\x48\x6e\xb8\xd5\x5d\x0e\x70\x79\xbf\xea\x7d\x14\x27\x33\xcf\x38\xda\x7b\x61\x76\xcc\xf5\x9a\x9f\xe2\x2c\x59\x3e\x26\xe3\x93\x33\x33\x2e\x61\x29\x7a\xbf\xc6\x7c\xac\x2a\xdd\x32\xf4\x72\xa5\xf7\x54\x31\xf0\x1e\x5b\x25\xbf\xf3\x86\x35\x78\xa0\x3d\x78\xff\x40\xb0\xe7\xba\x95\x3b\x8d\x3d\x55\x8a\x0a\x7d\x80\x5c\x81\x8a\x03\xfe\xe4\xa2\x21\x60\x7f\x6d\x15\xeb\x7b\x48\x05\xbe\xd9\x76\x9c\x35\x04\x5c\xd4\xdd\xae\xe1\x62\x8d\xe7\x9d\x86\x90\x1a\x1d\xdf\x70\xcd\x1a\x68\x89\x2c\x78\xa7\xe2\xac\xcf\x64\x1b\xa6\xea\x96\x0a\x4d\x9f\x79\xc7\xf5\x81\x60\xc5\xb5\xc8\x9c\x2b\xa9\x40\xb1\xa5\x4a\xf3\x7a\xd7\x51\x85\xed\x4e\x6d\x65\xcf\x40\x45\x03\x21\x05\x17\x2b\xc5\xc5\x9a\x6d\x98\xd0\x8f\xe0\x02\x42\x82\x7d\x67\x42\xa3\x6f\x69\xd7\x15\x29\xba\xd3\xad\x54\xc5\x5f\x2d\xb7\x07\xc5\xd7\xad\x46\x2b\xbb\x86\xa9\x1e\xcf\x0c\x1d\xa7\xcf\x1d\xbb\x49\x89\x03\xea\x8e\xf2\x0d\x41\x43\x37\x74\xcd\x0a\x4a\xea\x96\xa9\xb2\x76\x77\xb7\x6f\x59\x79\xe2\x02\x54\x80\xd6\x9a\x4b\x91\x63\xd4\x52\x68\x45\x6b\x4d\xa0\xa5\xd2\xff\x43\xf7\xbc\x67\x04\x54\xf1\x3e\x17\xb2\x52\x72\x43\x90\xeb\x94\xab\xd2\x99\xc8\x38\xc1\x6e\x2c\xb9\x6a\x7c\xb8\x88\x54\xe5\x7f\xd7\xb3\x77\x2f\x0d\xa3\x1d\x17\xeb\x3e\x83\x7f\x5e\x7e\xac\xfe\x0b\x00\x00\xff\xff\x3e\x88\xe6\xeb\x33\x04\x00\x00")

func pythonNoticeBytes() ([]byte, error) {
	return bindataRead(
		_pythonNotice,
		"python/NOTICE",
	)
}

func pythonNotice() (*asset, error) {
	bytes, err := pythonNoticeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "python/NOTICE", size: 1075, mode: os.FileMode(420), modTime: time.Unix(1496874162, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _pythonChartHelmignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x8e\xc1\x6a\x23\x31\x0c\x86\xef\x7a\x8a\x7f\x99\xcb\xee\xb0\x78\x1e\x22\xd9\xc3\x9e\x5a\x48\xc9\xb5\x78\x66\x14\x5b\x89\x47\x36\xb6\x26\x69\x7b\xe8\xb3\x97\x24\x84\xf6\xf2\x81\x3e\x24\xf1\x75\x78\xf6\x66\x5c\xb5\xc1\x32\x24\x68\xae\x8c\x4b\x64\xc5\xb8\x4a\x9a\x45\x03\x8a\x9f\x4e\x3e\x70\x73\xd4\xe1\x25\x4a\x43\x5b\x4b\xc9\xd5\x1a\x5a\xe4\x94\x10\x52\x1e\xb1\x78\x9b\xa2\x68\xf8\x8b\xca\xc9\x9b\x9c\x19\xc5\x5b\xfc\xe1\xbd\xce\xd4\x41\x39\x78\x93\xac\xf8\x5d\x2a\x1f\xe4\x8d\x67\x5c\xc4\x22\x7e\xfd\x71\x78\xd2\xf4\x8e\xac\xb7\xcb\x6b\x12\x0a\x57\x24\x51\x76\xe4\xb6\xbb\xd7\x9d\xe5\xca\xd4\x61\x93\x97\x25\x2b\xf6\x9b\x1d\x66\xa9\x8d\x5c\x10\x1b\x6e\xbc\xe7\x93\x1b\x3f\xea\x70\xe3\x43\xc4\x30\x5c\xf1\x18\xdb\x59\x87\xef\x47\xa3\x9f\x4e\x6b\xc1\x41\x12\x37\xea\x5d\xbb\x14\xea\xdd\xe8\x4f\xd4\x3b\x5b\x0a\xf5\x9f\xd4\x61\xef\xab\xe4\xb5\xe1\xff\xf6\x5f\x23\x57\x6a\x3e\xf2\x64\xe4\x64\x66\x3f\xdc\xf7\x6a\x3e\xd2\x57\x00\x00\x00\xff\xff\xbc\x5b\x94\x77\x4d\x01\x00\x00")

func pythonChartHelmignoreBytes() ([]byte, error) {
	return bindataRead(
		_pythonChartHelmignore,
		"python/chart/.helmignore",
	)
}

func pythonChartHelmignore() (*asset, error) {
	bytes, err := pythonChartHelmignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "python/chart/.helmignore", size: 333, mode: os.FileMode(420), modTime: time.Unix(1496874162, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _pythonChartChartYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xca\x4b\xcc\x4d\xb5\x52\x28\xa8\x2c\xc9\xc8\xcf\xe3\x02\x04\x00\x00\xff\xff\xf1\xba\xd4\xcc\x0d\x00\x00\x00")

func pythonChartChartYamlBytes() ([]byte, error) {
	return bindataRead(
		_pythonChartChartYaml,
		"python/chart/Chart.yaml",
	)
}

func pythonChartChartYaml() (*asset, error) {
	bytes, err := pythonChartChartYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "python/chart/Chart.yaml", size: 13, mode: os.FileMode(420), modTime: time.Unix(1496874162, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _pythonChartTemplatesNotesTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x92\x51\x8b\xda\x4e\x14\x47\xdf\xf7\x53\xfc\x08\x82\xff\xff\x83\x63\x9f\x85\x7d\x69\x2b\x45\x58\x54\xec\x76\xa1\x94\x52\xae\x93\xab\x4e\x77\x32\x13\x72\x6f\x74\x25\xe4\xbb\x97\x89\xd6\xcd\xda\xb2\x94\xd2\xbc\x65\x42\xce\x1c\xee\xb9\x37\x4d\x33\x82\xdb\xc0\xc6\xa0\xe4\x82\x20\x9b\xc7\x9c\x97\xb1\xd2\x0c\xe6\x81\x7c\xcd\x62\x84\xab\xbd\xb3\x6c\xf4\x58\x32\xda\xf6\x06\xf8\xc0\x0a\xdd\x31\xa8\x2c\xbd\xb3\xa4\x2e\x06\x7c\x5a\xdd\x61\x7d\x44\x55\x87\xe0\xc2\x36\x7d\x16\x86\x8d\x45\x41\x21\x97\xc9\x0d\xc0\x4f\x65\xac\x14\xf3\xc5\xfb\xe9\xb7\xe5\x62\x75\x7f\x3b\xf8\xef\xb1\x5e\xb3\x55\x8f\x2d\x2b\x46\xa3\x40\x05\x4b\x49\x96\xd1\x34\x30\x2b\xf6\x4c\xc2\x66\x7e\x39\x6d\x5b\x8c\x22\xbe\x4b\x0c\x25\xe9\xee\x36\x6b\x8c\x94\x6c\x4d\xa2\xca\x97\x37\x5f\x4d\x38\x9b\xb7\x19\xce\xca\x92\x48\xca\x45\xe9\x49\x19\xd9\xa6\xf6\x3e\x5d\x92\xc1\xa0\x6d\xff\xbf\x72\x9a\x2d\xaf\x8c\x12\x4f\xfe\xca\xcb\x29\x17\x9d\x92\x28\x69\x2d\x86\xf2\xbc\x62\x11\xee\xce\xce\x2f\x6d\xd6\x09\xd8\x5d\xc4\x4e\xb5\x9c\x8c\xc7\x83\xb3\xc6\x64\x70\x99\xd1\xd8\xc7\xad\x0b\x5d\x24\xf6\xc2\x2f\x4b\xdd\x45\xca\xdf\x92\xa7\x60\xb9\xfa\xe7\xb5\x00\xcc\x17\xf7\xd3\x09\x66\x8a\x82\x8e\x50\x7a\x64\x10\x36\x7c\x40\xe1\x42\xad\x2c\xd8\xc4\xaa\xe3\xf6\x3d\x30\x5b\x42\x23\xd6\x0c\xda\x93\xf3\xb4\xf6\x6c\x4e\xb4\xd3\xf3\x39\xd6\xb0\x14\x70\x20\xb5\xbb\xee\xef\xd3\x88\x10\x37\x7d\x9f\x61\xbf\x83\xec\x2d\x46\x87\xd7\x52\x0e\x9f\x53\x7e\x9c\xae\x1e\x66\xef\x7e\x53\xb3\xa3\xfc\x49\xcb\x57\xee\x79\xd1\x79\xd8\xfc\xcc\xeb\x7b\x03\x30\x2e\x6c\x53\xde\x54\xda\x95\xed\xf0\x97\xc8\xcf\x82\x93\xa4\x70\x55\x8d\x9f\x94\xab\x40\x3e\xed\x71\xaa\x77\x29\xdf\x95\x3c\x33\xae\xd5\xd1\xb6\xa6\xc7\x5a\x93\x70\x1e\x0b\x72\x21\x29\x6b\x04\x59\xcb\x22\x38\xc6\xba\xea\x2f\xc1\x09\x1e\xf2\xc4\xfe\x11\x00\x00\xff\xff\x95\xfb\xb4\x1f\x08\x04\x00\x00")

func pythonChartTemplatesNotesTxtBytes() ([]byte, error) {
	return bindataRead(
		_pythonChartTemplatesNotesTxt,
		"python/chart/templates/NOTES.txt",
	)
}

func pythonChartTemplatesNotesTxt() (*asset, error) {
	bytes, err := pythonChartTemplatesNotesTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "python/chart/templates/NOTES.txt", size: 1032, mode: os.FileMode(420), modTime: time.Unix(1496874162, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _pythonChartTemplates_helpersTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x90\x41\x6b\xe3\x30\x10\x85\xef\xfe\x15\x0f\xb3\x81\xdd\x80\x9d\xc3\xc2\x1e\x02\x39\x65\x7b\x2a\xa4\xd0\x40\x7b\x56\xac\xa7\x5a\x20\x2b\xae\x34\x0a\x09\x69\xfe\x7b\x91\xdc\x36\x14\x7a\x68\x6f\x83\xf8\xe6\xcd\xd3\x77\x3e\x2f\xe6\x38\xd8\x61\x89\x48\x81\xb1\x8e\x72\x1a\xb9\x1a\x52\x14\xd5\xf5\x5c\x62\xbe\xb8\x5c\xaa\x4c\x55\x37\xc7\x51\x79\x0d\xe9\x09\xaf\x06\x62\x6f\xca\xdc\xf5\x2a\x48\x5b\xbd\x71\x0d\x34\x8d\xf5\x44\x9d\x99\x1a\xcd\xf5\x55\x25\x27\x68\xd7\x05\xdf\xe4\x80\xf6\x41\xb9\xc4\xd8\x66\xf2\xee\xc0\x10\xac\x26\x5e\x20\x21\xf9\x0e\xff\xfe\x96\xd1\x0e\xdb\x64\x8c\x3d\xa2\x6e\xae\x61\xf4\xba\xcc\x53\xaf\x75\xa0\x12\x42\x7d\xdc\x30\xc9\xb9\x13\x9e\x93\x72\xd6\x58\x6a\xa8\x71\x2c\x8d\xdb\xea\x91\x53\x7a\xe1\x25\xdf\xc8\xed\x23\x76\xec\x54\x8a\x44\xdc\x0f\xc4\x6d\xda\x31\x78\x0a\xe3\xf4\x4f\x63\xe9\x74\x84\x0a\x84\xb3\x83\x15\x6a\xc8\x1e\xd2\xdb\x88\xdf\xbb\x53\x71\xf0\x7f\xb3\xcd\xac\xf5\x4f\x88\x23\xbb\x3f\x5f\xe8\xc8\xa5\x3e\x2b\xf9\x55\xd2\x97\xab\xef\xbb\x79\xdf\x1c\x83\xf5\x62\x50\xcf\x62\x33\x8b\x35\xda\x7b\x3a\xaa\xc8\x69\x73\x8a\xfd\x89\xc6\xd7\x00\x00\x00\xff\xff\x34\x01\xd0\x17\x04\x02\x00\x00")

func pythonChartTemplates_helpersTplBytes() ([]byte, error) {
	return bindataRead(
		_pythonChartTemplates_helpersTpl,
		"python/chart/templates/_helpers.tpl",
	)
}

func pythonChartTemplates_helpersTpl() (*asset, error) {
	bytes, err := pythonChartTemplates_helpersTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "python/chart/templates/_helpers.tpl", size: 516, mode: os.FileMode(420), modTime: time.Unix(1496874162, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _pythonChartTemplatesDeploymentYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x52\xc1\x8a\xdb\x30\x14\xbc\xfb\x2b\x06\x5d\x4b\x1c\xd2\xa3\xae\x5b\xe8\xad\xe4\xb4\xd0\x53\x79\x71\x5e\x13\x51\x59\x12\xd2\x73\x68\xf0\xea\xdf\x8b\x6c\x6f\x2c\x93\x42\xe9\x65\x75\x12\x33\xd2\xcc\xbc\x91\x28\x98\x57\x8e\xc9\x78\xa7\xc1\xbf\x85\x5d\xd9\xa6\xfd\xed\x70\x62\xa1\x43\xf3\xcb\xb8\xb3\xc6\x17\x0e\xd6\xdf\x7b\x76\xd2\xf4\x2c\x74\x26\x21\xdd\x00\x8e\x7a\xd6\x18\x47\x08\xf7\xc1\x92\x30\xd4\xcf\xc1\xda\x02\x2b\xb4\xc8\xb9\x01\x2c\x9d\xd8\xa6\x72\x1a\xe8\xae\x14\x45\x43\x8d\x23\xda\x97\xb2\x6f\xbf\x51\xcf\xc8\x79\xb7\x22\x4b\x18\xbc\x21\x72\xb0\xd4\x31\xd4\x27\x05\xf5\x43\x21\x67\xd5\xa4\xc0\x5d\xd1\x2a\x9c\xe9\x28\x4d\xee\xed\x2b\xd9\x81\x53\xbb\x80\x2f\x7e\x70\x32\x9b\xbf\xe7\x9a\xed\xeb\xe8\x65\xd5\xd1\xca\xa2\x10\xfe\x35\x0d\xf0\x9e\x60\x9a\xc7\x3b\x21\xe3\x38\x3e\x44\x76\x6b\x27\xdb\x09\x1f\x26\xa6\xa7\x0b\x2f\x1d\x2c\xb9\x27\xa8\x8d\x7c\x31\x49\xe2\x1d\x39\xef\x9f\x48\x1f\x2f\x7f\xc5\xdd\xac\xae\x9f\x08\xa1\xcb\x54\xd8\xc6\xf6\x38\x58\x7b\xf4\xd6\x74\xf7\x4d\x6f\xf3\x8d\xf0\x20\xeb\xb8\xc1\x47\xa9\x2a\xda\xad\x33\x1f\x7d\x79\xcb\x4a\x26\x71\xbc\x99\x8e\x5b\xe3\x84\xa3\x23\x5b\x0e\xd4\x52\xd6\xdc\xd8\x71\x4a\xc7\xe8\x4f\xbc\x4a\x02\x57\x91\xf0\x95\xa5\x86\x80\x40\x72\xd5\xd8\x6f\xb1\xff\xb5\x8c\x4c\x67\xf3\xe1\x9e\xc9\x0f\xb1\xe3\xa4\x9b\xf2\x97\xfc\x77\xea\x6d\xf5\x45\x17\x12\x6f\x30\xee\xcc\x4e\x70\xf8\x5c\x6e\xff\x09\x00\x00\xff\xff\x52\x7b\x20\xc6\x87\x03\x00\x00")

func pythonChartTemplatesDeploymentYamlBytes() ([]byte, error) {
	return bindataRead(
		_pythonChartTemplatesDeploymentYaml,
		"python/chart/templates/deployment.yaml",
	)
}

func pythonChartTemplatesDeploymentYaml() (*asset, error) {
	bytes, err := pythonChartTemplatesDeploymentYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "python/chart/templates/deployment.yaml", size: 903, mode: os.FileMode(420), modTime: time.Unix(1496874162, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _pythonChartTemplatesIngressYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x90\xb1\x6a\xf4\x30\x10\x84\x7b\x3f\xc5\xa0\xf6\xe7\x74\x5c\xab\xf6\xaf\xd2\x1c\x21\xc5\xb5\x61\x6d\x4f\x62\x73\xb2\x2c\xb4\xf2\x11\x70\xf4\xee\x41\x3e\x5f\x02\xa9\xd2\xed\x7c\xec\x0e\x1f\x2b\x71\xbc\x30\xe9\x38\x07\x07\x7e\x64\x86\x3a\xea\xf1\x76\x6a\x99\xe5\xd4\x5c\xc7\xd0\x3b\x3c\x85\xf7\x44\xd5\x66\x62\x96\x5e\xb2\xb8\x06\x08\x32\xd1\x61\x5d\x91\x39\x45\x2f\x99\x30\x6f\x8b\xf7\x15\x1b\x58\x94\xd2\x00\x5e\x5a\x7a\xad\xdb\x40\x37\x48\xca\x0e\x66\x5d\x61\xff\xd7\xd9\x9e\x65\x22\x4a\x39\xfc\x90\xdd\x04\x9f\x48\x8c\x5e\x3a\xc2\xfc\x33\x30\xaf\x06\xa5\x98\x46\x23\xbb\xda\x95\x16\xcf\xad\xf4\x80\x61\xd6\xbc\x49\xd8\x17\x7a\x8a\xf2\x51\x6a\x2b\xbb\x88\x5f\xa8\xb6\x15\x65\x3f\x4f\x32\x86\xbb\x15\x30\xe4\x1c\xef\x56\x40\x94\x3c\xe8\x23\x1c\xb6\xe8\x70\xdc\x33\xd0\x4a\x77\x65\xe8\xdd\x37\x00\x94\xe9\x36\x76\x3c\xff\xe1\x01\xbf\x4e\x9e\xe7\xb4\xeb\xee\x6a\x3b\xb7\xf5\xf3\x29\x88\xaf\x0b\xf5\xf2\x2b\x00\x00\xff\xff\x54\x0e\x39\x31\x96\x01\x00\x00")

func pythonChartTemplatesIngressYamlBytes() ([]byte, error) {
	return bindataRead(
		_pythonChartTemplatesIngressYaml,
		"python/chart/templates/ingress.yaml",
	)
}

func pythonChartTemplatesIngressYaml() (*asset, error) {
	bytes, err := pythonChartTemplatesIngressYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "python/chart/templates/ingress.yaml", size: 406, mode: os.FileMode(420), modTime: time.Unix(1496874162, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _pythonChartTemplatesServiceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\xcd\x4a\x04\x31\x10\x84\xef\x79\x8a\x22\x57\xd9\x80\xd7\x5c\xf7\x2e\x03\xca\x5e\xa5\xcd\xb6\x3a\x98\x49\x42\xa7\x77\x51\xc6\xbc\xbb\x64\x22\x0a\xfe\xec\xad\xa9\xf4\x97\x2f\x29\x2a\xf3\x81\xa5\xce\x39\x79\x9c\xaf\xcd\xcb\x9c\x8e\x1e\xb7\x2c\xe7\x39\xb0\x59\x58\xe9\x48\x4a\xde\x00\x89\x16\xf6\x58\x57\x28\x2f\x25\x92\x32\xec\xe3\x29\xc6\x1e\x5b\x38\xb4\x66\x80\x48\x0f\x1c\x6b\xdf\x06\xc2\x33\x89\x7a\xd8\x75\x85\xdb\xf7\xd9\xdd\xd0\xc2\x68\x6d\xf7\x9d\x7c\x9a\xf1\x0e\xe1\x12\x29\x30\xec\x95\x85\xbd\xb7\x68\xcd\x9a\x5a\x38\xf4\xbb\xf4\xad\x0c\xb3\x3b\x50\x3c\x71\x75\x75\x3c\xcf\xf5\x83\x21\x2e\x59\x74\xf3\xee\xb6\xf1\xcf\x6d\x7e\x55\x96\x44\x71\xca\xa2\x83\x02\x94\xe4\x89\x75\xfa\x0f\x99\xd3\x6f\xa4\x48\xd6\x1c\x72\xf4\xb8\xdb\x4f\x5b\xf2\xd5\xcc\x4f\x3c\x8d\x0f\x1b\xa0\x72\xe4\xa0\x59\x46\x35\x54\xca\xe5\x26\x3f\x02\x00\x00\xff\xff\xce\x5a\xb0\xc7\x95\x01\x00\x00")

func pythonChartTemplatesServiceYamlBytes() ([]byte, error) {
	return bindataRead(
		_pythonChartTemplatesServiceYaml,
		"python/chart/templates/service.yaml",
	)
}

func pythonChartTemplatesServiceYaml() (*asset, error) {
	bytes, err := pythonChartTemplatesServiceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "python/chart/templates/service.yaml", size: 405, mode: os.FileMode(420), modTime: time.Unix(1496874162, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _pythonChartValuesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8f\xb1\x8e\xdb\x40\x0c\x44\xfb\xfd\x8a\x01\x5c\xc7\x90\x5d\x19\xdb\x05\x76\x63\x20\x0e\x54\xa4\x49\xb9\x92\x28\x99\x08\x57\x54\xb8\x5c\xe3\xf4\xf7\x07\x09\xd7\xdc\x55\xd7\x91\xc4\xe0\x71\xde\x01\x37\x1a\x53\x15\xc7\x2b\x49\xa5\x82\x51\x0d\xcb\xea\x4f\x9d\x8f\xe1\x80\x3f\x4f\x2e\xe0\x82\x84\xbf\x3f\x1f\xbf\x7e\x8c\x6a\x39\xb9\xd3\x80\x91\x85\xb6\xc0\x8d\x7a\x49\x46\x78\x25\xe3\xd4\x09\x15\xb8\xa2\x23\x2c\xa9\x14\x1a\xc0\xb3\x2b\x56\xad\x06\xa7\xbc\x48\x72\x2a\xc7\x60\xb4\x08\xf7\xe9\xaa\x75\xf6\x88\x73\xe0\x9c\x26\x8a\x01\x30\x9a\xb8\xb8\xad\x11\x83\xf6\xff\xc8\x8e\xac\x01\x50\x9b\x22\x84\x3b\x4b\xb6\x06\x60\x4e\x99\xe2\x47\xc5\x00\x78\x9a\x22\x74\xee\x2a\xcb\x10\x80\xa5\x8a\xb4\x2a\xdc\xaf\x11\xf7\xf1\xb7\x7a\x6b\x54\x68\xf6\x50\xc8\x5e\xdc\xef\x6f\xbe\x12\xd6\x85\x22\xae\x52\x8b\x93\xdd\xdb\x00\xd0\x9b\x93\xcd\x49\x5a\x35\x8f\xb8\x34\x01\x9b\xc8\xa7\xd3\xa5\x09\x46\x45\xab\xf5\x54\x36\xa6\x70\x66\xdf\x27\xa0\x5f\x6a\xc4\xa9\x69\xf2\xbe\x65\xca\xba\x29\x9d\xce\x97\x07\xef\x92\xff\x2b\x95\xef\x64\xdf\x03\x00\x00\xff\xff\x80\x72\xab\xd5\x9c\x01\x00\x00")

func pythonChartValuesYamlBytes() ([]byte, error) {
	return bindataRead(
		_pythonChartValuesYaml,
		"python/chart/values.yaml",
	)
}

func pythonChartValuesYaml() (*asset, error) {
	bytes, err := pythonChartValuesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "python/chart/values.yaml", size: 412, mode: os.FileMode(420), modTime: time.Unix(1497118555, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _pythonDetect = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\xce\x31\x8b\x83\x40\x14\x04\xe0\xfe\xfd\x8a\x11\xc5\xee\x5c\xac\x8f\x6b\x0e\xaf\x10\xae\x90\x83\xab\x82\x04\x95\xb7\xec\x03\xb3\x6e\x76\x9f\x41\xff\x7d\x08\x09\xa9\x92\x76\x66\x18\xbe\x3c\x33\x6b\x8a\x66\x14\x6f\xd8\x5f\x30\x0e\xc9\x11\x7d\xff\xb7\xbf\xcd\xb1\x69\xff\xbe\x8a\x9a\x28\xc7\xcf\x26\x0a\x1e\xe2\xbc\x43\x2c\x86\x10\x20\x09\xd3\x7c\x4f\xfc\xa2\xe8\x76\x75\x8b\xaf\x48\x2c\x0e\xc8\xf0\x61\x51\x3c\x3f\x4c\xe4\xf3\x2a\x91\x4f\xec\x35\x55\xba\x29\x7a\x94\xe5\x8b\x5d\x62\x5d\x43\x15\xf6\x77\x7d\x27\xc1\xca\xcc\xe8\x3f\xa1\x8e\x3d\x01\x7c\x73\xd5\x64\x85\x88\x27\xb7\x3c\x18\x74\x0d\x00\x00\xff\xff\x8e\xe1\xe1\x89\xd4\x00\x00\x00")

func pythonDetectBytes() ([]byte, error) {
	return bindataRead(
		_pythonDetect,
		"python/detect",
	)
}

func pythonDetect() (*asset, error) {
	bytes, err := pythonDetectBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "python/detect", size: 212, mode: os.FileMode(493), modTime: time.Unix(1496874162, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _rubyDockerignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xc9\x4f\xce\x4e\x2d\x4a\xcb\xcc\x49\xe5\x4a\x29\x4a\x4c\x2b\xd1\x2b\xc9\xcf\xcd\xe1\x4a\xce\x48\x2c\x2a\xd1\xe7\xf2\xf3\x0f\xf1\x74\x76\xe5\x02\x04\x00\x00\xff\xff\x18\xba\x47\x9a\x24\x00\x00\x00")

func rubyDockerignoreBytes() ([]byte, error) {
	return bindataRead(
		_rubyDockerignore,
		"ruby/.dockerignore",
	)
}

func rubyDockerignore() (*asset, error) {
	bytes, err := rubyDockerignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ruby/.dockerignore", size: 36, mode: os.FileMode(420), modTime: time.Unix(1496874162, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _rubyDockerfile = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x0b\xf2\xf7\x55\x28\x2a\x4d\xaa\xb4\xca\xcf\x4b\x2a\xcd\xcc\x49\xe1\x72\x8d\x08\xf0\x0f\x76\x55\xb0\x30\xb0\x30\xe0\x72\xf6\x75\x51\x88\x56\x02\x49\x2b\xe9\x28\x28\x25\x16\x14\xe8\x15\x25\x29\xc5\x72\x01\x02\x00\x00\xff\xff\x49\x96\xb9\xb0\x35\x00\x00\x00")

func rubyDockerfileBytes() ([]byte, error) {
	return bindataRead(
		_rubyDockerfile,
		"ruby/Dockerfile",
	)
}

func rubyDockerfile() (*asset, error) {
	bytes, err := rubyDockerfileBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ruby/Dockerfile", size: 53, mode: os.FileMode(420), modTime: time.Unix(1496874162, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _rubyNotice = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x51\x4f\x8f\xe3\x26\x14\xbf\xfb\x53\xfc\x34\xa7\x5d\x89\x4e\x77\x56\xea\x65\x6f\x8c\x4d\x62\x54\x07\x22\x4c\x36\xcd\x91\xd8\x64\x4c\xeb\x40\x64\x48\x47\xf3\xed\x2b\x48\xb6\xb3\xb3\x27\xcb\xbc\xf7\xfb\xfb\x36\x5c\xa3\x73\x83\xf5\xd1\x7e\xab\xaa\x3a\x5c\xde\x16\xf7\x32\x25\x7c\xaa\x3f\xe3\xeb\x97\xa7\xa7\xdf\xbe\x7e\x79\xfa\x03\xad\x5d\xc2\x3f\x57\x02\xee\x87\xc7\xaa\xda\xda\xe5\xec\x62\x74\xc1\xc3\x45\x4c\x76\xb1\xc7\x37\xbc\x2c\xc6\x27\x3b\x12\x9c\x16\x6b\x11\x4e\x18\x26\xb3\xbc\x58\x82\x14\x60\xfc\x1b\x2e\x76\x89\xc1\x23\x1c\x93\x71\xde\xf9\x17\x18\x0c\xe1\xf2\x96\x37\xd3\xe4\x22\x62\x38\xa5\x57\xb3\x58\x18\x3f\xc2\xc4\x18\x06\x67\x92\x1d\x31\x86\xe1\x7a\xb6\x3e\x99\x94\xf5\x4e\x6e\xb6\x11\x9f\xd2\x64\xf1\xd0\xdf\x11\x0f\x9f\x8b\xc8\x68\xcd\x0c\xe7\x91\x67\x3f\x46\x78\x75\x69\x0a\xd7\x84\xc5\xc6\xb4\xb8\x21\x73\x10\x38\x3f\xcc\xd7\x31\x7b\xf8\x31\x9e\xdd\xd9\xdd\x15\x32\xbc\x54\x10\x33\xe9\x35\x5a\x52\x7c\x12\x9c\xc3\xe8\x4e\xf9\x6b\x4b\xac\xcb\xf5\x38\xbb\x38\x11\x8c\x2e\x53\x1f\xaf\xc9\x12\xc4\xfc\x58\xca\x24\x39\xc7\xef\x61\x41\xb4\xf3\x9c\x19\x9c\x8d\xb7\xac\xef\xee\xca\x4e\x56\xb9\xe4\x42\xd3\xbd\xa2\xa2\xfb\x3a\x85\xf3\xc7\x24\x2e\xe2\x74\x5d\xbc\x8b\x93\x2d\x98\x31\x20\x86\xa2\xf8\xb7\x1d\x52\x7e\xc9\xeb\xa7\x30\xcf\xe1\x35\x47\x1b\x82\x1f\x5d\x4e\x14\xbf\x55\x95\x9e\x2c\xcc\x31\xfc\x6b\x4b\x96\xdb\x85\x7d\x48\x6e\xb8\xd5\x5d\x0e\x70\x79\xbf\xea\x7d\x14\x27\x33\xcf\x38\xda\x7b\x61\x76\xcc\xf5\x9a\x9f\xe2\x2c\x59\x3e\x26\xe3\x93\x33\x33\x2e\x61\x29\x7a\xbf\xc6\x7c\xac\x2a\xdd\x32\xf4\x72\xa5\xf7\x54\x31\xf0\x1e\x5b\x25\xbf\xf3\x86\x35\x78\xa0\x3d\x78\xff\x40\xb0\xe7\xba\x95\x3b\x8d\x3d\x55\x8a\x0a\x7d\x80\x5c\x81\x8a\x03\xfe\xe4\xa2\x21\x60\x7f\x6d\x15\xeb\x7b\x48\x05\xbe\xd9\x76\x9c\x35\x04\x5c\xd4\xdd\xae\xe1\x62\x8d\xe7\x9d\x86\x90\x1a\x1d\xdf\x70\xcd\x1a\x68\x89\x2c\x78\xa7\xe2\xac\xcf\x64\x1b\xa6\xea\x96\x0a\x4d\x9f\x79\xc7\xf5\x81\x60\xc5\xb5\xc8\x9c\x2b\xa9\x40\xb1\xa5\x4a\xf3\x7a\xd7\x51\x85\xed\x4e\x6d\x65\xcf\x40\x45\x03\x21\x05\x17\x2b\xc5\xc5\x9a\x6d\x98\xd0\x8f\xe0\x02\x42\x82\x7d\x67\x42\xa3\x6f\x69\xd7\x15\x29\xba\xd3\xad\x54\xc5\x5f\x2d\xb7\x07\xc5\xd7\xad\x46\x2b\xbb\x86\xa9\x1e\xcf\x0c\x1d\xa7\xcf\x1d\xbb\x49\x89\x03\xea\x8e\xf2\x0d\x41\x43\x37\x74\xcd\x0a\x4a\xea\x96\xa9\xb2\x76\x77\xb7\x6f\x59\x79\xe2\x02\x54\x80\xd6\x9a\x4b\x91\x63\xd4\x52\x68\x45\x6b\x4d\xa0\xa5\xd2\xff\x43\xf7\xbc\x67\x04\x54\xf1\x3e\x17\xb2\x52\x72\x43\x90\xeb\x94\xab\xd2\x99\xc8\x38\xc1\x6e\x2c\xb9\x6a\x7c\xb8\x88\x54\xe5\x7f\xd7\xb3\x77\x2f\x0d\xa3\x1d\x17\xeb\x3e\x83\x7f\x5e\x7e\xac\xfe\x0b\x00\x00\xff\xff\x3e\x88\xe6\xeb\x33\x04\x00\x00")

func rubyNoticeBytes() ([]byte, error) {
	return bindataRead(
		_rubyNotice,
		"ruby/NOTICE",
	)
}

func rubyNotice() (*asset, error) {
	bytes, err := rubyNoticeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ruby/NOTICE", size: 1075, mode: os.FileMode(420), modTime: time.Unix(1496874162, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _rubyChartHelmignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x8e\xc1\x6a\x23\x31\x0c\x86\xef\x7a\x8a\x7f\x99\xcb\xee\xb0\x78\x1e\x22\xd9\xc3\x9e\x5a\x48\xc9\xb5\x78\x66\x14\x5b\x89\x47\x36\xb6\x26\x69\x7b\xe8\xb3\x97\x24\x84\xf6\xf2\x81\x3e\x24\xf1\x75\x78\xf6\x66\x5c\xb5\xc1\x32\x24\x68\xae\x8c\x4b\x64\xc5\xb8\x4a\x9a\x45\x03\x8a\x9f\x4e\x3e\x70\x73\xd4\xe1\x25\x4a\x43\x5b\x4b\xc9\xd5\x1a\x5a\xe4\x94\x10\x52\x1e\xb1\x78\x9b\xa2\x68\xf8\x8b\xca\xc9\x9b\x9c\x19\xc5\x5b\xfc\xe1\xbd\xce\xd4\x41\x39\x78\x93\xac\xf8\x5d\x2a\x1f\xe4\x8d\x67\x5c\xc4\x22\x7e\xfd\x71\x78\xd2\xf4\x8e\xac\xb7\xcb\x6b\x12\x0a\x57\x24\x51\x76\xe4\xb6\xbb\xd7\x9d\xe5\xca\xd4\x61\x93\x97\x25\x2b\xf6\x9b\x1d\x66\xa9\x8d\x5c\x10\x1b\x6e\xbc\xe7\x93\x1b\x3f\xea\x70\xe3\x43\xc4\x30\x5c\xf1\x18\xdb\x59\x87\xef\x47\xa3\x9f\x4e\x6b\xc1\x41\x12\x37\xea\x5d\xbb\x14\xea\xdd\xe8\x4f\xd4\x3b\x5b\x0a\xf5\x9f\xd4\x61\xef\xab\xe4\xb5\xe1\xff\xf6\x5f\x23\x57\x6a\x3e\xf2\x64\xe4\x64\x66\x3f\xdc\xf7\x6a\x3e\xd2\x57\x00\x00\x00\xff\xff\xbc\x5b\x94\x77\x4d\x01\x00\x00")

func rubyChartHelmignoreBytes() ([]byte, error) {
	return bindataRead(
		_rubyChartHelmignore,
		"ruby/chart/.helmignore",
	)
}

func rubyChartHelmignore() (*asset, error) {
	bytes, err := rubyChartHelmignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ruby/chart/.helmignore", size: 333, mode: os.FileMode(420), modTime: time.Unix(1496874162, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _rubyChartChartYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xca\x4b\xcc\x4d\xb5\x52\x28\x2a\x4d\xaa\xe4\x02\x04\x00\x00\xff\xff\x74\x83\x10\xe3\x0b\x00\x00\x00")

func rubyChartChartYamlBytes() ([]byte, error) {
	return bindataRead(
		_rubyChartChartYaml,
		"ruby/chart/Chart.yaml",
	)
}

func rubyChartChartYaml() (*asset, error) {
	bytes, err := rubyChartChartYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ruby/chart/Chart.yaml", size: 11, mode: os.FileMode(420), modTime: time.Unix(1496874162, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _rubyChartTemplatesNotesTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x92\x51\x8b\xda\x4e\x14\x47\xdf\xf7\x53\xfc\x08\x82\xff\xff\x83\x63\x9f\x85\x7d\x69\x2b\x45\x58\x54\xec\x76\xa1\x94\x52\xae\x93\xab\x4e\x77\x32\x13\x72\x6f\x74\x25\xe4\xbb\x97\x89\xd6\xcd\xda\xb2\x94\xd2\xbc\x65\x42\xce\x1c\xee\xb9\x37\x4d\x33\x82\xdb\xc0\xc6\xa0\xe4\x82\x20\x9b\xc7\x9c\x97\xb1\xd2\x0c\xe6\x81\x7c\xcd\x62\x84\xab\xbd\xb3\x6c\xf4\x58\x32\xda\xf6\x06\xf8\xc0\x0a\xdd\x31\xa8\x2c\xbd\xb3\xa4\x2e\x06\x7c\x5a\xdd\x61\x7d\x44\x55\x87\xe0\xc2\x36\x7d\x16\x86\x8d\x45\x41\x21\x97\xc9\x0d\xc0\x4f\x65\xac\x14\xf3\xc5\xfb\xe9\xb7\xe5\x62\x75\x7f\x3b\xf8\xef\xb1\x5e\xb3\x55\x8f\x2d\x2b\x46\xa3\x40\x05\x4b\x49\x96\xd1\x34\x30\x2b\xf6\x4c\xc2\x66\x7e\x39\x6d\x5b\x8c\x22\xbe\x4b\x0c\x25\xe9\xee\x36\x6b\x8c\x94\x6c\x4d\xa2\xca\x97\x37\x5f\x4d\x38\x9b\xb7\x19\xce\xca\x92\x48\xca\x45\xe9\x49\x19\xd9\xa6\xf6\x3e\x5d\x92\xc1\xa0\x6d\xff\xbf\x72\x9a\x2d\xaf\x8c\x12\x4f\xfe\xca\xcb\x29\x17\x9d\x92\x28\x69\x2d\x86\xf2\xbc\x62\x11\xee\xce\xce\x2f\x6d\xd6\x09\xd8\x5d\xc4\x4e\xb5\x9c\x8c\xc7\x83\xb3\xc6\x64\x70\x99\xd1\xd8\xc7\xad\x0b\x5d\x24\xf6\xc2\x2f\x4b\xdd\x45\xca\xdf\x92\xa7\x60\xb9\xfa\xe7\xb5\x00\xcc\x17\xf7\xd3\x09\x66\x8a\x82\x8e\x50\x7a\x64\x10\x36\x7c\x40\xe1\x42\xad\x2c\xd8\xc4\xaa\xe3\xf6\x3d\x30\x5b\x42\x23\xd6\x0c\xda\x93\xf3\xb4\xf6\x6c\x4e\xb4\xd3\xf3\x39\xd6\xb0\x14\x70\x20\xb5\xbb\xee\xef\xd3\x88\x10\x37\x7d\x9f\x61\xbf\x83\xec\x2d\x46\x87\xd7\x52\x0e\x9f\x53\x7e\x9c\xae\x1e\x66\xef\x7e\x53\xb3\xa3\xfc\x49\xcb\x57\xee\x79\xd1\x79\xd8\xfc\xcc\xeb\x7b\x03\x30\x2e\x6c\x53\xde\x54\xda\x95\xed\xf0\x97\xc8\xcf\x82\x93\xa4\x70\x55\x8d\x9f\x94\xab\x40\x3e\xed\x71\xaa\x77\x29\xdf\x95\x3c\x33\xae\xd5\xd1\xb6\xa6\xc7\x5a\x93\x70\x1e\x0b\x72\x21\x29\x6b\x04\x59\xcb\x22\x38\xc6\xba\xea\x2f\xc1\x09\x1e\xf2\xc4\xfe\x11\x00\x00\xff\xff\x95\xfb\xb4\x1f\x08\x04\x00\x00")

func rubyChartTemplatesNotesTxtBytes() ([]byte, error) {
	return bindataRead(
		_rubyChartTemplatesNotesTxt,
		"ruby/chart/templates/NOTES.txt",
	)
}

func rubyChartTemplatesNotesTxt() (*asset, error) {
	bytes, err := rubyChartTemplatesNotesTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ruby/chart/templates/NOTES.txt", size: 1032, mode: os.FileMode(420), modTime: time.Unix(1496874162, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _rubyChartTemplates_helpersTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x90\x41\x6b\xe3\x30\x10\x85\xef\xfe\x15\x0f\xb3\x81\xdd\x80\x9d\xc3\xc2\x1e\x02\x39\x65\x7b\x2a\xa4\xd0\x40\x7b\x56\xac\xa7\x5a\x20\x2b\xae\x34\x0a\x09\x69\xfe\x7b\x91\xdc\x36\x14\x7a\x68\x6f\x83\xf8\xe6\xcd\xd3\x77\x3e\x2f\xe6\x38\xd8\x61\x89\x48\x81\xb1\x8e\x72\x1a\xb9\x1a\x52\x14\xd5\xf5\x5c\x62\xbe\xb8\x5c\xaa\x4c\x55\x37\xc7\x51\x79\x0d\xe9\x09\xaf\x06\x62\x6f\xca\xdc\xf5\x2a\x48\x5b\xbd\x71\x0d\x34\x8d\xf5\x44\x9d\x99\x1a\xcd\xf5\x55\x25\x27\x68\xd7\x05\xdf\xe4\x80\xf6\x41\xb9\xc4\xd8\x66\xf2\xee\xc0\x10\xac\x26\x5e\x20\x21\xf9\x0e\xff\xfe\x96\xd1\x0e\xdb\x64\x8c\x3d\xa2\x6e\xae\x61\xf4\xba\xcc\x53\xaf\x75\xa0\x12\x42\x7d\xdc\x30\xc9\xb9\x13\x9e\x93\x72\xd6\x58\x6a\xa8\x71\x2c\x8d\xdb\xea\x91\x53\x7a\xe1\x25\xdf\xc8\xed\x23\x76\xec\x54\x8a\x44\xdc\x0f\xc4\x6d\xda\x31\x78\x0a\xe3\xf4\x4f\x63\xe9\x74\x84\x0a\x84\xb3\x83\x15\x6a\xc8\x1e\xd2\xdb\x88\xdf\xbb\x53\x71\xf0\x7f\xb3\xcd\xac\xf5\x4f\x88\x23\xbb\x3f\x5f\xe8\xc8\xa5\x3e\x2b\xf9\x55\xd2\x97\xab\xef\xbb\x79\xdf\x1c\x83\xf5\x62\x50\xcf\x62\x33\x8b\x35\xda\x7b\x3a\xaa\xc8\x69\x73\x8a\xfd\x89\xc6\xd7\x00\x00\x00\xff\xff\x34\x01\xd0\x17\x04\x02\x00\x00")

func rubyChartTemplates_helpersTplBytes() ([]byte, error) {
	return bindataRead(
		_rubyChartTemplates_helpersTpl,
		"ruby/chart/templates/_helpers.tpl",
	)
}

func rubyChartTemplates_helpersTpl() (*asset, error) {
	bytes, err := rubyChartTemplates_helpersTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ruby/chart/templates/_helpers.tpl", size: 516, mode: os.FileMode(420), modTime: time.Unix(1496874162, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _rubyChartTemplatesDeploymentYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x52\xc1\x8a\xdb\x30\x14\xbc\xfb\x2b\x06\x5d\x4b\x1c\xd2\xa3\xae\x5b\xe8\xad\xe4\xb4\xd0\x53\x79\x71\x5e\x13\x51\x59\x12\xd2\x73\x68\xf0\xea\xdf\x8b\x6c\x6f\x2c\x93\x42\xe9\x65\x75\x12\x33\xd2\xcc\xbc\x91\x28\x98\x57\x8e\xc9\x78\xa7\xc1\xbf\x85\x5d\xd9\xa6\xfd\xed\x70\x62\xa1\x43\xf3\xcb\xb8\xb3\xc6\x17\x0e\xd6\xdf\x7b\x76\xd2\xf4\x2c\x74\x26\x21\xdd\x00\x8e\x7a\xd6\x18\x47\x08\xf7\xc1\x92\x30\xd4\xcf\xc1\xda\x02\x2b\xb4\xc8\xb9\x01\x2c\x9d\xd8\xa6\x72\x1a\xe8\xae\x14\x45\x43\x8d\x23\xda\x97\xb2\x6f\xbf\x51\xcf\xc8\x79\xb7\x22\x4b\x18\xbc\x21\x72\xb0\xd4\x31\xd4\x27\x05\xf5\x43\x21\x67\xd5\xa4\xc0\x5d\xd1\x2a\x9c\xe9\x28\x4d\xee\xed\x2b\xd9\x81\x53\xbb\x80\x2f\x7e\x70\x32\x9b\xbf\xe7\x9a\xed\xeb\xe8\x65\xd5\xd1\xca\xa2\x10\xfe\x35\x0d\xf0\x9e\x60\x9a\xc7\x3b\x21\xe3\x38\x3e\x44\x76\x6b\x27\xdb\x09\x1f\x26\xa6\xa7\x0b\x2f\x1d\x2c\xb9\x27\xa8\x8d\x7c\x31\x49\xe2\x1d\x39\xef\x9f\x48\x1f\x2f\x7f\xc5\xdd\xac\xae\x9f\x08\xa1\xcb\x54\xd8\xc6\xf6\x38\x58\x7b\xf4\xd6\x74\xf7\x4d\x6f\xf3\x8d\xf0\x20\xeb\xb8\xc1\x47\xa9\x2a\xda\xad\x33\x1f\x7d\x79\xcb\x4a\x26\x71\xbc\x99\x8e\x5b\xe3\x84\xa3\x23\x5b\x0e\xd4\x52\xd6\xdc\xd8\x71\x4a\xc7\xe8\x4f\xbc\x4a\x02\x57\x91\xf0\x95\xa5\x86\x80\x40\x72\xd5\xd8\x6f\xb1\xff\xb5\x8c\x4c\x67\xf3\xe1\x9e\xc9\x0f\xb1\xe3\xa4\x9b\xf2\x97\xfc\x77\xea\x6d\xf5\x45\x17\x12\x6f\x30\xee\xcc\x4e\x70\xf8\x5c\x6e\xff\x09\x00\x00\xff\xff\x52\x7b\x20\xc6\x87\x03\x00\x00")

func rubyChartTemplatesDeploymentYamlBytes() ([]byte, error) {
	return bindataRead(
		_rubyChartTemplatesDeploymentYaml,
		"ruby/chart/templates/deployment.yaml",
	)
}

func rubyChartTemplatesDeploymentYaml() (*asset, error) {
	bytes, err := rubyChartTemplatesDeploymentYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ruby/chart/templates/deployment.yaml", size: 903, mode: os.FileMode(420), modTime: time.Unix(1496874162, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _rubyChartTemplatesIngressYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x90\xb1\x6a\xf4\x30\x10\x84\x7b\x3f\xc5\xa0\xf6\xe7\x74\x5c\xab\xf6\xaf\xd2\x1c\x21\xc5\xb5\x61\x6d\x4f\x62\x73\xb2\x2c\xb4\xf2\x11\x70\xf4\xee\x41\x3e\x5f\x02\xa9\xd2\xed\x7c\xec\x0e\x1f\x2b\x71\xbc\x30\xe9\x38\x07\x07\x7e\x64\x86\x3a\xea\xf1\x76\x6a\x99\xe5\xd4\x5c\xc7\xd0\x3b\x3c\x85\xf7\x44\xd5\x66\x62\x96\x5e\xb2\xb8\x06\x08\x32\xd1\x61\x5d\x91\x39\x45\x2f\x99\x30\x6f\x8b\xf7\x15\x1b\x58\x94\xd2\x00\x5e\x5a\x7a\xad\xdb\x40\x37\x48\xca\x0e\x66\x5d\x61\xff\xd7\xd9\x9e\x65\x22\x4a\x39\xfc\x90\xdd\x04\x9f\x48\x8c\x5e\x3a\xc2\xfc\x33\x30\xaf\x06\xa5\x98\x46\x23\xbb\xda\x95\x16\xcf\xad\xf4\x80\x61\xd6\xbc\x49\xd8\x17\x7a\x8a\xf2\x51\x6a\x2b\xbb\x88\x5f\xa8\xb6\x15\x65\x3f\x4f\x32\x86\xbb\x15\x30\xe4\x1c\xef\x56\x40\x94\x3c\xe8\x23\x1c\xb6\xe8\x70\xdc\x33\xd0\x4a\x77\x65\xe8\xdd\x37\x00\x94\xe9\x36\x76\x3c\xff\xe1\x01\xbf\x4e\x9e\xe7\xb4\xeb\xee\x6a\x3b\xb7\xf5\xf3\x29\x88\xaf\x0b\xf5\xf2\x2b\x00\x00\xff\xff\x54\x0e\x39\x31\x96\x01\x00\x00")

func rubyChartTemplatesIngressYamlBytes() ([]byte, error) {
	return bindataRead(
		_rubyChartTemplatesIngressYaml,
		"ruby/chart/templates/ingress.yaml",
	)
}

func rubyChartTemplatesIngressYaml() (*asset, error) {
	bytes, err := rubyChartTemplatesIngressYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ruby/chart/templates/ingress.yaml", size: 406, mode: os.FileMode(420), modTime: time.Unix(1496874162, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _rubyChartTemplatesServiceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\xcd\x4a\x04\x31\x10\x84\xef\x79\x8a\x22\x57\xd9\x80\xd7\x5c\xf7\x2e\x03\xca\x5e\xa5\xcd\xb6\x3a\x98\x49\x42\xa7\x77\x51\xc6\xbc\xbb\x64\x22\x0a\xfe\xec\xad\xa9\xf4\x97\x2f\x29\x2a\xf3\x81\xa5\xce\x39\x79\x9c\xaf\xcd\xcb\x9c\x8e\x1e\xb7\x2c\xe7\x39\xb0\x59\x58\xe9\x48\x4a\xde\x00\x89\x16\xf6\x58\x57\x28\x2f\x25\x92\x32\xec\xe3\x29\xc6\x1e\x5b\x38\xb4\x66\x80\x48\x0f\x1c\x6b\xdf\x06\xc2\x33\x89\x7a\xd8\x75\x85\xdb\xf7\xd9\xdd\xd0\xc2\x68\x6d\xf7\x9d\x7c\x9a\xf1\x0e\xe1\x12\x29\x30\xec\x95\x85\xbd\xb7\x68\xcd\x9a\x5a\x38\xf4\xbb\xf4\xad\x0c\xb3\x3b\x50\x3c\x71\x75\x75\x3c\xcf\xf5\x83\x21\x2e\x59\x74\xf3\xee\xb6\xf1\xcf\x6d\x7e\x55\x96\x44\x71\xca\xa2\x83\x02\x94\xe4\x89\x75\xfa\x0f\x99\xd3\x6f\xa4\x48\xd6\x1c\x72\xf4\xb8\xdb\x4f\x5b\xf2\xd5\xcc\x4f\x3c\x8d\x0f\x1b\xa0\x72\xe4\xa0\x59\x46\x35\x54\xca\xe5\x26\x3f\x02\x00\x00\xff\xff\xce\x5a\xb0\xc7\x95\x01\x00\x00")

func rubyChartTemplatesServiceYamlBytes() ([]byte, error) {
	return bindataRead(
		_rubyChartTemplatesServiceYaml,
		"ruby/chart/templates/service.yaml",
	)
}

func rubyChartTemplatesServiceYaml() (*asset, error) {
	bytes, err := rubyChartTemplatesServiceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ruby/chart/templates/service.yaml", size: 405, mode: os.FileMode(420), modTime: time.Unix(1496874162, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _rubyChartValuesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8f\x31\x8b\xe3\x40\x0c\x85\xfb\xf9\x15\x0f\x52\x5f\x70\x52\x85\xe9\x8e\xa4\x09\x5c\x0e\x73\x5c\xb3\xe5\xd8\x96\xbd\x62\x35\x96\x57\xa3\x09\xeb\x7f\xbf\xd8\x5d\xba\xed\xf4\xc4\x27\x3d\xbe\x03\x6e\x34\xa6\x2a\x8e\x67\x92\x4a\x05\xa3\x1a\xfe\xd5\x6e\x3d\x86\x03\xfe\xbf\x73\x01\x17\x24\xbc\xfd\x7e\xfc\xf9\x35\xaa\xe5\xe4\x4e\x03\x46\x16\xda\x80\x1b\xf5\x92\x8c\xf0\x4c\xc6\xa9\x13\x2a\x70\x45\x47\x58\x52\x29\x34\x80\x67\x57\xac\x5a\x0d\x4e\x79\x91\xe4\x54\x8e\xc1\x68\x11\xee\xd3\x55\xeb\xec\x11\xe7\xc0\x39\x4d\x14\x03\x60\x34\x71\x71\x5b\x23\x06\xed\x3f\xc8\x8e\xac\x01\x50\x9b\x22\x84\x3b\x4b\xb6\x06\x60\x4e\x99\x22\xac\x76\x5b\xf0\x34\x45\xe8\xdc\x55\x96\x21\x00\x4b\x15\x69\x55\xb8\x5f\x23\xee\xe3\x5f\xf5\xd6\xa8\xd0\xec\xa1\x90\x3d\xb9\xdf\x4b\x5e\xef\xd7\x85\x22\xae\x52\x8b\x93\xdd\xdb\x00\xd0\x97\x93\xcd\x49\x5a\x35\x8f\xb8\x34\x01\x9b\xc4\xcb\xea\xd2\x04\xa3\xa2\xd5\x7a\x2a\xdb\x47\xe1\xcc\xbe\x4f\x40\xbf\xd4\x88\x53\xd3\xe4\x3d\x65\xca\xba\xe9\x9c\xce\x97\x07\xef\x82\x9f\x95\xca\x4f\xd8\xef\x00\x00\x00\xff\xff\x44\xce\x84\x92\x96\x01\x00\x00")

func rubyChartValuesYamlBytes() ([]byte, error) {
	return bindataRead(
		_rubyChartValuesYaml,
		"ruby/chart/values.yaml",
	)
}

func rubyChartValuesYaml() (*asset, error) {
	bytes, err := rubyChartValuesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ruby/chart/values.yaml", size: 406, mode: os.FileMode(420), modTime: time.Unix(1497118555, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _rubyDetect = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\x8c\x4b\x4b\x87\x40\x1c\x45\xf7\xf3\x29\x6e\xbf\x86\x3f\xba\xc8\xd1\x75\xb4\x28\x93\x72\x93\x31\x53\x6d\x44\xc4\xc7\x6f\x70\x40\xc7\xf0\xd1\x83\xe8\xbb\x47\x04\xb6\xba\x8b\x7b\xce\x39\x3f\x53\xfb\xba\xa8\xd6\x79\xc5\xfe\x0d\x6d\xb3\x0e\xc2\x59\x94\xb8\xb0\x20\x99\xa8\x3b\x9e\xac\x1b\x99\x50\x5d\x62\x1b\xd8\x0b\xc0\xa4\x3a\x7f\x7c\xaa\x6f\x73\x7d\x45\x32\x40\xd7\xe3\x77\x7a\xb7\xf8\x66\x62\x90\xfc\xba\xb9\x36\xf7\xb5\x29\x9e\x75\x9a\x95\x71\xf5\x4d\x08\x09\xa7\x13\x5e\xdf\x7b\x84\x24\x00\xee\x86\x19\xb4\xec\xed\x27\x64\xd0\x35\x1b\xe4\x7f\x52\x45\x91\x7a\xc9\xb4\xc9\x8b\x87\x3f\xf6\xc3\x6d\x88\x05\x8f\x2b\x1f\xa6\x9f\x8f\x27\x11\xd6\x89\x9f\x00\x00\x00\xff\xff\x6b\x6e\x96\x62\xc4\x00\x00\x00")

func rubyDetectBytes() ([]byte, error) {
	return bindataRead(
		_rubyDetect,
		"ruby/detect",
	)
}

func rubyDetect() (*asset, error) {
	bytes, err := rubyDetectBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ruby/detect", size: 196, mode: os.FileMode(493), modTime: time.Unix(1496874162, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"README.md": readmeMd,
	"dotnetcore/.dockerignore": dotnetcoreDockerignore,
	"dotnetcore/Dockerfile": dotnetcoreDockerfile,
	"dotnetcore/NOTICE": dotnetcoreNotice,
	"dotnetcore/chart/.helmignore": dotnetcoreChartHelmignore,
	"dotnetcore/chart/Chart.yaml": dotnetcoreChartChartYaml,
	"dotnetcore/chart/templates/NOTES.txt": dotnetcoreChartTemplatesNotesTxt,
	"dotnetcore/chart/templates/_helpers.tpl": dotnetcoreChartTemplates_helpersTpl,
	"dotnetcore/chart/templates/deployment.yaml": dotnetcoreChartTemplatesDeploymentYaml,
	"dotnetcore/chart/templates/ingress.yaml": dotnetcoreChartTemplatesIngressYaml,
	"dotnetcore/chart/templates/service.yaml": dotnetcoreChartTemplatesServiceYaml,
	"dotnetcore/chart/values.yaml": dotnetcoreChartValuesYaml,
	"dotnetcore/detect": dotnetcoreDetect,
	"golang/.dockerignore": golangDockerignore,
	"golang/Dockerfile": golangDockerfile,
	"golang/NOTICE": golangNotice,
	"golang/chart/.helmignore": golangChartHelmignore,
	"golang/chart/Chart.yaml": golangChartChartYaml,
	"golang/chart/templates/NOTES.txt": golangChartTemplatesNotesTxt,
	"golang/chart/templates/_helpers.tpl": golangChartTemplates_helpersTpl,
	"golang/chart/templates/deployment.yaml": golangChartTemplatesDeploymentYaml,
	"golang/chart/templates/ingress.yaml": golangChartTemplatesIngressYaml,
	"golang/chart/templates/service.yaml": golangChartTemplatesServiceYaml,
	"golang/chart/values.yaml": golangChartValuesYaml,
	"golang/detect": golangDetect,
	"gradle/.dockerignore": gradleDockerignore,
	"gradle/Dockerfile": gradleDockerfile,
	"gradle/NOTICE": gradleNotice,
	"gradle/chart/.helmignore": gradleChartHelmignore,
	"gradle/chart/Chart.yaml": gradleChartChartYaml,
	"gradle/chart/templates/NOTES.txt": gradleChartTemplatesNotesTxt,
	"gradle/chart/templates/_helpers.tpl": gradleChartTemplates_helpersTpl,
	"gradle/chart/templates/deployment.yaml": gradleChartTemplatesDeploymentYaml,
	"gradle/chart/templates/ingress.yaml": gradleChartTemplatesIngressYaml,
	"gradle/chart/templates/service.yaml": gradleChartTemplatesServiceYaml,
	"gradle/chart/values.yaml": gradleChartValuesYaml,
	"gradle/detect": gradleDetect,
	"maven/.dockerignore": mavenDockerignore,
	"maven/Dockerfile": mavenDockerfile,
	"maven/NOTICE": mavenNotice,
	"maven/chart/.helmignore": mavenChartHelmignore,
	"maven/chart/Chart.yaml": mavenChartChartYaml,
	"maven/chart/templates/NOTES.txt": mavenChartTemplatesNotesTxt,
	"maven/chart/templates/_helpers.tpl": mavenChartTemplates_helpersTpl,
	"maven/chart/templates/deployment.yaml": mavenChartTemplatesDeploymentYaml,
	"maven/chart/templates/ingress.yaml": mavenChartTemplatesIngressYaml,
	"maven/chart/templates/service.yaml": mavenChartTemplatesServiceYaml,
	"maven/chart/values.yaml": mavenChartValuesYaml,
	"maven/detect": mavenDetect,
	"node/.dockerignore": nodeDockerignore,
	"node/Dockerfile": nodeDockerfile,
	"node/NOTICE": nodeNotice,
	"node/chart/.helmignore": nodeChartHelmignore,
	"node/chart/Chart.yaml": nodeChartChartYaml,
	"node/chart/templates/NOTES.txt": nodeChartTemplatesNotesTxt,
	"node/chart/templates/_helpers.tpl": nodeChartTemplates_helpersTpl,
	"node/chart/templates/deployment.yaml": nodeChartTemplatesDeploymentYaml,
	"node/chart/templates/ingress.yaml": nodeChartTemplatesIngressYaml,
	"node/chart/templates/service.yaml": nodeChartTemplatesServiceYaml,
	"node/chart/values.yaml": nodeChartValuesYaml,
	"node/detect": nodeDetect,
	"php/.dockerignore": phpDockerignore,
	"php/Dockerfile": phpDockerfile,
	"php/NOTICE": phpNotice,
	"php/chart/.helmignore": phpChartHelmignore,
	"php/chart/Chart.yaml": phpChartChartYaml,
	"php/chart/templates/NOTES.txt": phpChartTemplatesNotesTxt,
	"php/chart/templates/_helpers.tpl": phpChartTemplates_helpersTpl,
	"php/chart/templates/deployment.yaml": phpChartTemplatesDeploymentYaml,
	"php/chart/templates/ingress.yaml": phpChartTemplatesIngressYaml,
	"php/chart/templates/service.yaml": phpChartTemplatesServiceYaml,
	"php/chart/values.yaml": phpChartValuesYaml,
	"php/detect": phpDetect,
	"python/.dockerignore": pythonDockerignore,
	"python/Dockerfile": pythonDockerfile,
	"python/NOTICE": pythonNotice,
	"python/chart/.helmignore": pythonChartHelmignore,
	"python/chart/Chart.yaml": pythonChartChartYaml,
	"python/chart/templates/NOTES.txt": pythonChartTemplatesNotesTxt,
	"python/chart/templates/_helpers.tpl": pythonChartTemplates_helpersTpl,
	"python/chart/templates/deployment.yaml": pythonChartTemplatesDeploymentYaml,
	"python/chart/templates/ingress.yaml": pythonChartTemplatesIngressYaml,
	"python/chart/templates/service.yaml": pythonChartTemplatesServiceYaml,
	"python/chart/values.yaml": pythonChartValuesYaml,
	"python/detect": pythonDetect,
	"ruby/.dockerignore": rubyDockerignore,
	"ruby/Dockerfile": rubyDockerfile,
	"ruby/NOTICE": rubyNotice,
	"ruby/chart/.helmignore": rubyChartHelmignore,
	"ruby/chart/Chart.yaml": rubyChartChartYaml,
	"ruby/chart/templates/NOTES.txt": rubyChartTemplatesNotesTxt,
	"ruby/chart/templates/_helpers.tpl": rubyChartTemplates_helpersTpl,
	"ruby/chart/templates/deployment.yaml": rubyChartTemplatesDeploymentYaml,
	"ruby/chart/templates/ingress.yaml": rubyChartTemplatesIngressYaml,
	"ruby/chart/templates/service.yaml": rubyChartTemplatesServiceYaml,
	"ruby/chart/values.yaml": rubyChartValuesYaml,
	"ruby/detect": rubyDetect,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"README.md": &bintree{readmeMd, map[string]*bintree{}},
	"dotnetcore": &bintree{nil, map[string]*bintree{
		".dockerignore": &bintree{dotnetcoreDockerignore, map[string]*bintree{}},
		"Dockerfile": &bintree{dotnetcoreDockerfile, map[string]*bintree{}},
		"NOTICE": &bintree{dotnetcoreNotice, map[string]*bintree{}},
		"chart": &bintree{nil, map[string]*bintree{
			".helmignore": &bintree{dotnetcoreChartHelmignore, map[string]*bintree{}},
			"Chart.yaml": &bintree{dotnetcoreChartChartYaml, map[string]*bintree{}},
			"templates": &bintree{nil, map[string]*bintree{
				"NOTES.txt": &bintree{dotnetcoreChartTemplatesNotesTxt, map[string]*bintree{}},
				"_helpers.tpl": &bintree{dotnetcoreChartTemplates_helpersTpl, map[string]*bintree{}},
				"deployment.yaml": &bintree{dotnetcoreChartTemplatesDeploymentYaml, map[string]*bintree{}},
				"ingress.yaml": &bintree{dotnetcoreChartTemplatesIngressYaml, map[string]*bintree{}},
				"service.yaml": &bintree{dotnetcoreChartTemplatesServiceYaml, map[string]*bintree{}},
			}},
			"values.yaml": &bintree{dotnetcoreChartValuesYaml, map[string]*bintree{}},
		}},
		"detect": &bintree{dotnetcoreDetect, map[string]*bintree{}},
	}},
	"golang": &bintree{nil, map[string]*bintree{
		".dockerignore": &bintree{golangDockerignore, map[string]*bintree{}},
		"Dockerfile": &bintree{golangDockerfile, map[string]*bintree{}},
		"NOTICE": &bintree{golangNotice, map[string]*bintree{}},
		"chart": &bintree{nil, map[string]*bintree{
			".helmignore": &bintree{golangChartHelmignore, map[string]*bintree{}},
			"Chart.yaml": &bintree{golangChartChartYaml, map[string]*bintree{}},
			"templates": &bintree{nil, map[string]*bintree{
				"NOTES.txt": &bintree{golangChartTemplatesNotesTxt, map[string]*bintree{}},
				"_helpers.tpl": &bintree{golangChartTemplates_helpersTpl, map[string]*bintree{}},
				"deployment.yaml": &bintree{golangChartTemplatesDeploymentYaml, map[string]*bintree{}},
				"ingress.yaml": &bintree{golangChartTemplatesIngressYaml, map[string]*bintree{}},
				"service.yaml": &bintree{golangChartTemplatesServiceYaml, map[string]*bintree{}},
			}},
			"values.yaml": &bintree{golangChartValuesYaml, map[string]*bintree{}},
		}},
		"detect": &bintree{golangDetect, map[string]*bintree{}},
	}},
	"gradle": &bintree{nil, map[string]*bintree{
		".dockerignore": &bintree{gradleDockerignore, map[string]*bintree{}},
		"Dockerfile": &bintree{gradleDockerfile, map[string]*bintree{}},
		"NOTICE": &bintree{gradleNotice, map[string]*bintree{}},
		"chart": &bintree{nil, map[string]*bintree{
			".helmignore": &bintree{gradleChartHelmignore, map[string]*bintree{}},
			"Chart.yaml": &bintree{gradleChartChartYaml, map[string]*bintree{}},
			"templates": &bintree{nil, map[string]*bintree{
				"NOTES.txt": &bintree{gradleChartTemplatesNotesTxt, map[string]*bintree{}},
				"_helpers.tpl": &bintree{gradleChartTemplates_helpersTpl, map[string]*bintree{}},
				"deployment.yaml": &bintree{gradleChartTemplatesDeploymentYaml, map[string]*bintree{}},
				"ingress.yaml": &bintree{gradleChartTemplatesIngressYaml, map[string]*bintree{}},
				"service.yaml": &bintree{gradleChartTemplatesServiceYaml, map[string]*bintree{}},
			}},
			"values.yaml": &bintree{gradleChartValuesYaml, map[string]*bintree{}},
		}},
		"detect": &bintree{gradleDetect, map[string]*bintree{}},
	}},
	"maven": &bintree{nil, map[string]*bintree{
		".dockerignore": &bintree{mavenDockerignore, map[string]*bintree{}},
		"Dockerfile": &bintree{mavenDockerfile, map[string]*bintree{}},
		"NOTICE": &bintree{mavenNotice, map[string]*bintree{}},
		"chart": &bintree{nil, map[string]*bintree{
			".helmignore": &bintree{mavenChartHelmignore, map[string]*bintree{}},
			"Chart.yaml": &bintree{mavenChartChartYaml, map[string]*bintree{}},
			"templates": &bintree{nil, map[string]*bintree{
				"NOTES.txt": &bintree{mavenChartTemplatesNotesTxt, map[string]*bintree{}},
				"_helpers.tpl": &bintree{mavenChartTemplates_helpersTpl, map[string]*bintree{}},
				"deployment.yaml": &bintree{mavenChartTemplatesDeploymentYaml, map[string]*bintree{}},
				"ingress.yaml": &bintree{mavenChartTemplatesIngressYaml, map[string]*bintree{}},
				"service.yaml": &bintree{mavenChartTemplatesServiceYaml, map[string]*bintree{}},
			}},
			"values.yaml": &bintree{mavenChartValuesYaml, map[string]*bintree{}},
		}},
		"detect": &bintree{mavenDetect, map[string]*bintree{}},
	}},
	"node": &bintree{nil, map[string]*bintree{
		".dockerignore": &bintree{nodeDockerignore, map[string]*bintree{}},
		"Dockerfile": &bintree{nodeDockerfile, map[string]*bintree{}},
		"NOTICE": &bintree{nodeNotice, map[string]*bintree{}},
		"chart": &bintree{nil, map[string]*bintree{
			".helmignore": &bintree{nodeChartHelmignore, map[string]*bintree{}},
			"Chart.yaml": &bintree{nodeChartChartYaml, map[string]*bintree{}},
			"templates": &bintree{nil, map[string]*bintree{
				"NOTES.txt": &bintree{nodeChartTemplatesNotesTxt, map[string]*bintree{}},
				"_helpers.tpl": &bintree{nodeChartTemplates_helpersTpl, map[string]*bintree{}},
				"deployment.yaml": &bintree{nodeChartTemplatesDeploymentYaml, map[string]*bintree{}},
				"ingress.yaml": &bintree{nodeChartTemplatesIngressYaml, map[string]*bintree{}},
				"service.yaml": &bintree{nodeChartTemplatesServiceYaml, map[string]*bintree{}},
			}},
			"values.yaml": &bintree{nodeChartValuesYaml, map[string]*bintree{}},
		}},
		"detect": &bintree{nodeDetect, map[string]*bintree{}},
	}},
	"php": &bintree{nil, map[string]*bintree{
		".dockerignore": &bintree{phpDockerignore, map[string]*bintree{}},
		"Dockerfile": &bintree{phpDockerfile, map[string]*bintree{}},
		"NOTICE": &bintree{phpNotice, map[string]*bintree{}},
		"chart": &bintree{nil, map[string]*bintree{
			".helmignore": &bintree{phpChartHelmignore, map[string]*bintree{}},
			"Chart.yaml": &bintree{phpChartChartYaml, map[string]*bintree{}},
			"templates": &bintree{nil, map[string]*bintree{
				"NOTES.txt": &bintree{phpChartTemplatesNotesTxt, map[string]*bintree{}},
				"_helpers.tpl": &bintree{phpChartTemplates_helpersTpl, map[string]*bintree{}},
				"deployment.yaml": &bintree{phpChartTemplatesDeploymentYaml, map[string]*bintree{}},
				"ingress.yaml": &bintree{phpChartTemplatesIngressYaml, map[string]*bintree{}},
				"service.yaml": &bintree{phpChartTemplatesServiceYaml, map[string]*bintree{}},
			}},
			"values.yaml": &bintree{phpChartValuesYaml, map[string]*bintree{}},
		}},
		"detect": &bintree{phpDetect, map[string]*bintree{}},
	}},
	"python": &bintree{nil, map[string]*bintree{
		".dockerignore": &bintree{pythonDockerignore, map[string]*bintree{}},
		"Dockerfile": &bintree{pythonDockerfile, map[string]*bintree{}},
		"NOTICE": &bintree{pythonNotice, map[string]*bintree{}},
		"chart": &bintree{nil, map[string]*bintree{
			".helmignore": &bintree{pythonChartHelmignore, map[string]*bintree{}},
			"Chart.yaml": &bintree{pythonChartChartYaml, map[string]*bintree{}},
			"templates": &bintree{nil, map[string]*bintree{
				"NOTES.txt": &bintree{pythonChartTemplatesNotesTxt, map[string]*bintree{}},
				"_helpers.tpl": &bintree{pythonChartTemplates_helpersTpl, map[string]*bintree{}},
				"deployment.yaml": &bintree{pythonChartTemplatesDeploymentYaml, map[string]*bintree{}},
				"ingress.yaml": &bintree{pythonChartTemplatesIngressYaml, map[string]*bintree{}},
				"service.yaml": &bintree{pythonChartTemplatesServiceYaml, map[string]*bintree{}},
			}},
			"values.yaml": &bintree{pythonChartValuesYaml, map[string]*bintree{}},
		}},
		"detect": &bintree{pythonDetect, map[string]*bintree{}},
	}},
	"ruby": &bintree{nil, map[string]*bintree{
		".dockerignore": &bintree{rubyDockerignore, map[string]*bintree{}},
		"Dockerfile": &bintree{rubyDockerfile, map[string]*bintree{}},
		"NOTICE": &bintree{rubyNotice, map[string]*bintree{}},
		"chart": &bintree{nil, map[string]*bintree{
			".helmignore": &bintree{rubyChartHelmignore, map[string]*bintree{}},
			"Chart.yaml": &bintree{rubyChartChartYaml, map[string]*bintree{}},
			"templates": &bintree{nil, map[string]*bintree{
				"NOTES.txt": &bintree{rubyChartTemplatesNotesTxt, map[string]*bintree{}},
				"_helpers.tpl": &bintree{rubyChartTemplates_helpersTpl, map[string]*bintree{}},
				"deployment.yaml": &bintree{rubyChartTemplatesDeploymentYaml, map[string]*bintree{}},
				"ingress.yaml": &bintree{rubyChartTemplatesIngressYaml, map[string]*bintree{}},
				"service.yaml": &bintree{rubyChartTemplatesServiceYaml, map[string]*bintree{}},
			}},
			"values.yaml": &bintree{rubyChartValuesYaml, map[string]*bintree{}},
		}},
		"detect": &bintree{rubyDetect, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

