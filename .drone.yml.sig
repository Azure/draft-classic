eyJhbGciOiJIUzI1NiJ9.d29ya3NwYWNlOgogIGJhc2U6IC9nbwogIHBhdGg6IHNyYy9naXRodWIuY29tL2RlaXMvcHJvdwpwaXBlbGluZToKICB0ZXN0OgogICAgaW1hZ2U6IGdvbGFuZzoxLjguMAogICAgY29tbWFuZHM6CiAgICAgIC0gbWFrZSBib290c3RyYXAKICAgICAgLSBtYWtlIHRlc3QKICBkaXN0LWNhbmFyeToKICAgIGltYWdlOiBnb2xhbmc6MS44LjAKICAgIGNvbW1hbmRzOgogICAgICAtIG1ha2UgYnVpbGQtY3Jvc3MgZG9ja2VyLWJpbmFyeQogICAgICAtIFZFUlNJT049JHtEUk9ORV9DT01NSVR9IG1ha2UgZGlzdCBjaGVja3N1bQogICAgICAtIFZFUlNJT049Y2FuYXJ5IG1ha2UgZGlzdCBjaGVja3N1bQogICAgd2hlbjoKICAgICAgYnJhbmNoOiBtYXN0ZXIKICAgICAgZXZlbnQ6IHB1c2gKICBkaXN0LXJlbGVhc2U6CiAgICBpbWFnZTogZ29sYW5nOjEuOC4wCiAgICBjb21tYW5kczoKICAgICAgLSBtYWtlIGJ1aWxkLWNyb3NzIGRvY2tlci1iaW5hcnkKICAgICAgLSBWRVJTSU9OPSR7RFJPTkVfVEFHfSBtYWtlIGRpc3QgY2hlY2tzdW0KICAgIHdoZW46CiAgICAgIGV2ZW50OiB0YWcKICBkaXN0LXVwbG9hZDoKICAgIGltYWdlOiBwbHVnaW5zL3MzCiAgICBhY2w6IHB1YmxpYy1yZWFkCiAgICByZWdpb246IHVzLXdlc3QtMgogICAgYnVja2V0OiBkZWlzLXByb3cKICAgIGFjY2Vzc19rZXk6ICR7QVdTX0FDQ0VTU19LRVlfSUR9CiAgICBzZWNyZXRfa2V5OiAke0FXU19TRUNSRVRfQUNDRVNTX0tFWX0KICAgIHNvdXJjZTogX2Rpc3QvKgogICAgc3RyaXBfcHJlZml4OiBfZGlzdC8KICAgIHRhcmdldDogLwogICAgd2hlbjoKICAgICAgYnJhbmNoOiBtYXN0ZXIKICAgICAgZXZlbnQ6IFtwdXNoLCB0YWddCiAgZG9ja2VyLWNhbmFyeToKICAgIGltYWdlOiBwbHVnaW5zL2RvY2tlcgogICAgcmVwbzogcXVheS5pby9kZWlzL3Byb3dkCiAgICByZWdpc3RyeTogcXVheS5pbwogICAgdXNlcm5hbWU6ICR7RE9DS0VSX1VTRVJOQU1FfQogICAgcGFzc3dvcmQ6ICR7RE9DS0VSX1BBU1NXT1JEfQogICAgdGFnOgogICAgICAtIGNhbmFyeQogICAgd2hlbjoKICAgICAgYnJhbmNoOiBtYXN0ZXIKICAgICAgZXZlbnQ6IHB1c2gKICBkb2NrZXItcmVsZWFzZToKICAgIGltYWdlOiBwbHVnaW5zL2RvY2tlcgogICAgcmVwbzogcXVheS5pby9kZWlzL3Byb3dkCiAgICByZWdpc3RyeTogcXVheS5pbwogICAgdXNlcm5hbWU6ICR7RE9DS0VSX1VTRVJOQU1FfQogICAgcGFzc3dvcmQ6ICR7RE9DS0VSX1BBU1NXT1JEfQogICAgdGFnOgogICAgICAtICR7RFJPTkVfVEFHfQogICAgd2hlbjoKICAgICAgZXZlbnQ6IHRhZwo.Na_5ho5eNl7aj2fT6ag_81IbY0MUXG8yMzj53bKGYSM