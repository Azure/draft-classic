eyJhbGciOiJIUzI1NiJ9.d29ya3NwYWNlOgogIGJhc2U6IC9nbwogIHBhdGg6IHNyYy9naXRodWIuY29tL2RlaXMvcHJvdwpwaXBlbGluZToKICB0ZXN0LXVuaXQ6CiAgICBpbWFnZTogZ29sYW5nOjEuOC4wCiAgICBjb21tYW5kczoKICAgICAgLSBnbyBnZXQgZ2l0aHViLmNvbS9NYXN0ZXJtaW5kcy9nbGlkZQogICAgICAtIG1ha2UgYm9vdHN0cmFwIGJ1aWxkLWNyb3NzIGRvY2tlci1iaW5hcnkKICAgICAgLSBtYWtlIHRlc3QtdW5pdAogIGRpc3QtY2FuYXJ5OgogICAgaW1hZ2U6IGdvbGFuZzoxLjguMAogICAgY29tbWFuZHM6CiAgICAgIC0gVkVSU0lPTj1jYW5hcnkgbWFrZSBkaXN0IGNoZWNrc3VtCiAgICB3aGVuOgogICAgICBicmFuY2g6IG1hc3RlcgogIGRpc3QtcmVsZWFzZToKICAgIGltYWdlOiBnb2xhbmc6MS44LjAKICAgIGNvbW1hbmRzOgogICAgICAtIFZFUlNJT049JHtEUk9ORV9UQUd9IG1ha2UgZGlzdCBjaGVja3N1bQogICAgd2hlbjoKICAgICAgZXZlbnQ6IHRhZwogIGRpc3QtdXBsb2FkOgogICAgaW1hZ2U6IHBsdWdpbnMvczMKICAgIGFjbDogcHVibGljLXJlYWQKICAgIHJlZ2lvbjogdXMtZWFzdC0xCiAgICBidWNrZXQ6IGRlaXMtcHJvdwogICAgYWNjZXNzX2tleTogJHtBV1NfQUNDRVNTX0tFWV9JRH0KICAgIHNlY3JldF9rZXk6ICR7QVdTX1NFQ1JFVF9BQ0NFU1NfS0VZfQogICAgc291cmNlOiBfZGlzdC8qCiAgICBzdHJpcF9wcmVmaXg6IF9kaXN0LwogICAgdGFyZ2V0OiAvCiAgICB3aGVuOgogICAgICBicmFuY2g6IG1hc3RlcgogICAgICBldmVudDogdGFnCiAgcHVibGlzaC1tYXN0ZXI6CiAgICBpbWFnZTogcGx1Z2lucy9kb2NrZXIKICAgIHJlcG86IHF1YXkuaW8vZGVpcy9wcm93ZAogICAgcmVnaXN0cnk6IHF1YXkuaW8KICAgIHVzZXJuYW1lOiAke0RPQ0tFUl9VU0VSTkFNRX0KICAgIHBhc3N3b3JkOiAke0RPQ0tFUl9QQVNTV09SRH0KICAgIHRhZzoKICAgICAgLSBjYW5hcnkKICAgIHdoZW46CiAgICAgIGJyYW5jaDogbWFzdGVyCiAgICAgIGV2ZW50OiBwdXNoCiAgcHVibGlzaC1yZWxlYXNlOgogICAgaW1hZ2U6IHBsdWdpbnMvZG9ja2VyCiAgICByZXBvOiBxdWF5LmlvL2RlaXMvcHJvd2QKICAgIHJlZ2lzdHJ5OiBxdWF5LmlvCiAgICB1c2VybmFtZTogJHtET0NLRVJfVVNFUk5BTUV9CiAgICBwYXNzd29yZDogJHtET0NLRVJfUEFTU1dPUkR9CiAgICB0YWc6CiAgICAgIC0gJHtEUk9ORV9UQUd9CiAgICB3aGVuOgogICAgICBldmVudDogdGFnCg.uLV1Y3UseRk5EkBuVhpUA968OypSC-UrhCdSTkXFGWM