# Commodity function for e2e tests

TIMEOUT=30

# draftUpAsync outfile <command args> to launch draft async. Return process id.
function draftUpAsync {
    outfile="$1"
    shift
    draft up "$@" >$outfile 2>&1 &
    echo $!
}

# kill draft pid process and clean up temporary directory
function cleanDraftUpAsync {
    kill -9 $2
    rm "$1"
}

# wait for daemon watching based on log output (parameter)
function waitForWatch {
    # we wait for previous operation or detection to happen
    sleep 3
    if [[ "$(cat $1)" =~ .*Watching\ local\ files\ for\ changes\.\.\.$ ]]; then
        echo "true"
        return
    fi
    echo "false"
}

# hasChanged in log output (parameter) after 3s
function hasChanged {
    before=$(cat $1)
    sleep 3
    after=$(cat $1)
    if [[ "$before" != "$after" ]]; then
        echo "true"
        return
    fi
    echo "false"
}

# expect change in log output (parameter)
# returned valued:
#  0: success
# -1: no change
# -2: didn't reach end, timed out
function expectChangeAndWaitForSync {
    outfile=$1
    before=$(cat $outfile)
    # ensure we really have changes
    if [[ $(hasChanged $outfile) != "true" ]]; then
        echo -1
        return
    fi

    # wait now for next watch sync. Timeout after TIMEOUT
    endTime=$(( $(date +%s) + $TIMEOUT ))
    while [[ $(date +%s) -lt $endTime ]]; do
        if [[ "$(cat $outfile)" =~ .*Watching\ local\ files\ for\ changes\.\.\.$ ]]; then
            echo 0
            return
        fi
        sleep 1
    done
    echo -2
    return
}

